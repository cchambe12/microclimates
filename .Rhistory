#note: with only exp chilling, there is only exp photo and force too.
#also: subsetting to exp chill only reduces dataset to 3 species, <9 studies
}
source("source/bbstanleadin.R")
#
# if(use.flags.for.mainmodel){
#   write.csv(bb.stan, "..//output/bbstan_mainmodel_utah_allsppwcrops_allfp_allchill.csv", row.names=FALSE)
# }
#
# if(use.flags.for.allsppmodel){
#   write.csv(bb.stan, "..//output/bbstan_allsppmodel_utahzscore_wcrops_allfp_allchill.csv", row.names=FALSE)
# }
# write.csv(bb.stan, "..//output/bbstan_utahzscore_nocrops_exprampedfp_allchill.csv", row.names=FALSE)
bb.wlat <- bb.stan
bb.wlat <- within(bb.wlat, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlat <- subset(bb.wlat, bb.wlat$prov.lat>1)
lat.num <- subset(bb.wlat, select=c("complex.wname", "prov.lat"))
lat.num <- lat.num[!duplicated(lat.num),]
View(lat.num)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(pez)
library(caper)
library(phangorn)
## set your wd here:
setwd("~/Documents/git/microclimates")
# get the data
gdd.stan <- read.csv("analyses/output/clean_gdd_bbanddvr.csv", header=TRUE)
gdd.stan$spp <- paste(substr(gdd.stan$genus, 0, 3), substr(gdd.stan$species,0,3), sep="")
gdd.stan$site <- NA
gdd.stan$site <- ifelse(gdd.stan$type=="Treespotters", "arb", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Common Garden", "cg", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Harvard Forest", "hf", gdd.stan$site)
gdd.stan <- subset(gdd.stan, select=c("id", "provenance.lat", "spp", "site",
"gdd_bb", "gdd_dvr", "fs.count", "genus", "species"))
gdd.stan <- gdd.stan[!is.na(gdd.stan$provenance.lat),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_bb),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_dvr),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$spp),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_bb<1000),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_dvr<1000),]
gdd.stan$spp <- ifelse(gdd.stan$spp=="NANA", "Quealb", gdd.stan$spp)
# geting a list of all species in ospree
gdd.stan$latbi <- paste(gdd.stan$genus, gdd.stan$species, sep="_")
#sort(unique(bb$latbi))
library(ggplot2)
library(ggtree)
library(phytools)
phy.plants.micro <- read.tree("~/Documents/git/microclimates/phylodata/micro.phylogeny.tre")
newnames <- data.frame(tiplabel=phy.plants.micro$tip.label)
newnames$genus <- gsub("_.*", "", newnames$tiplabel)
newnames$species <- gsub(".*_", "", newnames$tiplabel)
newnames$labels <- paste(newnames$genus, newnames$species)
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
names(tt) <- c("site", "phylo", "freq")
tt$freq <- ifelse(tt$freq==0, NA, tt$freq)
tt <- tt[!is.na(tt$freq),]
tt$freq <- NULL
arb <- tt[(tt$site=="arb"),]
arbids <- unique(arb$phylo)
hf <- tt[(tt$site=="hf"),]
hfids <- unique(hf$phylo)
cg <- tt[(tt$site=="cg"),]
cgids <- unique(cg$phylo)
tiplabels <- data.frame(phylo=unique(tt$phylo))
tiplabels$arb <- ifelse(tiplabels$phylo%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$phylo%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$phylo%in%cgids, 1, 0)
tiplabels <- tiplabels[(tiplabels$phylo!="NA_NA"),]
arb.df<-select_(tiplabels, "arb")
arb.df$col <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-select_(tiplabels, "cg")
cg.df$col <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-select_(tiplabels, "hf")
hf.df$col <- ifelse(hf.df$hf==0, "white", "blue4")
##plot.margin: (t, r, b, l) *think 'trouble'
##plot.margin: (t, r, b, l) *think 'trouble'
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=arb.df$col, x=151) + geom_tippoint(col=cg.df$col, x=152) +
geom_tippoint(col=hf.df$col, x=153) +
xlim(c(0, 150))
quartz()
tree.plot
##plot.margin: (t, r, b, l) *think 'trouble'
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=arb.df$col, x=205) + geom_tippoint(col=cg.df$col, x=207) +
geom_tippoint(col=hf.df$col, x=209) +
xlim(c(0, 200))
tree.plot
##plot.margin: (t, r, b, l) *think 'trouble'
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=arb.df$col, x=180) + geom_tippoint(col=cg.df$col, x=190) +
geom_tippoint(col=hf.df$col, x=200) +
xlim(c(0, 200))
tree.plot
View(tt)
View(arb.df)
arb.df<-select_(tiplabels, "arb")
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-select_(tiplabels, "cg")
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-select_(tiplabels, "hf")
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
foo <- cbind(newnames, arb.df)
View(foo)
arb.df<-select_(tiplabels, "arb", "phylo")
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-select_(tiplabels, "cg", "phylo")
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-select_(tiplabels, "hf", "phylo")
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
foo <- left_join(newnames, arb.df)
View(newnames)
tiplabels <- data.frame(tiplabel=unique(tt$phylo))
tiplabels$arb <- ifelse(tiplabels$phylo%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$phylo%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$phylo%in%cgids, 1, 0)
tiplabels <- tiplabels[(tiplabels$phylo!="NA_NA"),]
tiplabels <- data.frame(tiplabel=unique(tt$phylo))
tiplabels$arb <- ifelse(tiplabels$tiplabel%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$tiplabel%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$tiplabel%in%cgids, 1, 0)
tiplabels <- tiplabels[(tiplabels$tiplabel!="NA_NA"),]
arb.df<-select_(tiplabels, "arb", "tiplabel")
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-select_(tiplabels, "cg", "tiplabel")
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-select_(tiplabels, "hf", "tiplabel")
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
foo <- left_join(newnames, arb.df)
View(arb.df)
arb.df<-subset(tiplabels, select=c("arb", "tiplabel"))
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-subset(tiplabels, select=c("cg", "tiplabel"))
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-subset(tiplabels, select=c("hf", "tiplabel"))
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
class(arb.df$tiplabel)
options(stringsAsFactors = FALSE)
arb.df<-subset(tiplabels, select=c("arb", "tiplabel"))
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-subset(tiplabels, select=c("cg", "tiplabel"))
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-subset(tiplabels, select=c("hf", "tiplabel"))
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
class(arb.df$tiplabel)
arb.df<-subset(tiplabels, select=c("arb", "tiplabel"))
arb.df$tiplabel<-as.character(arb.df$tiplabel)
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-subset(tiplabels, select=c("cg", "tiplabel"))
arb.df$tiplabel<-as.character(arb.df$tiplabel)
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-subset(tiplabels, select=c("hf", "tiplabel"))
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
foo <- left_join(newnames, arb.df)
foo <- left_join(foo, cg.df)
arb.df<-subset(tiplabels, select=c("arb", "tiplabel"))
arb.df$tiplabel<-as.character(arb.df$tiplabel)
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-subset(tiplabels, select=c("cg", "tiplabel"))
cg.df$tiplabel<-as.character(cg.df$tiplabel)
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-subset(tiplabels, select=c("hf", "tiplabel"))
hf.df$tiplabel<-as.character(hf.df$tiplabel)
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
foo <- left_join(newnames, arb.df)
foo <- left_join(foo, cg.df)
foo <- left_join(foo, hf.df)
##plot.margin: (t, r, b, l) *think 'trouble' ## need to reorder color labels!!
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=fo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=foo$arbcol, x=180) + geom_tippoint(col=foo$cgcol, x=190) +
geom_tippoint(col=foo$hfcol, x=200) +
xlim(c(0, 200))
##plot.margin: (t, r, b, l) *think 'trouble' ## need to reorder color labels!!
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=foo$arbcol, x=180) + geom_tippoint(col=foo$cgcol, x=190) +
geom_tippoint(col=foo$hfcol, x=200) +
xlim(c(0, 200))
tree.plot
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
names(tt) <- c("site", "phylo", "freq")
tt$freq <- ifelse(tt$freq==0, NA, tt$freq)
View(tt)
tiplabels <- data.frame(tiplabel=unique(tt$phylo))
tiplabels$arb <- ifelse(tiplabels$tiplabel%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$tiplabel%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$tiplabel%in%cgids, 1, 0)
tiplabels <- tiplabels[(tiplabels$tiplabel!="Quercus_alba"),]
arb.df<-subset(tiplabels, select=c("arb", "tiplabel"))
arb.df$tiplabel<-as.character(arb.df$tiplabel)
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-subset(tiplabels, select=c("cg", "tiplabel"))
cg.df$tiplabel<-as.character(cg.df$tiplabel)
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-subset(tiplabels, select=c("hf", "tiplabel"))
hf.df$tiplabel<-as.character(hf.df$tiplabel)
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
foo <- left_join(newnames, arb.df)
foo <- left_join(foo, cg.df)
foo <- left_join(foo, hf.df)
##plot.margin: (t, r, b, l) *think 'trouble' ## need to reorder color labels!!
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=foo$arbcol, x=180) + geom_tippoint(col=foo$cgcol, x=190) +
geom_tippoint(col=foo$hfcol, x=200) +
xlim(c(0, 200))
tree.plot
View(tiplabels)
newnames <- data.frame(tiplabel=phy.plants.micro$tip.label)
newnames$genus <- gsub("_.*", "", newnames$tiplabel)
newnames$species <- gsub(".*_", "", newnames$tiplabel)
newnames$labels <- paste(newnames$genus, newnames$species)
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
names(tt) <- c("site", "phylo", "freq")
tt$freq <- ifelse(tt$freq==0, NA, tt$freq)
tt$freq <- ifelse(tt$site=="cg" & tt$phylo=="Quercus_alba", 1, tt$freq)
tt <- tt[!is.na(tt$freq),]
tt$freq <- NULL
arb <- tt[(tt$site=="arb"),]
arbids <- unique(arb$phylo)
hf <- tt[(tt$site=="hf"),]
hfids <- unique(hf$phylo)
cg <- tt[(tt$site=="cg"),]
cgids <- unique(cg$phylo)
tiplabels <- data.frame(tiplabel=unique(tt$phylo))
tiplabels$arb <- ifelse(tiplabels$tiplabel%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$tiplabel%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$tiplabel%in%cgids, 1, 0)
arb.df<-subset(tiplabels, select=c("arb", "tiplabel"))
arb.df$tiplabel<-as.character(arb.df$tiplabel)
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-subset(tiplabels, select=c("cg", "tiplabel"))
cg.df$tiplabel<-as.character(cg.df$tiplabel)
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-subset(tiplabels, select=c("hf", "tiplabel"))
hf.df$tiplabel<-as.character(hf.df$tiplabel)
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
foo <- left_join(newnames, arb.df)
foo <- left_join(foo, cg.df)
foo <- left_join(foo, hf.df)
##plot.margin: (t, r, b, l) *think 'trouble' ## need to reorder color labels!!
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=foo$arbcol, x=180) + geom_tippoint(col=foo$cgcol, x=190) +
geom_tippoint(col=foo$hfcol, x=200) +
xlim(c(0, 200))
tree.plot
View(tt)
table(gdd.stan$spp, gdd.stan$site)
##plot.margin: (t, r, b, l) *think 'trouble' ##
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=foo$arbcol, x=185) + geom_tippoint(col=foo$cgcol, x=190) +
geom_tippoint(col=foo$hfcol, x=195) +
xlim(c(0, 200))
tree.plot
##plot.margin: (t, r, b, l) *think 'trouble' ##
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=foo$arbcol, x=175) + geom_tippoint(col=foo$cgcol, x=180) +
geom_tippoint(col=foo$hfcol, x=185) +
xlim(c(0, 200))
tree.plot
##plot.margin: (t, r, b, l) *think 'trouble' ##
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=foo$arbcol, x=175) + geom_tippoint(col=foo$cgcol, x=180) +
geom_tippoint(col=foo$hfcol, x=185) +
xlim(c(0, 200)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
tree.plot
##plot.margin: (t, r, b, l) *think 'trouble' ##
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines"), legend.position = "right") + geom_tippoint(col=foo$arbcol, x=175) + geom_tippoint(col=foo$cgcol, x=180) +
geom_tippoint(col=foo$hfcol, x=185) +
xlim(c(0, 200)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
tree.plot
cols <- c("red", "darkgreen", "blue4")
##plot.margin: (t, r, b, l) *think 'trouble' ##
tree.plot <- ggtree(phy.plants.micro, aes(col=cols))  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines"), legend.position = "right") + geom_tippoint(col=foo$arbcol, x=175) + geom_tippoint(col=foo$cgcol, x=180) +
geom_tippoint(col=foo$hfcol, x=185) +
xlim(c(0, 200)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
tree.plot
ggplot(cols)
cols <- data.frame(col=c("red", "darkgreen", "blue4"), site=c("Arboretum", "Common Garden", "Harvard Forest")
cols <- data.frame(col=c("red", "darkgreen", "blue4"), site=c("Arboretum", "Common Garden", "Harvard Forest"))
ggplot(cols, aes(col=col))
ggplot(cols, aes(col=col)) + geom_point()
ggplot(cols, aes(col=col)) + geom_point(x=site, y=col)
ggplot(cols, aes(col=col)) + geom_point(aes(x=site, y=col))
ggplot(cols, aes(col=col)) + geom_point(aes(x=site, y=col)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
ggplot(cols, aes(col=col)) + geom_point(aes(x=site, y=col)) + theme(legend.key = element_rect(fill="transparent")) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
leg <- ggplot(cols, aes(col=col)) + geom_point(aes(x=site, y=col)) + theme(legend.key = element_rect(fill="transparent")) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
g_legend<-function(a.gplot){ ### remember to rerun que with - legend.position = "none" - commented out
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(leg)
ggarrange(tree.plot, mylegend)
tree.plot
View(foo)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(pez)
library(caper)
library(phangorn)
## set your wd here:
setwd("~/Documents/git/microclimates")
# get the data
gdd.stan <- read.csv("analyses/output/clean_gdd_bbanddvr.csv", header=TRUE)
gdd.stan$spp <- paste(substr(gdd.stan$genus, 0, 3), substr(gdd.stan$species,0,3), sep="")
gdd.stan$site <- NA
gdd.stan$site <- ifelse(gdd.stan$type=="Treespotters", "arb", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Common Garden", "cg", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Harvard Forest", "hf", gdd.stan$site)
gdd.stan <- subset(gdd.stan, select=c("id", "provenance.lat", "spp", "site",
"gdd_bb", "gdd_dvr", "fs.count", "genus", "species"))
gdd.stan <- gdd.stan[!is.na(gdd.stan$provenance.lat),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_bb),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_dvr),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$spp),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_bb<1000),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_dvr<1000),]
gdd.stan$spp <- ifelse(gdd.stan$spp=="NANA", "Quealb", gdd.stan$spp)
# geting a list of all species in ospree
gdd.stan$latbi <- paste(gdd.stan$genus, gdd.stan$species, sep="_")
#sort(unique(bb$latbi))
library(ggplot2)
library(ggtree)
library(phytools)
phy.plants.micro <- read.tree("~/Documents/git/microclimates/phylodata/micro.phylogeny.tre")
newnames <- data.frame(tiplabel=phy.plants.micro$tip.label)
newnames$genus <- gsub("_.*", "", newnames$tiplabel)
newnames$species <- gsub(".*_", "", newnames$tiplabel)
newnames$labels <- paste(newnames$genus, newnames$species)
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
names(tt) <- c("site", "phylo", "freq")
tt$freq <- ifelse(tt$freq==0, NA, tt$freq)
tt$freq <- ifelse(tt$site=="cg" & tt$phylo=="Quercus_alba", 1, tt$freq)
tt <- tt[!is.na(tt$freq),]
tt$freq <- NULL
arb <- tt[(tt$site=="arb"),]
arbids <- unique(arb$phylo)
hf <- tt[(tt$site=="hf"),]
hfids <- unique(hf$phylo)
cg <- tt[(tt$site=="cg"),]
cgids <- unique(cg$phylo)
tiplabels <- data.frame(tiplabel=unique(tt$phylo))
tiplabels$arb <- ifelse(tiplabels$tiplabel%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$tiplabel%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$tiplabel%in%cgids, 1, 0)
#tiplabels <- tiplabels[(tiplabels$tiplabel!="Quercus_alba"),]
arb.df<-subset(tiplabels, select=c("arb", "tiplabel"))
arb.df$tiplabel<-as.character(arb.df$tiplabel)
arb.df$arbcol <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-subset(tiplabels, select=c("cg", "tiplabel"))
cg.df$tiplabel<-as.character(cg.df$tiplabel)
cg.df$cgcol <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-subset(tiplabels, select=c("hf", "tiplabel"))
hf.df$tiplabel<-as.character(hf.df$tiplabel)
hf.df$hfcol <- ifelse(hf.df$hf==0, "white", "blue4")
foo <- left_join(newnames, arb.df)
foo <- left_join(foo, cg.df)
foo <- left_join(foo, hf.df)
colslegend <- data.frame(collabels=c("red", "darkgreen", "blue4"), site=c("Arboretum", "Common Garden", "Harvard Forest"))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) + theme(legend.key = element_rect(fill="transparent")) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
g_legend<-function(a.gplot){ ### remember to rerun que with - legend.position = "none" - commented out
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(leg)
##plot.margin: (t, r, b, l) *think 'trouble' ##
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines"), legend.position = "right") + geom_tippoint(col=foo$arbcol, x=175) + geom_tippoint(col=foo$cgcol, x=180) +
geom_tippoint(col=foo$hfcol, x=185) +
xlim(c(0, 200))
quartz()
ggarrange(tree.plot, mylegend)
g2 <- grid.arrange(mylegend)
ggarrange(tree.plot, g2)
g2
g2 <- plot(mylegend)
ggarrange(tree.plot, g2)
grid.arrange(tree.plot, g2)
tree.plot
grid.arrange(tree.plot, plot(g2))
grid.arrange(tree.plot, plot(mylegend))
ggarrange(tree.plot, plot(mylegend))
plot(mylegend)
tree.plot
legend <- cowplot::get_legend(leg)
install.packages("cowplot")
library(cowplot)
legend <- cowplot::get_legend(leg)
ggarrange(tree.plot, legend)
grid.arrange(tree.plot, legend)
grid.arrange(tree.plot, legend, ncol=2)
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.75))
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.25))
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.1))
##plot.margin: (t, r, b, l) *think 'trouble' ##
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,1,1,1), "lines"), legend.position = "right") + geom_tippoint(col=foo$arbcol, x=175) + geom_tippoint(col=foo$cgcol, x=180) +
geom_tippoint(col=foo$hfcol, x=185) +
xlim(c(0, 200))
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.1))
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.5))
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.75))
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.1))
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.3))
grid.arrange(tree.plot, legend, ncol=2, widths=c(2, 0.5))
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
##plot.margin: (t, r, b, l) *think 'trouble' ##
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=foo$labels, fontface='italic') +
theme(plot.margin = unit(c(1,0,1,1), "lines"), legend.position = "right") + geom_tippoint(col=foo$arbcol, x=175) + geom_tippoint(col=foo$cgcol, x=180) +
geom_tippoint(col=foo$hfcol, x=185) +
xlim(c(0, 200))
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=5),
legend.title = element_text(size=6)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
legend <- cowplot::get_legend(leg)
legend
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=8),
legend.title = element_text(size=9)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
quartz()
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=10),
legend.title = element_text(size=11)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
legend <- cowplot::get_legend(leg)
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=9),
legend.title = element_text(size=10)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
legend <- cowplot::get_legend(leg)
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=7),
legend.title = element_text(size=8)) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
legend <- cowplot::get_legend(leg)
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=7),
legend.title = element_text(size=8), legend.box = element_rect(col="black")) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
legend <- cowplot::get_legend(leg)
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=7),
legend.title = element_text(size=8), legend.box.background = element_rect(col="black")) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
quartz()
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=7),
legend.title = element_text(size=8), legend.box.background = element_rect(col="black"),
plot.margin = unit(c(1,0,1,0), "lines")) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=7),
legend.title = element_text(size=8),
plot.margin = unit(c(1,0,1,0), "lines")) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
legend <- cowplot::get_legend(leg)
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
leg <- ggplot(colslegend, aes(col=collabels)) + geom_point(aes(x=site, y=collabels)) +
theme(legend.key = element_rect(fill="transparent"), legend.text = element_text(size=7),
legend.title = element_text(size=8),
plot.margin = unit(c(0,0,0,0), "lines")) +
scale_colour_manual(name="Site", labels=c("Arboretum", "Common Garden", "Harvard Forest"),
values=c("red", "darkgreen", "blue4"))
legend <- cowplot::get_legend(leg)
grid.arrange(tree.plot, legend, ncol=2, widths=c(3, 0.75))
