results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
View(goo)
View(trx)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx <- left_join(trx, classes)
View(trx)
View(classes)
trx$group <- ifelse(trx$scientific_name=="Corvus brachyrhynchos", "Bird", trx$group)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$scientific_name=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$scientific_name=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$scientific_name=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$scientific_name=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$scientific_name=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$scientific_name=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$scientific_name=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$taxa=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$taxa=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$taxa=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$taxa=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
trx <- left_join(trx, classes)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, subset=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa"))
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
goo <- full_join(results, trx)
howmanymatch <- unique(trx$image)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(foo)
goo <- left_join(results, trx)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(goo)
709/821
(exp(-0.48)-1)*100
(exp(0.14)-1)*100
(exp(0.4)-1)*100
(exp(0.19)-1)*100
(exp(0.35)-1)*100
(exp(0.42)-1)*100
(exp(-0.83)-1)*100
load("/Users/catchamberlain/Documents/git/regionalrisk/orig_full.Rdata")
orig.full
(exp(-0.12)-1)*100
broom::tidy(orig.full)
(exp(0.0008967095)-1)*100
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(pez)
library(caper)
library(phangorn)
## set your wd here:
setwd("~/Documents/git/microclimates")
# get the data
gdd.stan <- read.csv("analyses/output/clean_gdd_bbanddvr.csv", header=TRUE)
gdd.stan$spp <- paste(substr(gdd.stan$genus, 0, 3), substr(gdd.stan$species,0,3), sep="")
gdd.stan$site <- NA
gdd.stan$site <- ifelse(gdd.stan$type=="Treespotters", "arb", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Common Garden", "cg", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Harvard Forest", "hf", gdd.stan$site)
gdd.stan <- subset(gdd.stan, select=c("id", "provenance.lat", "spp", "site",
"gdd_bb", "gdd_dvr", "fs.count", "genus", "species"))
gdd.stan <- gdd.stan[!is.na(gdd.stan$provenance.lat),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_bb),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_dvr),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$spp),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_bb<1000),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_dvr<1000),]
gdd.stan$spp <- ifelse(gdd.stan$spp=="NANA", "Quealb", gdd.stan$spp)
# geting a list of all species in ospree
gdd.stan$latbi <- paste(gdd.stan$genus, gdd.stan$species, sep="_")
#sort(unique(bb$latbi))
sps.list=sort(unique(gdd.stan$latbi))
genus.list=sort(unique(gdd.stan$genus))
## load phylogeny
## load phylo (from Zanne et al. 2014)
#phy.plants<-read.tree("data/phylogeny/Vascular_Plants_rooted.dated.tre")
phy.plants<-read.tree("~/Documents/git/microclimates/phylodata/Vascular_Plants_rooted.dated.tre")
## getting a list of genera in Zanne's phylo
phy.genera<-unlist(
lapply(strsplit(phy.plants$tip.label, "_"),function(x){return(x[1])})
)
phy.genera.uniq<-sort(unique(phy.genera))
## how many microclimate genera are in the phylogeny?
microgenus.inphylo<-genus.list[which(genus.list%in%phy.genera.uniq)]
## first prune the phylogeny to include only these genera
phy.genera.micro<-drop.tip(phy.plants,
which(!phy.genera%in%microgenus.inphylo))
## we can add species that may not be present according to their genera
names.to.add=sps.list[which(!sps.list%in%phy.genera.micro$tip.label)]
phy.micro.clean<-congeneric.merge(phy.genera.micro,names.to.add,split="_")
## prunning the generated phylogeny to include micro species only
phy.plants.micro<-drop.tip(phy.micro.clean,
which(!phy.micro.clean$tip.label%in%sps.list))
# only 32 species are in the phylogeny
plot(phy.plants.micro,cex=.5)
install.packages(c("ape", "geiger", "pez", "caper", "phangorn"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
### Let's build a prettier phylogeny now..
library(ggplot2)
library(ggtree)
phy.plants.micro <- read.tree("~/Documents/git/microclimates/phylodata/micro.phylogeny.tre")
newnames <- data.frame(tiplabel=phy.plants.micro$tip.label)
newnames$genus <- gsub("_.*", "", newnames$tiplabel)
newnames$species <- gsub(".*_", "", newnames$tiplabel)
newnames$labels <- paste(newnames$genus, newnames$species)
newnames$labels <- italic(newnames$labels)
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) +
xlim(c(0, 200))
quartz()
tree.plot
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) +
xlim(c(0, 150))
tree.plot
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$spp))
View(tt)
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$phylo))
View(gdd.stan)
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
View(tt)
names(tt) <- c("site", "phylo", "freq")
tt$freq <- ifelse(tt$freq==0, NA, tt$freq)
tt <- tt[!is.na(tt$freq),]
View(tt)
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + geom_tippoint(aes(col=tt$site)) +
xlim(c(0, 150))
tree.plot
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
names(tt) <- c("site", "phylo", "freq")
tt$freq <- ifelse(tt$freq==0, NA, tt$freq)
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + geom_tippoint(aes(col=tt$site)) +
xlim(c(0, 150))
tree.plot
tt <- tt[!is.na(tt$freq),]
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + geom_tippoint(col=tt$site) +
xlim(c(0, 150))
tree.plot
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + #geom_tippoint(tt$site) +
xlim(c(0, 150))
tree.plot <- tree.plot %<+% tt + geom_tippoint(aes(color=site))
tree.plot
tree.plot <- tree.plot %<+% + geom_tippoint(aes(color=tt$site))
tree <- read.tree(text = "(((A,B),(C,D)),E);")
tree
p <- ggtree(tree)
p
dd <- data.frame(taxa  = LETTERS[1:5], country = c(rep("FRA", 2), rep("UK", 2), rep("USA", 1)))
dd
row.names(dd) <- NULL
dd
print(dd)
p <- p %<+% dd + geom_tippoint(aes(color=country))
p
phy.plants.micro$node.label
phy.plants.micro$tip.label
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + #geom_tippoint(tt$site) +
xlim(c(0, 150))
tree.plot <- tree.plot %<+% tt + geom_tippoint(aes(group=c(phylo, site)))
tree.plot
tree.plot <- tree.plot %<+% tt + geom_tippoint(aes(group=c(phylo, site), data=tt))
tree.plot
tree.plot <- tree.plot %<+% tt + geom_tippoint(aes(group=c(tt$phylo, tt$site)))
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + #geom_tippoint(tt$site) +
xlim(c(0, 150))
tree.plot <- tree.plot %<+% tt + geom_tippoint(aes(group=c(tt$phylo, tt$site)))
tree.plot
quartz()
foo <- separate(tt, -freq)
foo <- separate(tt, "phylo", "arb", "cg", "hf", -freq)
foo <- separate(tt, "phylo", "arb", "cg", "hf")
View(tt)
tt$freq <- NULL
foo <- separate(tt, "phylo", "arb", "cg", "hf")
foo <- separate(tt, "phylo", "arb")
View(foo)
foo <- spread(tt, "phylo", "arb", "cg", "hf")
foo <- spread(tt, "phylo", "site")
foo <- spread(tt)
foo <- spread(tt, "site")
foo <- spread(tt, site)
foo <- spread(tt, key=site)
foo <- spread(tt, site, phylo)
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + geom_tippoint(tt$site, lable=tt$phylo) +
xlim(c(0, 150))
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + geom_tippoint(col=tt$site, lable=tt$phylo) +
xlim(c(0, 150))
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + geom_tippoint(col=tt$site, label=tt$phylo) +
xlim(c(0, 150))
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
names(tt) <- c("site", "phylo", "freq")
View(tt)
tiplabels <- data.frame(phylo=unique(tt$phylo))
View(tiplabels)
tiplabels <- tiplabels[(tiplabels!="NA_NA"),]
tiplabels <- data.frame(phylo=unique(tt$phylo))
tiplabels <- tiplabels[(tiplabels$phylo!="NA_NA"),]
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
names(tt) <- c("site", "phylo", "freq")
tt$freq <- ifelse(tt$freq==0, NA, tt$freq)
tt <- tt[!is.na(tt$freq),]
tt$freq <- NULL
tiplabels <- data.frame(phylo=unique(tt$phylo))
tiplabels <- tiplabels[(tiplabels$phylo!="NA_NA"),]
tiplabels <- data.frame(phylo=unique(tt$phylo))
arb <- tt[(tt$site=="arb"),]
View(arb)
arbids <- unique(arb$phylo)
hfids <- unique(hf$phylo)
hf <- tt[(tt$site=="hf"),]
hfids <- unique(hf$phylo)
cg <- tt[(tt$site=="cg"),]
cgids <- unique(cg$phylo)
tiplabels$arb <- ifelse(tiplables$arb%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplables$hf%in%hfids, 1, 0)
tiplabels$arb <- ifelse(tiplabels$arb%in%arbids, 1, 0)
tiplabels$arb <- ifelse(tiplabels$phylo%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$phylo%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$phylo%in%cgids, 1, 0)
View(tiplabels)
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(0,1,1,1), "lines")) + geom_tippoint(aes(col=tiplabels$arb[(tiplabels$arb==1)])) +
xlim(c(0, 150))
tree.plot
dotTree(phy.micro.clean,tiplabels,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
library(phytools)
dotTree(phy.micro.clean,tiplabels,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
colors2<-setNames(c("red","transparent"),c("arb"))
dotTree(phy.micro.clean,tiplabels,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
dotTree(phy.plants.micro,tiplabels,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
dotTree(phy.plants.micro,arb.df,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
arb.df<-select_(tiplabels, "arb")
dotTree(phy.plants.micro,arb.df,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
arb.df<-select_(tiplabels, "arb")
colors2<-setNames(c("red","transparent"),c("arb"))
View(arb.df)
arb.df$col <- ifelse(arb.df$arb==0, "transparent", "red")
dotTree(phy.plants.micro,arb.df,legend=TRUE,fsize=.5,ftype="i",colors=arb.df$col)
dotTree(phy.plants.micro,arb.df,legend=TRUE,fsize=.5,ftype="i",colors=col)
cols <- c("transparent", "red")
dotTree(phy.plants.micro,arb.df,legend=TRUE,fsize=.5,ftype="i",colors=cols)
colors2<-setNames(c("white","red"),c(0, 1))
dotTree(phy.plants.micro,arb.df,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
dotTree(phy.plants.micro,arb,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
dotTree(phy.plants.micro,legend=TRUE,fsize=.5,ftype="i",colors=colors2)
dotTree(phy.plants.micro, arb.df,legend=TRUE,fsize=.5,ftype="i")
dotTree(phy.plants.micro, legend=TRUE,fsize=.5,ftype="i")
dotTree(phy.plants.micro, arb,legend=TRUE,fsize=.5,ftype="i")
dotTree(phy.plants.micro, newnames,legend=TRUE,fsize=.5,ftype="i")
View(arb)
arb.df<-select_(tiplabels, "arb")
View(arb.df)
tiplabels <- data.frame(phylo=unique(tt$phylo))
tiplabels <- tiplabels[(tiplabels$phylo!="NA_NA"),]
tiplabels$arb <- ifelse(tiplables$arb%in%arbids, 1, 0)
tiplabels$arb <- ifelse(tiplabels$phylo%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$phylo%in%hfids, 1, 0)
tt <- as.data.frame(table(gdd.stan$site, gdd.stan$latbi))
names(tt) <- c("site", "phylo", "freq")
tt$freq <- ifelse(tt$freq==0, NA, tt$freq)
tt <- tt[!is.na(tt$freq),]
tt$freq <- NULL
arb <- tt[(tt$site=="arb"),]
arbids <- unique(arb$phylo)
hf <- tt[(tt$site=="hf"),]
hfids <- unique(hf$phylo)
cg <- tt[(tt$site=="cg"),]
cgids <- unique(cg$phylo)
tiplabels <- data.frame(phylo=unique(tt$phylo))
tiplabels <- tiplabels[(tiplabels$phylo!="NA_NA"),]
tiplabels$arb <- ifelse(tiplabels$phylo%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$phylo%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$phylo%in%cgids, 1, 0)
tiplabels <- data.frame(phylo=unique(tt$phylo))
tiplabels$arb <- ifelse(tiplabels$phylo%in%arbids, 1, 0)
tiplabels$hf <- ifelse(tiplabels$phylo%in%hfids, 1, 0)
tiplabels$cg <- ifelse(tiplabels$phylo%in%cgids, 1, 0)
tiplabels <- tiplabels[(tiplabels$phylo!="NA_NA"),]
arb.df<-select_(tiplabels, "arb")
colors2<-setNames(c("white","red"),c(0, 1))
dotTree(phy.plants.micro,arb.df, newnames,legend=TRUE,fsize=.5,ftype="i", col=colors2)
dotTree(phy.plants.micro,arb.df, newnames,legend=TRUE,fsize=.5,ftype="i", color=colors2)
dotTree(phy.plants.micro,arb.df, newnames,legend=TRUE,fsize=.5,ftype="i")
, color=colors2
dotTree(phy.plants.micro,arb.df, newnames,legend=TRUE,fsize=.5,ftype="i", color=colors2)
View(arb.df)
arb.df$col <- ifelse(arb.df$arb==0, "white", "red")
##plot.margin: (t, r, b, l) *think 'trouble'
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=arb.df$col) +
xlim(c(0, 150))
tree.plot
arb.df<-select_(tiplabels, "arb")
arb.df$col <- ifelse(arb.df$arb==0, "white", "red")
cg.df<-select_(tiplabels, "cg")
cg.df$col <- ifelse(cg.df$cg==0, "white", "darkgreen")
hf.df<-select_(tiplabels, "hf")
hf.df$col <- ifelse(hf.df$hf==0, "white", "blue4")
##plot.margin: (t, r, b, l) *think 'trouble'
tree.plot <- ggtree(phy.plants.micro)  + geom_tiplab(size=3, label=newnames$labels, fontface='italic') +
theme(plot.margin = unit(c(1,3,1,1), "lines")) + geom_tippoint(col=arb.df$col) + geom_tippoint(col=cg.df$col) +
geom_tippoint(col=hf.df$col) +
xlim(c(0, 150))
tree.plot
colors<-setNames(c("white","red"),c("0","1"))
dotTree(phy.plants.micro,arb.df,colors=colors,data.type="discrete",fsize=0.7,x.space=0.05)
dotTree(phy.plants.micro,tiplabels,colors=colors,data.type="discrete",fsize=0.7,x.space=0.05)
dotTree(phy.plants.micro,tiplabels,data.type="discrete",fsize=0.7,x.space=0.05)
arb.df<-arb.df[(arb.df$arb)]
dotTree(phy.plants.micro,arb.df, colors=colors,data.type="discrete",fsize=0.7,x.space=0.05)
arb.df<-arb.df$arb
dotTree(phy.plants.micro,arb.df,colors=colors,data.type="discrete",fsize=0.7,x.space=0.05)
colors<-setNames(c("white","red"),c(0,1))
dotTree(phy.plants.micro,arb.df,colors=colors,data.type="discrete",fsize=0.7,x.space=0.05)
