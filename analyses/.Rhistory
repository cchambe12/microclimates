#}
}
sitesarray[,,i] <- yearlyresults
}
nyears<-length(period)
sitesarray <- array(NA, dim=c(length(period), 2, 1:nsites))
row.names(sitesarray)<-period
colnames(sitesarray) <- c("mst", "dvrtemps")
for(i in 1:nsites){#i=1
print(i)
springtemps <- vector()
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 2))
for(j in period){#j=2016
print(paste(i,j))
yearj <- length(period)
springtemps <- cc.dvr[(cc.dvr$doy>=60 & cc.dvr$doy<=151 & cc.dvr$year==j),] # average spring temp from March 1-May 31
springtemps <- springtemps[,(i+3)] ### finding the correct column for the climate type we're using
for(l in 1:ninds){
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
yearlyresults[which(period==j), 2] <- mean(dvrtemps, na.rm=TRUE)
}
yearlyresults[which(period==j),1] <- mean(springtemps, na.rm=TRUE)
#for(k in 1:nsites){
# dvr$mst[which(dvr$year==j & dvr$siteslist==i)]<-yearlyresults
#}
}
sitesarray[,,i] <- yearlyresults
}
for(l in 1:ninds){
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
yearlyresults[which(period==j), 2] <- mean(dvrtemps, na.rm=TRUE)
}
dvr <- springtemps(period)
rm(list=ls())
options(stringsAsFactors = FALSE)
## Load Libraries
library(dplyr)
library(tidyr)
# Set Working Directory
setwd("~/Documents/git/microclimates/analyses")
## Data!
dvr<-read.csv("output/clean_budburstandleafout.csv", header=TRUE)
prov <- read.csv("input/provenanceinfo.csv", header=TRUE)
## Now some climate data!
cc <- read.csv("output/clean_addinclimate.csv", header=TRUE)
### For this question, only need daily tmean so I will condense below
cc.dvr <- subset(cc, select=c("date", "year", "doy", "tmean", "climatetype"))
cc.dvr$tmean <- ave(cc.dvr$tmean, cc.dvr$date, cc.dvr$climatetype)
cc.dvr <- cc.dvr[!duplicated(cc.dvr),]
cc.dvr <- cc.dvr %>%
spread(climatetype, tmean)
### Now let's prepare the dvr dataframe for merging climate data
dvr$risk <- dvr$leafout - dvr$budburst
dvr <- dvr[!is.na(dvr$risk),]
dvr$climatetype <- ifelse(dvr$type=="Treespotters" | dvr$type=="Common Garden", "weldhill", "harvardforest")
### Okay, now we can run the function to find mean spring temperature and mean temperature during DVR for each
# site, individual and year. Mean spring temp will be from March 1 - May 31
period<-2015:2019
#nsites <- ncol(cc.dvr) - 3 ## this is to subtract date, doy, and year columns from site count
sites <- arrange(as.data.frame(subset(dvr, select=c("climatetype"))), climatetype)
sites <- as.data.frame(sites[!duplicated(sites),])
sites <-na.omit(sites)
nsites <- length(unique(sites$`sites[!duplicated(sites), ]`))
sites$siteslist<-1:nsites
colnames(sites)<-c("climatetype", "siteslist")
dvr$siteslist <- NA
for(i in c(1:nrow(dvr))){
for(j in c(1:nrow(sites)))
dvr$siteslist[i] <- ifelse(dvr$climatetype[i]==sites$climatetype[j], sites$siteslist[j], dvr$siteslist[i])
}
individuals <- as.data.frame(subset(dvr, select=c("id")))
individuals <- as.data.frame(individuals[!duplicated(individuals),])
ninds <- nrow(individuals)
individuals$indslist<-1:ninds
colnames(individuals)<-c("id", "indslist")
dvr$indslist <- NA
for(i in c(1:nrow(dvr))){
for(j in c(1:nrow(individuals)))
dvr$indslist[i] <- ifelse(dvr$id[i]==individuals$id[j], individuals$indslist[j], dvr$indslist[i])
}
springtemps <- function(period) {
nyears<-length(period)
sitesarray <- array(NA, dim=c(length(period), 1:nsites))
row.names(sitesarray)<-period
colnames(sitesarray) <- "mst"
for(i in 1:nsites){#i=1
print(i)
springtemps <- vector()
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 1))
for(j in period){#j=2016
print(paste(i,j))
yearj <- length(period)
springtemps <- cc.dvr[(cc.dvr$doy>=60 & cc.dvr$doy<=151 & cc.dvr$year==j),] # average spring temp from March 1-May 31
springtemps <- springtemps[,(i+3)] ### finding the correct column for the climate type we're using
yearlyresults[which(period==j),1] <- mean(springtemps, na.rm=TRUE)
}
sitesarray[,,i] <- yearlyresults
}
sitesdf <- as.data.frame(sitesarray)
names(sitesdf) <- substring(names(sitesdf), 5)
dvr$mst <- NA
for(k in c(1:nrow(dvr))){#k=1
dvr$mst[k]<-sitesdf[which(dvr$year[k]==row.names(sitesdf)),dvr$siteslist[k]]
}
return(dvr)
}
dvr <- springtemps(period)
dvrtemps <- function(period) {
nyears<-length(period)
sitesarray <- array(NA, dim=c(length(period), 1:nsites))
row.names(sitesarray)<-period
colnames(sitesarray) <- "dvrtemps"
for(i in 1:nsites){#i=1
print(i)
springtemps <- vector()
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 1))
for(j in period){#j=2016
print(paste(i,j))
yearj <- length(period)
for(l in 1:ninds){
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
yearlyresults[which(period==j),1] <- mean(springtemps, na.rm=TRUE)
}
sitesarray[,,i] <- yearlyresults
}
sitesdf <- as.data.frame(sitesarray)
names(sitesdf) <- substring(names(sitesdf), 5)
dvr$dvrtemps <- NA
for(k in c(1:nrow(dvr))){#k=1
dvr$dvrtemps[k]<-sitesdf[which(dvr$year[k]==row.names(sitesdf)),dvr$siteslist[k]]
}
return(dvr)
}
yearlyresults[which(period==j), 2] <- mean(dvrtemps, na.rm=TRUE)
}
dvrtempfunc <- function(period) {
nyears<-length(period)
sitesarray <- array(NA, dim=c(length(period), 1:nsites))
row.names(sitesarray)<-period
colnames(sitesarray) <- "dvrtemps"
for(i in 1:nsites){#i=1
print(i)
springtemps <- vector()
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 1))
for(j in period){#j=2016
print(paste(i,j))
yearj <- length(period)
for(l in 1:ninds){
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
}
yearlyresults[which(period==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
sitesarray[,,i] <- yearlyresults
}
sitesdf <- as.data.frame(sitesarray)
names(sitesdf) <- substring(names(sitesdf), 5)
dvr$dvrtemps <- NA
for(k in c(1:nrow(dvr))){#k=1
dvr$dvrtemps[k]<-sitesdf[which(dvr$year[k]==row.names(sitesdf)),dvr$siteslist[k]]
}
return(dvr)
}
foo <- dvrtempfunc(period)
nyears<-length(period)
sitesarray <- array(NA, dim=c(length(period), 1:nsites))
row.names(sitesarray)<-period
colnames(sitesarray) <- "dvrtemps"
i=1
print(i)
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 1))
j=2016
print(paste(i,j))
yearj <- length(period)
for(l in 1:ninds){
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
}
l=1
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l)] & cc.dvr$year==j),]
for(l in 1:ninds){#l=1
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l & dvr$year==j)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l & dvr$year==j)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
}
dvrtempfunc <- function(period) {
nyears<-length(period)
sitesarray <- array(NA, dim=c(length(period), 1:nsites))
row.names(sitesarray)<-period
colnames(sitesarray) <- "dvrtemps"
for(i in 1:nsites){#i=1
print(i)
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 1))
for(j in period){#j=2016
print(paste(i,j))
yearj <- length(period)
for(l in 1:ninds){#l=1
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l & dvr$year==j)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l & dvr$year==j)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
}
yearlyresults[which(period==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
sitesarray[,,i] <- yearlyresults
}
sitesdf <- as.data.frame(sitesarray)
names(sitesdf) <- substring(names(sitesdf), 5)
dvr$dvrtemps <- NA
for(k in c(1:nrow(dvr))){#k=1
dvr$dvrtemps[k]<-sitesdf[which(dvr$year[k]==row.names(sitesdf)),dvr$siteslist[k]]
}
return(dvr)
}
foo <- dvrtempfunc(period)
View(foo)
for(i in 1:nsites){#i=1
print(i)
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 1))
for(j in period){#j=2016
print(paste(i,j))
yearj <- length(period)
for(l in 1:ninds){#l=1
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l & dvr$year==j)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l & dvr$year==j)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
yearlyresults[which(period==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
}
sitesarray[,,i] <- yearlyresults
}
sitesdf
sitesdf <- as.data.frame(sitesarray)
names(sitesdf) <- substring(names(sitesdf), 5)
sitesdf
sitesdf <- as.data.frame(sitesarray)
names(sitesdf) <- substring(names(sitesdf), 10)
sitesdf
indsresults[which(period==j),1] <- mean(dvrtemps, na.rm=TRUE)
indsresults <- array(NA, dim=c(length(period), 1))
for(l in 1:ninds){#l=1
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==l & dvr$year==j)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==l & dvr$year==j)] & cc.dvr$year==j),]
dvrtemps <- dvrtemps[,(i+3)]
indsresults[which(period==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
yearlyresults[which(period==j),1] <- indsresults
yearlyresults[which(period==j)] <- indsresults
View(indsresults)
sitesarray <- array(NA, dim=c(length(period), 1:nsites, 1:ninds))
ninds
nyears<-length(period)
yearlyresults <- array(NA, dim=c(1:ninds, nyears))
yearlyresults <- array(NA, dim=c(1:ninds, length(period)))
1:ninds
yearlyresults <- array(NA, dim=c(individuals$id, length(period)))
individuals$id
yearlyresults <- array(NA, dim=c(length(individuals$id), length(period)))
yearlyresults
yearlyresults <- array(NA, dim=c(length(individuals$id), period))
yearlyresults <- array(NA, dim=c(length(individuals$id), length(period)))
row.names(yearlyresults) <- individuals$indslist
colnames(yearlyresults) <- "dvrtemps"
yearlyresults <- array(NA, dim=c(length(individuals$id), 1, length(period)))
row.names(yearlyresults) <- individuals$indslist
colnames(yearlyresults) <- "dvrtemps"
springtemps <- function(period) {
nyears<-length(period)
sitesarray <- array(NA, dim=c(length(period), 1, 1:nsites))
row.names(sitesarray)<-period
colnames(sitesarray) <- "mst"
for(i in 1:nsites){#i=1
print(i)
springtemps <- vector()
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 1))
for(j in period){#j=2016
print(paste(i,j))
yearj <- length(period)
springtemps <- cc.dvr[(cc.dvr$doy>=60 & cc.dvr$doy<=151 & cc.dvr$year==j),] # average spring temp from March 1-May 31
springtemps <- springtemps[,(i+3)] ### finding the correct column for the climate type we're using
yearlyresults[which(period==j),1] <- mean(springtemps, na.rm=TRUE)
}
sitesarray[,,i] <- yearlyresults
}
sitesdf <- as.data.frame(sitesarray)
names(sitesdf) <- substring(names(sitesdf), 5)
dvr$mst <- NA
for(k in c(1:nrow(dvr))){#k=1
dvr$mst[k]<-sitesdf[which(dvr$year[k]==row.names(sitesdf)),dvr$siteslist[k]]
}
return(dvr)
}
dvr <- springtemps(period)
springtemps <- function(period) {
nyears<-length(period)
sitesarray <- array(NA, dim=c(length(period), 1:nsites))
row.names(sitesarray)<-period
colnames(sitesarray) <- "mst"
for(i in 1:nsites){#i=1
print(i)
springtemps <- vector()
dvrtemps <- vector()
yearlyresults <- array(NA, dim=c(length(period), 1))
for(j in period){#j=2016
print(paste(i,j))
yearj <- length(period)
springtemps <- cc.dvr[(cc.dvr$doy>=60 & cc.dvr$doy<=151 & cc.dvr$year==j),] # average spring temp from March 1-May 31
springtemps <- springtemps[,(i+3)] ### finding the correct column for the climate type we're using
yearlyresults[which(period==j),1] <- mean(springtemps, na.rm=TRUE)
}
sitesarray[,,i] <- yearlyresults
}
sitesdf <- as.data.frame(sitesarray)
names(sitesdf) <- substring(names(sitesdf), 5)
dvr$mst <- NA
for(k in c(1:nrow(dvr))){#k=1
dvr$mst[k]<-sitesdf[which(dvr$year[k]==row.names(sitesdf)),dvr$siteslist[k]]
}
return(dvr)
}
dvr <- springtemps(period)
nyears<-length(period)
yearlyresults <- array(NA, dim=c(length(individuals$id), 1, length(period)))
row.names(yearlyresults) <- individuals$indslist
colnames(yearlyresults) <- "dvrtemps"
indsarray <- array(NA, dim=c(length(individuals$id), 1))
sitenum <- dvr$siteslist[which(dvr$indslist==j)]
dvrtempfunc <- function(period) {
nyears<-length(period)
yearlyresults <- array(NA, dim=c(length(individuals$id), 1, length(period)))
row.names(yearlyresults) <- individuals$indslist
colnames(yearlyresults) <- "dvrtemps"
for(i in period){#i=1
print(i)
dvrtemps <- vector()
indsarray <- array(NA, dim=c(length(individuals$id), 1))
for(j in 1:ninds){#j=2016
print(paste(i,j))
sitenum <- dvr$siteslist[which(dvr$indslist==j)]
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==j & dvr$year==i)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==j & dvr$year==i)] & cc.dvr$year==i),]
dvrtemps <- dvrtemps[,(sitenum+3)]
indsarray[which(period==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
yearlyresults[,,i] <- indsarray
}
indsdf <- as.data.frame(indsarray)
names(indsdf) <- substring(names(indsdf), 10)
dvr$dvrtemps <- NA
for(k in c(1:nrow(dvr))){#k=1
dvr$dvrtemps[k]<-indsdf[which(dvr$indslist[k]==row.names(indsdf)),dvr$year[k]]
}
return(dvr)
}
foo <- dvrtempfunc(period)
View(foo)
nyears<-length(period)
yearlyresults <- array(NA, dim=c(length(individuals$id), 1, length(period)))
row.names(yearlyresults) <- individuals$indslist
colnames(yearlyresults) <- "dvrtemps"
i=2016
print(i)
dvrtemps <- vector()
indsarray <- array(NA, dim=c(length(individuals$id), 1))
j=1
print(paste(i,j))
sitenum <- dvr$siteslist[which(dvr$indslist==j)]
sitenum
sitenum <- unique(dvr$siteslist[which(dvr$indslist==j)])
sitenum
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==j & dvr$year==i)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==j & dvr$year==i)] & cc.dvr$year==i),]
dvrtemps
dvrtemps <- dvrtemps[,(sitenum+3)]
dvrtemps
indsarray[which(period==j),1] <- mean(dvrtemps, na.rm=TRUE)
indsarray
View(indsarray)
ninds<-length(individuals$indslist)
ninds
ninds <- nrow(individuals)
indsarray[which(ninds==j),1] <- mean(dvrtemps, na.rm=TRUE)
indsarray
j
indsarray <- array(NA, dim=c(length(individuals$id), 1, length(period)))
indsarray[which(ninds==j),1] <- mean(dvrtemps, na.rm=TRUE)
indsarray[which(ninds==j),1, i] <- mean(dvrtemps, na.rm=TRUE)
for(i in period){#i=2016
print(i)
dvrtemps <- vector()
indsarray <- array(NA, dim=c(length(individuals$id), 1))
for(j in 1:ninds){#j=1
print(paste(i,j))
sitenum <- unique(dvr$siteslist[which(dvr$indslist==j)])
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==j & dvr$year==i)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==j & dvr$year==i)] & cc.dvr$year==i),]
dvrtemps <- dvrtemps[,(sitenum+3)]
indsarray[which(ninds==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
yearlyresults[,,i] <- indsarray
}
i=2015
print(i)
dvrtemps <- vector()
indsarray <- array(NA, dim=c(length(individuals$id), 1))
for(j in 1:ninds){#j=1
print(paste(i,j))
sitenum <- unique(dvr$siteslist[which(dvr$indslist==j)])
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==j & dvr$year==i)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==j & dvr$year==i)] & cc.dvr$year==i),]
dvrtemps <- dvrtemps[,(sitenum+3)]
indsarray[which(ninds==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
indsarray
indsarray[which(individual$indslist==j),1] <- mean(dvrtemps, na.rm=TRUE)
indsarray[which(individuals$indslist==j),1] <- mean(dvrtemps, na.rm=TRUE)
indsarray
for(j in 1:ninds){#j=1
print(paste(i,j))
sitenum <- unique(dvr$siteslist[which(dvr$indslist==j)])
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==j & dvr$year==i)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==j & dvr$year==i)] & cc.dvr$year==i),]
dvrtemps <- dvrtemps[,(sitenum+3)]
indsarray[which(individuals$indslist==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
indsarray
dvrtempfunc <- function(period) {
#ninds<-length(individuals$indslist)
yearlyresults <- array(NA, dim=c(length(individuals$id), 1, length(period)))
row.names(yearlyresults) <- individuals$indslist
colnames(yearlyresults) <- "dvrtemps"
for(i in period){#i=2015
print(i)
dvrtemps <- vector()
indsarray <- array(NA, dim=c(length(individuals$id), 1))
for(j in 1:ninds){#j=1
print(paste(i,j))
sitenum <- unique(dvr$siteslist[which(dvr$indslist==j)])
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==j & dvr$year==i)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==j & dvr$year==i)] & cc.dvr$year==i),]
dvrtemps <- dvrtemps[,(sitenum+3)]
indsarray[which(individuals$indslist==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
yearlyresults[,,i] <- indsarray
}
indsdf <- as.data.frame(indsarray)
names(indsdf) <- substring(names(indsdf), 10)
dvr$dvrtemps <- NA
for(k in c(1:nrow(dvr))){#k=1
dvr$dvrtemps[k]<-indsdf[which(dvr$indslist[k]==row.names(indsdf)),dvr$year[k]]
}
return(dvr)
}
foo <- dvrtempfunc(period)
for(i in period){#i=2015
print(i)
dvrtemps <- vector()
indsarray <- array(NA, dim=c(length(individuals$id), 1))
for(j in 1:ninds){#j=1
print(paste(i,j))
sitenum <- unique(dvr$siteslist[which(dvr$indslist==j)])
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==j & dvr$year==i)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==j & dvr$year==i)] & cc.dvr$year==i),]
dvrtemps <- dvrtemps[,(sitenum+3)]
indsarray[which(individuals$indslist==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
yearlyresults[,,i] <- indsarray
}
yearlyresults[,i] <- indsarray
indsarray[which(individuals$indslist==j),1] <- mean(dvrtemps, na.rm=TRUE)
yearlyresults[,,i] <- indsarray
yearlyresults[,i,] <- indsarray
yearlyresults[i,,] <- indsarray
yearlyresults[,,i] <- indsarray
#ninds<-length(individuals$indslist)
yearlyresults <- array(NA, dim=c(length(individuals$id), 1, length(period)))
yearlyresults
dim(yearlyly)
dim(yearlyresults)
row.names(yearlyresults) <- individuals$indslist
colnames(yearlyresults) <- "dvrtemps"
dim(yearlyresults)
for(i in 1:period){#i=2015
print(i)
dvrtemps <- vector()
indsarray <- array(NA, dim=c(length(individuals$id), 1))
for(j in 1:ninds){#j=1
print(paste(i,j))
sitenum <- unique(dvr$siteslist[which(dvr$indslist==j)])
dvrtemps <- cc.dvr[(cc.dvr$doy>=dvr$budburst[which(dvr$indslist==j & dvr$year==i)] &
cc.dvr$doy<=dvr$leafout[which(dvr$indslist==j & dvr$year==i)] & cc.dvr$year==i),]
dvrtemps <- dvrtemps[,(sitenum+3)]
indsarray[which(individuals$indslist==j),1] <- mean(dvrtemps, na.rm=TRUE)
}
yearlyresults[,,i] <- indsarray
}
