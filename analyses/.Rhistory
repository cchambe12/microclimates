iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
-0.42 + -0.2 + 0.12 + 0.07
-0.42 + -0.2
-0.43/4
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
str(y_sim)
#List of 1
#$ y_ppc: num [1:4000, 1:1000] 164 475 516 400 430 ...
#..- attr(*, "dimnames")=List of 2
#.. ..$ iterations: NULL
#.. ..$           : NULL
hist(y_ppc$y_ppc[1,],
main="Prior predictive distribution",
xlab="y_sim",freq=FALSE)
#List of 1
#$ y_ppc: num [1:4000, 1:1000] 164 475 516 400 430 ...
#..- attr(*, "dimnames")=List of 2
#.. ..$ iterations: NULL
#.. ..$           : NULL
hist(y_sim$y_ppc[1,],
main="Prior predictive distribution",
xlab="y_sim",freq=FALSE)
plot(y_sim$y_ppc[1, ], bball$gdd)
View(y_sim)
dat<-list(N=nrow(bball), urban = rbinom(nrow(bball), 1, 0.5), method = rbinom(nrow(bball), 1, 0.5))
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
str(y_sim)
#List of 1
#$ y_ppc: num [1:4000, 1:1000] 164 475 516 400 430 ...
#..- attr(*, "dimnames")=List of 2
#.. ..$ iterations: NULL
#.. ..$           : NULL
hist(y_sim$y_ppc[1,],
main="Prior predictive distribution",
xlab="y_sim",freq=FALSE)
plot(y_sim$y_ppc[1, ], bball$gdd)
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
str(y_sim)
#List of 1
#$ y_ppc: num [1:4000, 1:1000] 164 475 516 400 430 ...
#..- attr(*, "dimnames")=List of 2
#.. ..$ iterations: NULL
#.. ..$           : NULL
hist(y_sim$y_ppc[1,],
main="Prior predictive distribution",
xlab="y_sim",freq=FALSE)
plot(y_sim$y_ppc[1, ], bball$gdd)
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
plot(y_sim$y_ppc[1, ], bball$gdd)
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
plot(y_sim$y_ppc[1, ], bball$gdd)
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
plot(y_sim$y_ppc[1, ], bball$gdd)
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
plot(y_sim$y_ppc[1, ], bball$gdd)
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
plot(y_sim$y_ppc[1, ], bball$gdd)
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
plot(y_sim$y_ppc[1, ], bball$gdd)
dat<-list(N=nrow(bball), urban = rbinom(nrow(bball), 1, 0.5), method = rbinom(nrow(bball), 1, 0.5))
## fit model:
priorchecks = stan('~/Documents/git/microclimates/analyses/stan/priorchecks_urbanmethod.stan', data = dat,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
## extract and plot one of the data-sets:
y_sim<-extract(priorchecks,pars="y_ppc")
plot(y_sim$y_ppc[1, ], bball$gdd)
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
modelhere <- urbmethod_fake
View(modelhere)
modoutput <- summary(urbmethod_fake)$summary
View(modoutput)
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <-rep(viridis_pal(option="viridis")(9),2)
my.pch <- rep(15:18, each=10)
alphahere = 0.4
modelhere <- urbmethod_fake
spnum <- length(unique(bball$species))
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-150,50), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
quartz()
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-150,50), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-summary(modelhere)$summary[rownameshere[i],"mean"]
lines(summary(modelhere)$summary[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste("[",spsi,"]",sep=""),rownames(summary(modelhere)$summary),fixed=TRUE))[2:7]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-summary(modelhere)$summary[pos.sps.i[i],"mean"]
lines(summary(modelhere)$summary[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(60, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
col=alpha(my.pal[1:spnum], alphahere),
cex=1, bty="n", text.font=3)
View(modoutput)
rownames(summary(modelhere)$summary)
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
modoutput <- summary(urbmethod_fake)$summary
View(modoutput)
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <-rep(viridis_pal(option="viridis")(9),2)
my.pch <- rep(15:18, each=10)
alphahere = 0.4
modelhere <- urbmethod_fake
bball <- isolate(get.data()[[1]])
spnum <- length(unique(bball$species))
par(xpd=FALSE)
quartz()
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-150,50), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-summary(modelhere)$summary[rownameshere[i],"mean"]
lines(summary(modelhere)$summary[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste("[",spsi,"]",sep=""),rownames(summary(modelhere)$summary),fixed=TRUE))[2:7]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-summary(modelhere)$summary[pos.sps.i[i],"mean"]
lines(summary(modelhere)$summary[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(60, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
col=alpha(my.pal[1:spnum], alphahere),
cex=1, bty="n", text.font=3)
spsi =1
which(grepl(paste("[",spsi,"]",sep=""),rownames(summary(modelhere)$summary),fixed=TRUE))[2:7]
rownames(summary(modelhere)$summary)
grepl(paste("[",spsi,"]",sep=""),rownames(summary(modelhere)$summary),fixed=TRUE)
rownames(summary(urbmethod$fake)$summary)
rownames(summary(urbmethod_fake)$summary)
noncps <- rownames(summary(urbmethod_fake)$summary)
noncps <- noncps[!grepl("_ncp", noncps),]
foo <- noncps[!grepl("_ncp", noncps)]
foo
noncps <- summary(urbmethod_fake)$summary
noncps
foo <- noncps[!grepl("_ncp", rownames(noncps)),]
foo
modelhere <- urbmethod_fake
bball <- isolate(get.data()[[1]])
spnum <- length(unique(bball$species))
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-150,50), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[2:7]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(60, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
col=alpha(my.pal[1:spnum], alphahere),
cex=1, bty="n", text.font=3)
View(noncps)
rownames(noncps)
noncps <- noncps[!grepl("_ncp", rownames(noncps)),]
modelhere <- urbmethod_fake
bball <- isolate(get.data()[[1]])
spnum <- length(unique(bball$species))
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-150,50), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[2:7]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(60, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
col=alpha(my.pal[1:spnum], alphahere),
cex=1, bty="n", text.font=3)
modelhere <- urbmethod_fake
spnum <- length(unique(bball$species))
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-100,100), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[1:3]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(60, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
col=alpha(my.pal[1:spnum], alphahere),
cex=1, bty="n", text.font=3)
modelhere <- urbmethod_fake
spnum <- length(unique(bball$species))
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-100,100), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:3){
pos.y<-(3:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[1:3]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
col=alpha(my.pal[1:spnum], alphahere),
cex=1, bty="n", text.font=3)
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-100,100), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[2:4]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
col=alpha(my.pal[1:spnum], alphahere),
cex=1, bty="n", text.font=3)
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-100,100), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[3:5]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
col=alpha(my.pal[1:spnum], alphahere),
cex=1, bty="n", text.font=3)
View(modoutput)
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
modoutput <- summary(urbmethod_fake)$summary
modoutput
View(modoutput)
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
urbmethod_fake
urbmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1000, chains=4, control=list(adapt_delta=0.99, max_treedepth=15)) ###
