mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4000, warmup=2500,
prior = prior(normal(-6,6), class=b))
poisbase<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial())
poisbase<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial(theta=2))
summary(poisbase)
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial(theta=2))
summary(poisbase)
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=quasibinomial())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=quasibinomial())
summary(poisbase)
bet <- read.csv("~/Documents/git/ospree/analyses/bb_analysis/PEP_climate/input/bbch_betpen.csv")
head(bet)
rm(list=ls())
options(stringsAsFactors=FALSE)
library(brms)
load("/Users/catchamberlain/Downloads/orig_full_itrxns.Rdata")
check <- brms:extract_draws(orig.full, re_formula=c("cc.z", "elev.z", "species"))
check <- brms::extract_draws(orig.full, re_formula=c("cc.z", "elev.z", "species"))
check <- brms::extract_draws(orig.full)
View(check)
varies <- get_variables(orig.full)
library(broom)
varies <- get_variables(orig.full)
library(tidybayes)
install.packages("tidybayes")
varies <- get_variables(orig.full)
library(tidybayes)
varies <- get_variables(orig.full)
varies <- gsub(".*b_","",varies)
conds <- r_conditions[speciesBETPEN, mat.z]
conds <- r_condition[speciesBETPEN, mat.z]
check <- orig.full %>%
spread_draws(species[elev.z, cc.z, term])
library(dplyr)
check <- orig.full %>%
spread_draws(species[elev.z, cc.z, term])
varies <- get_variables(orig.full)
varies
check <- orig.full %>%
spread_draws(b_speciesBETPEN[elev.z, cc.z, term]) %>%
spread_draws(b_speciesFRAEXC[elev.z, cc.z, term])
check <- orig.full %>%
spread_draws(b_speciesBETPEN[elev.z, term]) %>%
spread_draws(b_speciesFRAEXC[elev.z, term])
check <- orig.full %>%
spread_draws(b_elev.z[condition, term]) %>%
spread_draws(b_cc.z[condition, term])
check <- orig.full %>%
add_fitted_draws()
check <- add_fitted_draws(orig.full)
check <- bb %>% add_fitted_draws(orig.full)
View(check)
head(check)
check <- bb %>% add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
dplyr::select(species, cc, elev)
check <- bb %>% add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN"))
unique(check$species)
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev)
View(foo)
foo <- foo[!duplicated(foo),]
colnames(check)
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev, .value)
foo <- foo[!duplicated(foo),]
View(foo)
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=cc)) + geom_line()
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=as.factor(cc))) + geom_line(aes(col=species, alpha=as.factor(cc)), stat="smooth", method="lm")
goober <- posterior_interval(orig.full, prob=0.5)
View(goober)
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
colnames(check)
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=as.factor(cc))) + geom_line(aes(col=species, alpha=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
ggplot(foo, aes(x=elev, y=.value, col=species, line_type=as.factor(cc))) + geom_line(aes(col=species, line_type=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
ggplot(foo, aes(x=elev, y=.value, col=species, linetype=as.factor(cc))) + geom_line(aes(col=species, linetype=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
list_of_draws <- extract(orig.full)
## Libraries
library(rstan)
list_of_draws <- extract(orig.full)
load("/Users/catchamberlain/Downloads/orig_full_itrxns.Rdata")
list_of_draws <- extract(orig.full)
list_of_draws <- extract_fit(orig.full)
list_of_draws <- brms::extract_fit(orig.full)
library(brms)
list_of_draws <- brms::extract_fit(orig.full)
list_of_draws <- brms::extract_draws(orig.full)
print(names(list_of_draws))
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
library(dplyr)
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
library(tidybayes)
library(broom)
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(elev.z, cc.z, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(`b_elev.z`, `b_cc.z`, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(b_elev.z, b_cc.z, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev, .value)
bb %>%
data_grid(elev) %>%
add_fitted_draws(orig.full) %>%
ggplot(aes(x = .value, y = elev)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
ggplot(aes(x = .value, y = elev)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(check$species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, group=cc)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, group=cc, col=species)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
geom_line(.width = c(.25, .75), aes(col=species, linetype=as.factor(cc)),
stat="smooth", method="lm")
(46.1+50.3+38.1+44.7+43.7+32+41.7+33.7)/8
(59+58.1+38.7+37.1)/4
(40.2+46.675+40.5+44.575+44.525+45.325+49.675+48.325)/8
(49.425+39.275+45.125+39.825)/4
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(dplyr)
library(lubridate)
library(tidyr)
library(brms) ## just for initial glances during experiment!
library(rstan)
# Setting working directory
setwd("~/Documents/git/chillfreeze/analyses/input")
obs <- read.csv("chillobs.csv", header = TRUE)
## Start cleaning a bit...
obs$bb <- as.Date(obs$bb, "%m/%d/%y")
obs$bb <- yday(obs$bb)
obs$lo <- as.Date(obs$lo, "%m/%d/%y")
obs$lo <- yday(obs$lo)
obs$start <- as.Date(obs$start, format = "%m/%d/%y")
obs$budburst <- NA
obs$budburst <- ifelse(obs$start=="2018-12-24", obs$bb + 6, obs$budburst)
obs$budburst <- ifelse(obs$start=="2019-01-07", obs$bb - 7, obs$budburst)
obs$budburst <- ifelse(obs$start=="2019-01-21", obs$bb - 21, obs$budburst)
obs$leafout <- NA
obs$leafout <- ifelse(obs$start=="2018-12-24", obs$lo + 6, obs$leafout)
obs$leafout <- ifelse(obs$start=="2019-01-07", obs$lo - 7, obs$leafout)
obs$leafout <- ifelse(obs$start=="2019-01-21", obs$lo - 21, obs$leafout)
treats <- c(24, 44, 64, 84, 104, 124, 144, 164,
26, 46, 66, 86, 106, 126, 146, 166,
28, 48, 68, 88, 108, 128, 148, 168)
obs$inds <- substr(obs$id, 8, 10)
obs$tx <- ifelse(obs$inds %in% treats, 1, 0)
obs$chill <- NA
obs$chill <- ifelse(obs$start=="2018-12-24", 1, obs$chill)
obs$chill <- ifelse(obs$start=="2019-01-07", 2, obs$chill)
obs$chill <- ifelse(obs$start=="2019-01-21", 3, obs$chill)
obs$ht2 <- as.Date(obs$leafout + 28, origin = obs$start)
obs$ht.mid <- as.Date(obs$leafout + 60, origin = obs$start)
whentomeasure <- subset(obs, select=c("id", "ht.mid"))
whentomeasure <- whentomeasure[!duplicated(whentomeasure),]
write.csv(whentomeasure, file="~/Desktop/whentomeasureheights.csv", row.names = FALSE)
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
## Breakdown treatments and experiment - 19 February 2019 issues with greenhouse!
if(FALSE){
howfaralong <- obs
howfaralong$chilltx <- NA
howfaralong$chilltx <- ifelse(howfaralong$chill==1, "4wks", howfaralong$chilltx)
howfaralong$chilltx <- ifelse(howfaralong$chill==2, "6wks", howfaralong$chilltx)
howfaralong$chilltx <- ifelse(howfaralong$chill==3, "8wks", howfaralong$chilltx)
howfaralong$chilltx <- paste(howfaralong$chilltx, howfaralong$tx, sep="_")
howfaralong.leafout <- howfaralong[!is.na(howfaralong$lo),]
table(howfaralong.leafout$chilltx)
howfaralong.budburst <- howfaralong[is.na(howfaralong$lo) & !is.na(howfaralong$bb),]
table(howfaralong.budburst$chilltx)
howfaralong.frz <- howfaralong[(howfaralong$tx ==1 & howfaralong$frz!=""),]
table(howfaralong.frz$chilltx)
}
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
chill.stan <- subset(obs, select=c("id", "budburst", "leafout", "tx", "chill", "lo.ht", "onemonth.ht", "ChlAvg"))
chill.stan$chill1 = ifelse(chill.stan$chill == 2, 1, 0)
chill.stan$chill2 = ifelse(chill.stan$chill == 3, 1, 0)
with(chill.stan, table(chill1, chill2))
chill.stan$species <- substr(chill.stan$id, 0, 6)
chill.stan$dvr <- chill.stan$leafout - chill.stan$budburst ### Using this point of code for "drought" effect test
chill.stan$ht.diff <- chill.stan$onemonth.ht - chill.stan$lo.ht
chill.stan <- chill.stan[!is.na(chill.stan$dvr),]
totspp <- c("ACESAC", "ALNRUG", "BETPAP", "BETPOP", "CORRAC", "SALPUR", "SORAME", "VIBDEN")
#chill.complete <- subset(chill.stan, chill.stan$tx <=2)
chill.complete <- chill.complete[(chill.complete$species %in% totspp),]
View(chill.stan)
### just a quick lm model to see relationships
fit.dvr <- brm(dvr ~ tx*chill1 + tx*chill2 + (1|species), data = chill.stan)
fit.dvr
fit.dvr.all.drought <- brm(dvr ~ tx*chill1 + tx*chill2 + tx*drought1 + tx*drought2 + (1|species), data = chill.complete)
totspp <- c("ACESAC", "ALNRUG", "BETPAP", "BETPOP", "CORRAC", "SALPUR", "SORAME", "VIBDEN")
#chill.complete <- subset(chill.stan, chill.stan$tx <=2)
chill.complete <- chill.stan[(chill.stan$species %in% totspp),]
##### Add in "Drought" treatment
### "Drought" treatment
fourdoy <- yday(as.Date("2019-02-19", origin = obs$start)) + 6
sixdoy <- yday(as.Date("2019-02-19", origin = obs$start)) - 7
eightdoy <- yday(as.Date("2019-02-19", origin = obs$start)) - 21
chill.complete$drought <- ifelse(chill.complete$leafout >= fourdoy & chill.complete$chill=1, 1, 0)
chill.complete$drought <- ifelse(chill.complete$leafout >= sixdoy & chill.complete$chill=2, 1, 0)
chill.complete$drought <- ifelse(chill.complete$leafout >= eightdoy & chill.complete$chill=3, 1, 0)
chill.complete$drought <- ifelse(chill.complete$budburst <= fourdoy & chill.complete$leafout >= fourdoy & chill.complete$chill=1, 2, chill.complete$drought)
chill.complete$drought <- ifelse(chill.complete$leafout >= fourdoy & chill.complete$chill==1, 1, 0)
chill.complete$drought <- ifelse(chill.complete$leafout >= sixdoy & chill.complete$chill==2, 1, 0)
chill.complete$drought <- ifelse(chill.complete$leafout >= eightdoy & chill.complete$chill==3, 1, 0)
chill.complete$drought <- ifelse(chill.complete$budburst <= fourdoy & chill.complete$leafout >= fourdoy & chill.complete$chill==1, 2, chill.complete$drought)
chill.complete$drought <- ifelse(chill.complete$budburst <= sixdoy & chill.complete$leafout >= sixdoy & chill.complete$chill==2, 2, chill.complete$drought)
chill.complete$drought <- ifelse(chill.complete$budburst <= eightdoy & chill.complete$leafout >= eightdoy & chill.complete$chill==3, 2, chill.complete$drought)
chill.complete$drought1 = ifelse(chill.complete$drought == 1, 1, 0)
chill.complete$drought2 = ifelse(chill.complete$drought == 2, 1, 0)
fit.dvr.all.drought <- brm(dvr ~ tx*chill1 + tx*chill2 + tx*drought1 + tx*drought2 + (1|species), data = chill.complete)
fit.dvr.all.drought
fit.dvr.all <- brm(dvr ~ tx*chill1 + tx*chill2 + (1|species), data = chill.complete)
fit.dvr.all
fit.dvr.all.drought
rm(list=ls())
options(stringsAsFactors = FALSE)
## Load Libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstanarm)
library(geosphere)
library(anytime)
library(weathermetrics)
library(measurements)
library(lubridate)
library(egg)
# Set Working Directory
setwd("~/Documents/git/microclimates/analyses")
# 1. Get treespotters data - and clean!
d<-read.csv("input/individual_phenometrics_data.csv", header=TRUE) ## 24 Jan 2019: 7671
# change from NPN output to more digestible column names
bb<-d%>%
rename(lat=Latitude)%>%
rename(long=Longitude)%>%
rename(elev=Elevation_in_Meters)%>%
rename(year=First_Yes_Year)%>%
rename(month=First_Yes_Month)%>%
rename(day=First_Yes_Day)%>%
rename(doy=First_Yes_DOY)%>%
rename(numYs=Multiple_Observers)%>%
rename(phase=Phenophase_Description)%>%
rename(ID=Individual_ID)
bb.pheno<-dplyr::select(bb, Genus, Species, Common_Name, phase, lat, long, elev, year, doy, numYs, ID)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Breaking leaf buds", "budburst", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Leaves", "leafout", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Flowers or flower buds", "flowers", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Falling leaves", "leaf drop", bb.pheno$phase)
### Now work on finding day of budburst, etc.
bb.pheno<-filter(bb.pheno, numYs>0)
# Below, I group each individual by phenophase and year to find the first observation (using the slice function),
## so first day of budburst for that individual for that year
doy_pheno<-bb.pheno%>%
group_by(ID, phase, year) %>%
slice(which.min(doy))
# below I am finding the average day of budburst by species
doy_pheno$m.doy<-ave(doy_pheno$doy, doy_pheno$phase, doy_pheno$Genus, doy_pheno$year)
doy_pheno<-doy_pheno[!duplicated(doy_pheno),]
### Clean observation error!
# QbyLizzie: How did you find this? - I found this by making initial raw data plots. There was a outlier and I went back
## to check the data. It was a new volunteer who made a couple of mistakes.
doy_pheno$doy<-ifelse(doy_pheno$Species=="alleghaniensis" & doy_pheno$year==2016 & doy_pheno$doy==59, NA, doy_pheno$doy)
doy_pheno<-doy_pheno[!is.na(doy_pheno$doy),]
#### Now start building a small data frame with phenophase info then add in climandpheno, chilling and photo
colstokeep<-c("Genus", "Species", "ID","year", "phase","lat", "long", "elev", "doy")
phenos<-subset(doy_pheno, select=colstokeep)
phenos<-phenos[!duplicated(phenos),]
phenos<-phenos%>%tidyr::spread(phase, doy)
# QbyLizzie: What is happening here and why? - Below I am finding the first observation of budburst, etc. for each individual
### Volunteers are trained to observe and record budburst throughout the season but I am only interested in that first observation
phenos$budburst<-ave(phenos$budburst, phenos$ID, phenos$year, FUN=first)
phenos$leafout<-ave(phenos$leafout, phenos$ID, phenos$year, FUN=first)
phenos$flowers<-ave(phenos$flowers, phenos$ID, phenos$year, FUN=first)
phenos$fruits<-ave(phenos$Fruits, phenos$ID, phenos$year, FUN=first)
phenos$col.leaves<-ave(phenos$`Colored leaves`, phenos$ID, phenos$year, FUN=first)
phenos$leafdrop<-ave(phenos$`leaf drop`, phenos$ID, phenos$year, FUN=first)
View(phenos)
# change from NPN output to more digestible column names
bb<-d%>%
rename(lat=Latitude)%>%
rename(long=Longitude)%>%
rename(elev=Elevation_in_Meters)%>%
rename(year=First_Yes_Year)%>%
rename(month=First_Yes_Month)%>%
rename(day=First_Yes_Day)%>%
rename(doy=First_Yes_DOY)%>%
rename(numYs=Multiple_Observers)%>%
rename(phase=Phenophase_Description)%>%
rename(ID=Individual_ID)
bb.pheno<-dplyr::select(bb, Genus, Species, Common_Name, phase, lat, long, elev, year, doy, numYs, ID)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Breaking leaf buds", "budburst", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Leaves", "leafout", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Flowers or flower buds", "flowers", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Falling leaves", "leaf drop", bb.pheno$phase)
### Now work on finding day of budburst, etc.
bb.pheno<-filter(bb.pheno, numYs>0)
# Below, I group each individual by phenophase and year to find the first observation (using the slice function),
## so first day of budburst for that individual for that year
doy_pheno<-bb.pheno%>%
group_by(ID, phase, year) %>%
slice(which.min(doy))
doy_pheno<-doy_pheno[!duplicated(doy_pheno),]
### Clean observation error!
# QbyLizzie: How did you find this? - I found this by making initial raw data plots. There was a outlier and I went back
## to check the data. It was a new volunteer who made a couple of mistakes.
doy_pheno$doy<-ifelse(doy_pheno$Species=="alleghaniensis" & doy_pheno$year==2016 & doy_pheno$doy==59, NA, doy_pheno$doy)
doy_pheno<-doy_pheno[!is.na(doy_pheno$doy),]
#### Now start building a small data frame with phenophase info then add in climandpheno, chilling and photo
colstokeep<-c("Genus", "Species", "ID","year", "phase","lat", "long", "elev", "doy")
phenos<-subset(doy_pheno, select=colstokeep)
phenos<-phenos[!duplicated(phenos),]
phenos<-phenos%>%tidyr::spread(phase, doy)
phenos$fruits<-phenos$Fruits
phenos$col.leaves<-phenos$`Colored leaves`
phenos$leafdrop<-phenos$`leaf drop`
phenos <- subset(phenos, select=c("Genus", "Species", "ID", "year", "lat", "long", "elev", "budburst",
"flowers", "fruits", "leafout", "fruits", "col.leaves", "leafdrop"))
### And now last observation for when to start calculating chilling
phenos$last.obs<-ave(phenos$`leaf drop`, phenos$ID, phenos$year, FUN=last)
### And now last observation for when to start calculating chilling
phenos$last.obs<-ave(phenos$leafdrop, phenos$ID, phenos$year, FUN=last)
phenos$last.obs<-ifelse(is.na(phenos$last.obs), ave(phenos$col.leaves, phenos$ID, phenos$year, FUN=last), phenos$last.obs)
## For gdd start and chilling end
phenos$gdd.start<-46 # 15 February for each year - arbitrary, can change
### Now clean it up a bit
phenos<-phenos[!is.na(phenos$budburst),]
phenos<-phenos[!is.na(phenos$leafout),]
phenos<-phenos[!is.na(phenos$last.obs),]
phenos$yr.end <- ifelse(phenos$year==2016, 366, 365)
## And now add in individual information...
phenos$type <- "Treespotters"
prov <- read.csv("output/provenanceinfo.csv", header=TRUE)
prov <- subset(prov, select= c("Individual_ID", "provenance.lat", "provenance.long"))
prov <- prov %>% rename(ID=Individual_ID)
ts <- full_join(prov, phenos)
View(prov)
# change from NPN output to more digestible column names
bb<-d%>%
rename(lat=Latitude)%>%
rename(long=Longitude)%>%
rename(elev=Elevation_in_Meters)%>%
rename(year=First_Yes_Year)%>%
rename(month=First_Yes_Month)%>%
rename(day=First_Yes_Day)%>%
rename(doy=First_Yes_DOY)%>%
rename(numYs=Multiple_Observers)%>%
rename(phase=Phenophase_Description)%>%
rename(ID=Individual_ID)
bb.pheno<-dplyr::select(bb, Genus, Species, Common_Name, phase, lat, long, elev, year, doy, numYs, ID)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Breaking leaf buds", "budburst", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Leaves", "leafout", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Flowers or flower buds", "flowers", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Falling leaves", "leaf drop", bb.pheno$phase)
### Now work on finding day of budburst, etc.
bb.pheno<-filter(bb.pheno, numYs>0)
# Below, I group each individual by phenophase and year to find the first observation (using the slice function),
## so first day of budburst for that individual for that year
doy_pheno<-bb.pheno%>%
group_by(ID, phase, year) %>%
slice(which.min(doy))
doy_pheno<-doy_pheno[!duplicated(doy_pheno),]
### Clean observation error!
# QbyLizzie: How did you find this? - I found this by making initial raw data plots. There was a outlier and I went back
## to check the data. It was a new volunteer who made a couple of mistakes.
doy_pheno$doy<-ifelse(doy_pheno$Species=="alleghaniensis" & doy_pheno$year==2016 & doy_pheno$doy==59, NA, doy_pheno$doy)
doy_pheno<-doy_pheno[!is.na(doy_pheno$doy),]
#### Now start building a small data frame with phenophase info then add in climandpheno, chilling and photo
colstokeep<-c("Genus", "Species", "ID","year", "phase","lat", "long", "elev", "doy")
phenos<-subset(doy_pheno, select=colstokeep)
phenos<-phenos[!duplicated(phenos),]
phenos<-phenos%>%tidyr::spread(phase, doy)
phenos$col.leaves<-phenos$`Colored leaves`
phenos$leafdrop<-phenos$`leaf drop`
phenos <- subset(phenos, select=c("Genus", "Species", "ID", "year", "lat", "long", "elev", "budburst",
"flowers", "fruits", "leafout", "fruits", "col.leaves", "leafdrop"))
phenos$fruits <- phenos$Fruits
phenos <- subset(phenos, select=c("Genus", "Species", "ID", "year", "lat", "long", "elev", "budburst",
"flowers", "fruits", "leafout", "fruits", "col.leaves", "leafdrop"))
### And now last observation for when to start calculating chilling
phenos$last.obs<-ave(phenos$leafdrop, phenos$ID, phenos$year, FUN=last)
phenos$last.obs<-ifelse(is.na(phenos$last.obs), ave(phenos$col.leaves, phenos$ID, phenos$year, FUN=last), phenos$last.obs)
## For gdd start and chilling end
phenos$gdd.start<-46 # 15 February for each year - arbitrary, can change
### Now clean it up a bit
phenos<-phenos[!is.na(phenos$budburst),]
phenos<-phenos[!is.na(phenos$leafout),]
phenos<-phenos[!is.na(phenos$last.obs),]
phenos$yr.end <- ifelse(phenos$year==2016, 366, 365)
## And now add in individual information...
phenos$type <- "Treespotters"
prov <- read.csv("output/provenanceinfo.csv", header=TRUE)
prov <- subset(prov, select= c("Individual_ID", "provenance.lat", "provenance.long"))
prov <- prov %>% rename(ID=Individual_ID)
ts <- full_join(prov, phenos)
# change from NPN output to more digestible column names
bb<-d%>%
rename(lat=Latitude)%>%
rename(long=Longitude)%>%
rename(elev=Elevation_in_Meters)%>%
rename(year=First_Yes_Year)%>%
rename(month=First_Yes_Month)%>%
rename(day=First_Yes_Day)%>%
rename(doy=First_Yes_DOY)%>%
rename(numYs=Multiple_Observers)%>%
rename(phase=Phenophase_Description)%>%
rename(ID=Individual_ID)
bb.pheno<-dplyr::select(bb, Genus, Species, Common_Name, phase, lat, long, elev, year, doy, numYs, ID)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Breaking leaf buds", "budburst", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Leaves", "leafout", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Flowers or flower buds", "flowers", bb.pheno$phase)
bb.pheno$phase<-ifelse(bb.pheno$phase=="Falling leaves", "leaf drop", bb.pheno$phase)
### Now work on finding day of budburst, etc.
bb.pheno<-filter(bb.pheno, numYs>0)
# Below, I group each individual by phenophase and year to find the first observation (using the slice function),
## so first day of budburst for that individual for that year
doy_pheno<-bb.pheno%>%
group_by(ID, phase, year) %>%
slice(which.min(doy))
doy_pheno<-doy_pheno[!duplicated(doy_pheno),]
### Clean observation error!
# QbyLizzie: How did you find this? - I found this by making initial raw data plots. There was a outlier and I went back
## to check the data. It was a new volunteer who made a couple of mistakes.
doy_pheno$doy<-ifelse(doy_pheno$Species=="alleghaniensis" & doy_pheno$year==2016 & doy_pheno$doy==59, NA, doy_pheno$doy)
doy_pheno<-doy_pheno[!is.na(doy_pheno$doy),]
#### Now start building a small data frame with phenophase info then add in climandpheno, chilling and photo
colstokeep<-c("Genus", "Species", "ID","year", "phase","lat", "long", "elev", "doy")
phenos<-subset(doy_pheno, select=colstokeep)
phenos<-phenos[!duplicated(phenos),]
phenos<-phenos%>%tidyr::spread(phase, doy)
phenos$fruits <- phenos$Fruits
phenos$col.leaves<-phenos$`Colored leaves`
phenos$leafdrop<-phenos$`leaf drop`
phenos <- subset(phenos, select=c("Genus", "Species", "ID", "year", "lat", "long", "elev", "budburst",
"flowers", "fruits", "leafout", "col.leaves", "leafdrop"))
### And now last observation for when to start calculating chilling
phenos$last.obs<-ave(phenos$leafdrop, phenos$ID, phenos$year, FUN=last)
phenos$last.obs<-ifelse(is.na(phenos$last.obs), ave(phenos$col.leaves, phenos$ID, phenos$year, FUN=last), phenos$last.obs)
## For gdd start and chilling end
phenos$gdd.start<-46 # 15 February for each year - arbitrary, can change
### Now clean it up a bit
phenos<-phenos[!is.na(phenos$budburst),]
phenos<-phenos[!is.na(phenos$leafout),]
phenos<-phenos[!is.na(phenos$last.obs),]
phenos$yr.end <- ifelse(phenos$year==2016, 366, 365)
## And now add in individual information...
phenos$type <- "Treespotters"
prov <- read.csv("output/provenanceinfo.csv", header=TRUE)
prov <- subset(prov, select= c("Individual_ID", "provenance.lat", "provenance.long"))
prov <- prov %>% rename(ID=Individual_ID)
ts <- full_join(prov, phenos)
colstokeep <- c("ID", "provenance.lat", "provenance.long", "Genus", "Species", "year", "budburst", "leafout", "last.obs", "yr.end", "gdd.start", "type")
d <- subset(ts, select=colstokeep)
d <- d[!is.na(d$Genus),]
d$ID <- as.character(d$ID)
View(d)
