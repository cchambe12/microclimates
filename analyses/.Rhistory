scale_alpha_manual(name="Method", values=c(0.2, 0.7),
labels=c("hobo"="Hobo Logger", "ws"="Weather Station")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddmethod_noisyws_boxplot_micros.pdf", width=10, height=6)
gddbox
dev.off()
gddbox_sites<- ggplot(bball, aes(x=species, y=gdd, alpha=site)) + geom_boxplot(aes(alpha=as.factor(site), fill=as.factor(species), col=as.factor(species))) +
scale_fill_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_color_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() + xlab("") +
ylab("Growing Degree Days") +# coord_cartesian(ylim=c(50,165)) +
scale_alpha_manual(name="Site", values=c(0.2, 0.7),
labels=c("arb"="Arnold Arboretum", "hf"="Harvard Forest")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddsite_noisyhobo_boxplot.pdf", width=10, height=6)
gddbox_sites
gddbox_sites<- ggplot(bball, aes(x=species, y=gdd, alpha=site)) + geom_boxplot(aes(alpha=as.factor(site), fill=as.factor(species), col=as.factor(species))) +
scale_fill_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_color_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() + xlab("") +
ylab("Growing Degree Days") +# coord_cartesian(ylim=c(50,165)) +
scale_alpha_manual(name="Site", values=c(0.2, 0.7),
labels=c("arb"="Arnold Arboretum", "hf"="Harvard Forest")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddsite_noisyws_boxplot_micros.pdf", width=10, height=6)
gddbox_sites
dev.off()
use.urban <- "urban"
bball$treatmenttype <- if(use.urban=="urban"){ifelse(bball$site=="arb", 1, 0)}else if(use.urban=="prov"){
as.numeric(bball$prov)}
datalist.gdd <- with(bball,
list(y = gdd,
urban = treatmenttype,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(bball$species))
)
)
urbmethod_fake = stan('stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 4000, warmup=3500, chains=4)#, control=list(adapt_delta=0.99, max_treedepth=15))
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <-rep(viridis_pal(option="viridis")(9),2)
my.pch <- rep(15:18, each=10)
alphahere = 0.4
modoutput <- summary(urbmethod_fake)$summary
noncps <- modoutput[!grepl("_ncp", rownames(modoutput)),]
modelhere <- urbmethod_fake
spnum <- length(unique(bball$species))
labs <- if(use.urban=="urban"){c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")}else if(use.urban=="prov"){
c("Provenance", "Weather Station", "Provenance x\nWeather Station",
"Sigma Provenance", "Sigma \nWeather Station",
"Sigma Interaction")}
pdf("figures/muplot_noisyws_micros.pdf", width=7, height=4)
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-30,30), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(labs), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[c(3,2,4)]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
#legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
#      col=alpha(my.pal[1:spnum], alphahere),
#     cex=1, bty="n", text.font=3)
dev.off()
####################################################################################################
####################################################################################################
####################################################################################################
#### Interesting!!!! So with noisy weather station data and microclimatic effects, we're seeing a positive effect of weather station on GDD
### What happens to the muplot if we have noisy hobo logger data instead?
simsdat <- bbfunc("hobo", "hobo", 0, 20, 300, 50, 11, 4, 1, 5, 9, 2, -1, 5)
bball <- simsdat[[1]]
use.urban <- "urban"
bball$treatmenttype <- if(use.urban=="urban"){ifelse(bball$site=="arb", 1, 0)}else if(use.urban=="prov"){
as.numeric(bball$prov)}
datalist.gdd <- with(bball,
list(y = gdd,
urban = treatmenttype,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(bball$species))
)
)
urbmethod_fake = stan('stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 4000, warmup=3500, chains=4)#, control=list(adapt_delta=0.99, max_treedepth=15))
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <-rep(viridis_pal(option="viridis")(9),2)
my.pch <- rep(15:18, each=10)
alphahere = 0.4
modoutput <- summary(urbmethod_fake)$summary
noncps <- modoutput[!grepl("_ncp", rownames(modoutput)),]
modelhere <- urbmethod_fake
spnum <- length(unique(bball$species))
pdf("figures/muplot_noisyhobo_micros.pdf", width=7, height=4)
par(xpd=FALSE)
par(mar=c(5,10,3,10))
labs <- if(use.urban=="urban"){c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")}else if(use.urban=="prov"){
c("Provenance", "Weather Station", "Provenance x\nWeather Station",
"Sigma Provenance", "Sigma \nWeather Station",
"Sigma Interaction")}
plot(x=NULL,y=NULL, xlim=c(-30,30), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(labs), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[c(3,2,4)]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
#legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
#      col=alpha(my.pal[1:spnum], alphahere),
#     cex=1, bty="n", text.font=3)
dev.off()
bball <- fstarrawfunc(bball)
pdf("figures/gddaccuracy_raw_noisyhobo_micros.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$type)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$method)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Hobo Logger", "Weather Station"))
dev.off()
pdf("figures/gddaccuracy_raw_noisyhobo_sites.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$site)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$site)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Arboretum", "Harvard Forest"))
dev.off()
spcols <-viridis_pal(option="viridis")(15)
gddbox<- ggplot(bball, aes(x=species, y=gdd, alpha=method)) + geom_boxplot(aes(alpha=as.factor(method), fill=as.factor(species), col=as.factor(species))) +
scale_fill_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_color_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() + xlab("") +
ylab("Growing Degree Days") +# coord_cartesian(ylim=c(50,165)) +
scale_alpha_manual(name="Method", values=c(0.2, 0.7),
labels=c("hobo"="Hobo Logger", "ws"="Weather Station")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddmethod_noisyhobo_boxplot_micros.pdf", width=10, height=6)
gddbox
dev.off()
gddbox_sites<- ggplot(bball, aes(x=species, y=gdd, alpha=site)) + geom_boxplot(aes(alpha=as.factor(site), fill=as.factor(species), col=as.factor(species))) +
scale_fill_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_color_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() + xlab("") +
ylab("Growing Degree Days") +# coord_cartesian(ylim=c(50,165)) +
scale_alpha_manual(name="Site", values=c(0.2, 0.7),
labels=c("arb"="Arnold Arboretum", "hf"="Harvard Forest")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddsite_noisyhobo_boxplot_micros.pdf", width=10, height=6)
gddbox_sites
dev.off()
View(bball)
as.numeric(as.factor(bball$type))
plot(as.numeric(as.factor(bball$type)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$method)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Hobo Logger", "Weather Station"))
xtext <- seq(1, 2, by=1)
cols <-viridis_pal(option="viridis")(3)
pdf("figures/gddaccuracy_raw_noisyhobo_micros.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$type)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$method)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Hobo Logger", "Weather Station"))
dev.off()
pdf("figures/gddaccuracy_raw_noisyhobo_sites.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$site)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$site)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Arboretum", "Harvard Forest"))
dev.off()
####################################################################################################
####################################################################################################
####################################################################################################
#### Alright, so now we want to test if hobo data is a more accurate measure of the same weather - meaning, there might be microclimates!
## So I think the way to do this is to make sure that hobos and ws are the same level of accuracy---parameter #4 must be 0 for this to happen
# and then we need microclimates, which are parameters #10 and #14, just increase the same amount for now
simsdat <- bbfunc("hobo", "hobo", 0, 0, 300, 50, 11, 4, 1, 5, 9, 2, -1, 5)
bball <- simsdat[[1]]
xtext <- seq(1, 2, by=1)
cols <-viridis_pal(option="viridis")(3)
bball <- fstarrawfunc(bball)
pdf("figures/gddaccuracy_raw_micros.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$type)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$method)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Hobo Logger", "Weather Station"))
dev.off()
pdf("figures/gddaccuracy_raw_sites.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$site)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$site)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Arboretum", "Harvard Forest"))
dev.off()
spcols <-viridis_pal(option="viridis")(15)
gddbox<- ggplot(bball, aes(x=species, y=gdd, alpha=method)) + geom_boxplot(aes(alpha=as.factor(method), fill=as.factor(species), col=as.factor(species))) +
scale_fill_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_color_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() + xlab("") +
ylab("Growing Degree Days") +# coord_cartesian(ylim=c(50,165)) +
scale_alpha_manual(name="Method", values=c(0.2, 0.7),
labels=c("hobo"="Hobo Logger", "ws"="Weather Station")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddmethod_boxplot_micros.pdf", width=10, height=6)
gddbox
dev.off()
gddbox_sites<- ggplot(bball, aes(x=species, y=gdd, alpha=site)) + geom_boxplot(aes(alpha=as.factor(site), fill=as.factor(species), col=as.factor(species))) +
scale_fill_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_color_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() + xlab("") +
ylab("Growing Degree Days") +# coord_cartesian(ylim=c(50,165)) +
scale_alpha_manual(name="Site", values=c(0.2, 0.7),
labels=c("arb"="Arnold Arboretum", "hf"="Harvard Forest")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddsite_boxplot_micros.pdf", width=10, height=6)
gddbox_sites
dev.off()
use.urban <- "urban"
bball$treatmenttype <- if(use.urban=="urban"){ifelse(bball$site=="arb", 1, 0)}else if(use.urban=="prov"){
as.numeric(bball$prov)}
datalist.gdd <- with(bball,
list(y = gdd,
urban = treatmenttype,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(bball$species))
)
)
urbmethod_fake = stan('stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 4000, warmup=3500, chains=4)#, control=list(adapt_delta=0.99, max_treedepth=15))
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <-rep(viridis_pal(option="viridis")(9),2)
my.pch <- rep(15:18, each=10)
alphahere = 0.4
modoutput <- summary(urbmethod_fake)$summary
noncps <- modoutput[!grepl("_ncp", rownames(modoutput)),]
modelhere <- urbmethod_fake
spnum <- length(unique(bball$species))
pdf("figures/muplot_micros.pdf", width=7, height=4)
par(xpd=FALSE)
par(mar=c(5,10,3,10))
axis(2, at=1:6, labels=rev(labs), las=1)
abline(v=0, lty=2, col="darkgrey")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[c(3,2,4)]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
labs <- if(use.urban=="urban"){c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")}else if(use.urban=="prov"){
c("Provenance", "Weather Station", "Provenance x\nWeather Station",
"Sigma Provenance", "Sigma \nWeather Station",
"Sigma Interaction")}
plot(x=NULL,y=NULL, xlim=c(-30,30), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
par(xpd=TRUE) # so I can plot legend outside
#legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
#      col=alpha(my.pal[1:spnum], alphahere),
#     cex=1, bty="n", text.font=3)
dev.off()
modelhere <- urbmethod_fake
spnum <- length(unique(bball$species))
pdf("figures/muplot_micros.pdf", width=7, height=4)
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-30,30), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(labs), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[c(3,2,4)]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
#legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
#      col=alpha(my.pal[1:spnum], alphahere),
#     cex=1, bty="n", text.font=3)
dev.off()
####################################################################################################
####################################################################################################
####################################################################################################
#### Alright, so now we want to test if hobo data is a more accurate measure of the same weather - meaning, there might be microclimates!
## So I think the way to do this is to make sure that hobos and ws are the same level of accuracy---parameter #4 must be 0 for this to happen
# and then we need microclimates, which are parameters #9, #10, #13 and #14, just increase the same amount for now
simsdat <- bbfunc("hobo", "hobo", 0, 0, 300, 50, 10, 2, 2, 5, 10, 2, 2, 5)
bball <- simsdat[[1]]
xtext <- seq(1, 2, by=1)
cols <-viridis_pal(option="viridis")(3)
bball <- fstarrawfunc(bball)
pdf("figures/gddaccuracy_raw_micros.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$type)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$method)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Hobo Logger", "Weather Station"))
dev.off()
pdf("figures/gddaccuracy_raw_sites.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$site)),
as.numeric(bball$gdd_accuracy_raw), col=cols[as.factor(bball$site)],
ylab="Raw GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Arboretum", "Harvard Forest"))
dev.off()
spcols <-viridis_pal(option="viridis")(15)
gddbox<- ggplot(bball, aes(x=species, y=gdd, alpha=method)) + geom_boxplot(aes(alpha=as.factor(method), fill=as.factor(species), col=as.factor(species))) +
scale_fill_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_color_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() + xlab("") +
ylab("Growing Degree Days") +# coord_cartesian(ylim=c(50,165)) +
scale_alpha_manual(name="Method", values=c(0.2, 0.7),
labels=c("hobo"="Hobo Logger", "ws"="Weather Station")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddmethod_boxplot_micros.pdf", width=10, height=6)
gddbox
dev.off()
gddbox_sites<- ggplot(bball, aes(x=species, y=gdd, alpha=site)) + geom_boxplot(aes(alpha=as.factor(site), fill=as.factor(species), col=as.factor(species))) +
scale_fill_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_color_manual(name="Species", values=spcols, labels=sort(unique(bball$species))) +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() + xlab("") +
ylab("Growing Degree Days") +# coord_cartesian(ylim=c(50,165)) +
scale_alpha_manual(name="Site", values=c(0.2, 0.7),
labels=c("arb"="Arnold Arboretum", "hf"="Harvard Forest")) +
geom_point(aes(x=species, y=fstarspp), col="black") +
geom_point(aes(x=(species+0.1), y=fstarspp_raw), col="red") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
pdf("figures/gddsite_boxplot_micros.pdf", width=10, height=6)
gddbox_sites
dev.off()
use.urban <- "urban"
bball$treatmenttype <- if(use.urban=="urban"){ifelse(bball$site=="arb", 1, 0)}else if(use.urban=="prov"){
as.numeric(bball$prov)}
datalist.gdd <- with(bball,
list(y = gdd,
urban = treatmenttype,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(bball$species))
)
)
urbmethod_fake = stan('stan/urbanmethod_normal_ncp_inter.stan', data = datalist.gdd,
iter = 4000, warmup=3500, chains=4)#, control=list(adapt_delta=0.99, max_treedepth=15))
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <-rep(viridis_pal(option="viridis")(9),2)
my.pch <- rep(15:18, each=10)
alphahere = 0.4
modoutput <- summary(urbmethod_fake)$summary
noncps <- modoutput[!grepl("_ncp", rownames(modoutput)),]
modelhere <- urbmethod_fake
spnum <- length(unique(bball$species))
pdf("figures/muplot_micros.pdf", width=7, height=4)
par(xpd=FALSE)
par(mar=c(5,10,3,10))
axis(2, at=1:6, labels=rev(labs), las=1)
labs <- if(use.urban=="urban"){c("Arboretum", "Weather Station", "Arboretum x\nWeather Station",
"Sigma Arboretum", "Sigma \nWeather Station",
"Sigma Interaction")}else if(use.urban=="prov"){
c("Provenance", "Weather Station", "Provenance x\nWeather Station",
"Sigma Provenance", "Sigma \nWeather Station",
"Sigma Interaction")}
abline(v=0, lty=2, col="darkgrey")
plot(x=NULL,y=NULL, xlim=c(-30,30), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[c(3,2,4)]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
#legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
#      col=alpha(my.pal[1:spnum], alphahere),
#     cex=1, bty="n", text.font=3)
dev.off()
pdf("figures/muplot_micros.pdf", width=7, height=4)
par(xpd=FALSE)
par(mar=c(5,10,3,10))
plot(x=NULL,y=NULL, xlim=c(-30,30), yaxt='n', ylim=c(0,6),
xlab="Model estimate change in growing degree days to budburst", ylab="")
axis(2, at=1:6, labels=rev(labs), las=1)
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("mu_b_urban_sp", "mu_b_method_sp", "mu_b_um_sp", "sigma_b_urban_sp",
"sigma_b_method_sp", "sigma_b_um_sp")
for(i in 1:6){
pos.y<-(6:1)[i]
pos.x<-noncps[rownameshere[i],"mean"]
lines(noncps[rownameshere[i],c("25%","75%")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
for(spsi in 1:spnum){
pos.sps.i<-which(grepl(paste0("[",spsi,"]"),rownames(noncps),fixed=TRUE))[c(3,2,4)]
jitt<-(spsi/40) + 0.08
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-noncps[pos.sps.i[i],"mean"]
lines(noncps[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8, pch=my.pch[spsi], col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
#legend(120, 6, sort(unique(gsub("_", " ", bball$species))), pch=my.pch[1:spnum],
#      col=alpha(my.pal[1:spnum], alphahere),
#     cex=1, bty="n", text.font=3)
dev.off()
####################################################################################################
####################################################################################################
####################################################################################################
#### Alright, so now we want to test if hobo data is a more accurate measure of the same weather - meaning, there might be microclimates!
## So I think the way to do this is to make sure that hobos and ws are the same level of accuracy---parameter #4 must be 0 for this to happen
# and then we need microclimates, which are parameters #9, #10, #13 and #14, just increase the same amount for now
simsdat <- bbfunc("hobo", "hobo", 0, 0, 300, 50, 10, 2, 2, 5, 10, 2, 2, 5)
bball <- simsdat[[1]]
xtext <- seq(1, 2, by=1)
cols <-viridis_pal(option="viridis")(3)
pdf("figures/gddaccuracy_micros.pdf", width=6, height=4)
plot(as.numeric(as.factor(bball$type)),
as.numeric(bball$gdd_accuracy), col=cols[as.factor(bball$method)],
ylab="GDD accuracy", xaxt="none",xlab="")
axis(side=1, at=xtext, labels = c("Hobo Logger", "Weather Station"))
dev.off()
