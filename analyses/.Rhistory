post$Site.Num..11, post$Site.Num..12,
post$Site.Num..13, post$Site.Num..14,
post$Site.Num..15, post$Site.Num..16,
post$Site.Num..17, post$Site.Num..18,
post$Site.Num..19, post$Site.Num..20,
post$Site.Num..21, post$Site.Num..22,
post$Site.Num..23, post$Site.Num..24,
post$Site.Num..25, post$Site.Num..26,
post$Site.Num..27, post$Site.Num..28,
post$Site.Num..29, post$Site.Num..30,
post$Site.Num..31, post$Site.Num..32,
post$Site.Num..33, post$Site.Num..34,
post$Site.Num..35, post$Site.Num..36,
post$Site.Num..37, post$Site.Num..38,
post$Site.Num..39, post$Site.Num..40,
post$Site.Num..41, post$Site.Num..42,
post$Site.Num..43, post$Site.Num..44,
post$Site.Num..45),
year = (as.numeric(rownames(post))+2000))
site.post<-full_join(postdata, sites)
site.post$x<-NULL
site.post$y<-NULL
if(FALSE){
middata<-data.frame(chillutah = c(mid$Mean.Utah.1, mid$Mean.Utah.2,
mid$Mean.Utah.3, mid$Mean.Utah.4,
mid$Mean.Utah.5, mid$Mean.Utah.6,
mid$Mean.Utah.7, mid$Mean.Utah.8,
mid$Mean.Utah.9, mid$Mean.Utah.10,
mid$Mean.Utah.11, mid$Mean.Utah.12,
mid$Mean.Utah.13, mid$Mean.Utah.14,
mid$Mean.Utah.15, mid$Mean.Utah.16,
mid$Mean.Utah.17, mid$Mean.Utah.18,
mid$Mean.Utah.19, mid$Mean.Utah.20,
mid$Mean.Utah.21, mid$Mean.Utah.22,
mid$Mean.Utah.23, mid$Mean.Utah.24,
mid$Mean.Utah.25, mid$Mean.Utah.26,
mid$Mean.Utah.27, mid$Mean.Utah.28,
mid$Mean.Utah.29, mid$Mean.Utah.30,
mid$Mean.Utah.31, mid$Mean.Utah.32,
mid$Mean.Utah.33, mid$Mean.Utah.34,
mid$Mean.Utah.35, mid$Mean.Utah.36,
mid$Mean.Utah.37, mid$Mean.Utah.38),
chillports = c(mid$Mean.Port.1, mid$Mean.Port.2,
mid$Mean.Port.3, mid$Mean.Port.4,
mid$Mean.Port.5, mid$Mean.Port.6,
mid$Mean.Port.7, mid$Mean.Port.8,
mid$Mean.Port.9, mid$Mean.Port.10,
mid$Mean.Port.11, mid$Mean.Port.12,
mid$Mean.Port.13, mid$Mean.Port.14,
mid$Mean.Port.15, mid$Mean.Port.16,
mid$Mean.Port.17, mid$Mean.Port.18,
mid$Mean.Port.19, mid$Mean.Port.20,
mid$Mean.Port.21, mid$Mean.Port.22,
mid$Mean.Port.23, mid$Mean.Port.24,
mid$Mean.Port.25, mid$Mean.Port.26,
mid$Mean.Port.27, mid$Mean.Port.28,
mid$Mean.Port.29, mid$Mean.Port.30,
mid$Mean.Port.31, mid$Mean.Port.32,
mid$Mean.Port.33, mid$Mean.Port.34,
mid$Mean.Port.35, mid$Mean.Port.36,
mid$Mean.Port.37, mid$Mean.Port.38),
gdd = c(mid$Mean.GDD.1, mid$Mean.GDD.2,
mid$Mean.GDD.3, mid$Mean.GDD.4,
mid$Mean.GDD.5, mid$Mean.GDD.6,
mid$Mean.GDD.7, mid$Mean.GDD.8,
mid$Mean.GDD.9, mid$Mean.GDD.10,
mid$Mean.GDD.11, mid$Mean.GDD.12,
mid$Mean.GDD.13, mid$Mean.GDD.14,
mid$Mean.GDD.15, mid$Mean.GDD.16,
mid$Mean.GDD.17, mid$Mean.GDD.18,
mid$Mean.GDD.19, mid$Mean.GDD.20,
mid$Mean.GDD.21, mid$Mean.GDD.22,
mid$Mean.GDD.23, mid$Mean.GDD.24,
mid$Mean.GDD.25, mid$Mean.GDD.26,
mid$Mean.GDD.27, mid$Mean.GDD.28,
mid$Mean.GDD.29, mid$Mean.GDD.30,
mid$Mean.GDD.31, mid$Mean.GDD.32,
mid$Mean.GDD.33, mid$Mean.GDD.34,
mid$Mean.GDD.35, mid$Mean.GDD.36,
mid$Mean.GDD.37, mid$Mean.GDD.38),
mat.lo = c(mid$Spring.Temp.1, mid$Spring.Temp.2,
mid$Spring.Temp.3, mid$Spring.Temp.4,
mid$Spring.Temp.5, mid$Spring.Temp.6,
mid$Spring.Temp.7, mid$Spring.Temp.8,
mid$Spring.Temp.9, mid$Spring.Temp.10,
mid$Spring.Temp.11, mid$Spring.Temp.12,
mid$Spring.Temp.13, mid$Spring.Temp.14,
mid$Spring.Temp.15, mid$Spring.Temp.16,
mid$Spring.Temp.17, mid$Spring.Temp.18,
mid$Spring.Temp.19, mid$Spring.Temp.20,
mid$Spring.Temp.21, mid$Spring.Temp.22,
mid$Spring.Temp.23, mid$Spring.Temp.24,
mid$Spring.Temp.25, mid$Spring.Temp.26,
mid$Spring.Temp.27, mid$Spring.Temp.28,
mid$Spring.Temp.29, mid$Spring.Temp.30,
mid$Spring.Temp.31, mid$Spring.Temp.32,
mid$Spring.Temp.33, mid$Spring.Temp.34,
mid$Spring.Temp.35, mid$Spring.Temp.36,
mid$Spring.Temp.37, mid$Spring.Temp.38),
siteslist = c(mid$Site.Num..1, mid$Site.Num..2,
mid$Site.Num..3, mid$Site.Num..4,
mid$Site.Num..5, mid$Site.Num..6,
mid$Site.Num..7, mid$Site.Num..8,
mid$Site.Num..9, mid$Site.Num..10,
mid$Site.Num..11, mid$Site.Num..12,
mid$Site.Num..13, mid$Site.Num..14,
mid$Site.Num..15, mid$Site.Num..16,
mid$Site.Num..17, mid$Site.Num..18,
mid$Site.Num..19, mid$Site.Num..20,
mid$Site.Num..21, mid$Site.Num..22,
mid$Site.Num..23, mid$Site.Num..24,
mid$Site.Num..25, mid$Site.Num..26,
mid$Site.Num..27, mid$Site.Num..28,
mid$Site.Num..29, mid$Site.Num..30,
mid$Site.Num..31, mid$Site.Num..32,
mid$Site.Num..33, mid$Site.Num..34,
mid$Site.Num..35, mid$Site.Num..36,
mid$Site.Num..37, mid$Site.Num..38),
year = (as.numeric(rownames(mid))+1970))
site.mid<-full_join(middata, sites)
site.mid$x<-NULL
site.mid$y<-NULL
}
full.site<-full_join(site, site.post)
#full.site<-full_join(full.site, site.mid)
full.site$year<-as.numeric(full.site$year)
full.site$cc <- NA
full.site$cc <- ifelse(full.site$year<=1960, "1950-1960", full.site$cc)
#full.site$cc <- ifelse(full.site$year>1970 & full.site$year<=1990, "1970-1990", full.site$cc)
full.site$cc <- ifelse(full.site$year>2000 & full.site$year<=2010, "2000-2010", full.site$cc)
lodata <- subset(allpeps.subset, select=c("year", "lat", "long", "lo"))
full.site <- left_join(full.site, lodata)
full.site.nonas <- full.site[!is.na(full.site$lo),]
if(FALSE){
allchillsgdds<-rbind(full.site1, full.site2)
allchillsgdds<-rbind(allchillsgdds, full.site3)
allchillsgdds<-rbind(allchillsgdds, full.site4)
allchillsgdds<-rbind(allchillsgdds, full.site5)
}
period <- c(1951:1960, 2001:2010)
sites<-subset(full.site, select=c(lat, long, lat.long))
sites<-sites[!duplicated(sites$lat.long),]
sites$x<-sites$long
sites$y<-sites$lat
Coords<-subset(sites, select=c(x, y))
Coords <- na.omit(Coords)
nsites<-length(sites$lat.long)
tmin <- rn
tmax <- rx
points.min <- SpatialPoints(Coords, proj4string = rn@crs)
points.max <- SpatialPoints(Coords, proj4string = rx@crs)
yearsinclim<-as.numeric(format(as.Date(names(tmin),format="X%Y.%m.%d"),"%Y"))
yearsinperiod<-which(yearsinclim%in%period)
climsubmin<-subset(tmin,yearsinperiod)
climsubmax<-subset(tmax,yearsinperiod)
## subset climate days
monthsinclim<-as.numeric(format(as.Date(names(climsubmin),format="X%Y.%m.%d"),"%m"))
mstmonths<-c(3:4)
monthsinmst<-which(monthsinclim%in%mstmonths)
mstsubmin<-subset(climsubmin,monthsinmst)
mstsubmax<-subset(climsubmax,monthsinmst)
valuesmin <- raster::extract(mstsubmin,points.min)
valuesmax <- raster::extract(mstsubmax,points.max)
dclimmin <- cbind.data.frame(coordinates(points.min),valuesmin)
dclimmax <- cbind.data.frame(coordinates(points.max),valuesmax)
require(reshape2)
dxmin<-melt(dclimmin, id.vars=c("x","y"))
dxmax<-melt(dclimmax, id.vars=c("x","y"))
dxmin<-dxmin%>%
rename(long=x)%>%
rename(lat=y)%>%
rename(date=variable)%>%
rename(Tmin=value)
dxmax<-dxmax%>%
rename(long=x)%>%
rename(lat=y)%>%
rename(date=variable)%>%
rename(Tmax=value)
dx <- data.frame(lat=dxmin$lat, long=dxmin$long, date=dxmin$date, tmin=dxmin$Tmin, tmax=dxmax$Tmax)
dx$Tavg <- (dx$tmin+dx$tmax)/2
dx$date<-substr(dx$date, 2,11)
dx$Date<- gsub("[.]", "-", dx$date)
dx$tmin <- NULL
dx$tmax <- NULL
dx$date<-NULL
dx$year<-as.numeric(substr(dx$Date, 0, 4))
dx$lat.long<-paste(dx$lat, dx$long)
dx$mat<-ave(dx$Tavg, dx$year, dx$lat.long)
mst<-dx%>%dplyr::select(-Tavg, -Date)
mst<-mst[!duplicated(mst),]
fullsites45 <- left_join(full.site, mst)
write.csv(fullsites45, file="betpen_decsens_1950_2000.csv", row.names = FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
#Libraries
library(dplyr)
library(tidyr)
# Setting working directory. Add in your own path in an if statement for your file structure
setwd("~/Documents/git/decsens/analyses/pep_analyses")
# get some data
# Fagus sylvatica data from PEP (both have has GDD from 1 Jan to leafout)
# fs has mat from March 1st to June 1st and mat.lo is 30 days before leafout (uses tg -- aka mean -- data from E-OBS)
# fsalt is similar, but calculated uses txtm -- aka min and max (and we caculate the mean ourselves from those values) -- data from E-OBS) ... we don't use this currently
#fs <- read.csv("output/betpen_allchillsandgdds_45sites_mat_tntx_forsims.csv", header=TRUE)
#fspre <- read.csv("output/fs_climatedatapre.csv")
#fspost <- read.csv("output/fs_climatedatapost.csv")
fs <- read.csv("output/fagsyl_decsens_1950_2000.csv")
#fs <- read.csv("output/fagsyl_decsens_1950-2000.csv")
# loop to extract some model estimates
# this takes mean for each time period then allows comparison acrosgs the two resulting values
fsest <- data.frame(siteslist=numeric(), cc=character(), meanmat=numeric(), varmat=numeric(),  varlogmat=numeric(),
sdmat=numeric(), meanlo=numeric(), varlo=numeric(), varloglo=numeric(), sdlo=numeric(), meanutah=numeric(), meangdd=numeric(),
matslope=numeric(), matslopese=numeric(), matslopeconfint11=numeric(), matslopeconfint89=numeric(),
meanmatlo=numeric(),
matslopelog=numeric(), matslopelogse=numeric(), matslopelogconfint11=numeric(), matslopelogconfint89=numeric(),
varmatlo=numeric(), sdmatlo=numeric())
sitez <- unique(fs$siteslist)
for(i in c(1:length(sitez))){ # i <- 1
subby <- subset(fs, siteslist==sitez[i])
for(ccstate in c(1:2)){ ## ccstate=1
subbycc <- subset(subby, cc==unique(fs$cc)[ccstate])
meanmat <- mean(subbycc$mat, na.rm=TRUE)
varmat <- var(subbycc$mat, na.rm=TRUE)
varlogmat <- var(log(subbycc$mat), na.rm=TRUE)
sdmat <- sd(subbycc$mat, na.rm=TRUE)
meanmatlo <- mean(subbycc$mat.lo, na.rm=TRUE)
varmatlo <- var(subbycc$mat.lo, na.rm=TRUE)
sdmatlo <- sd(subbycc$mat.lo, na.rm=TRUE)
meanlo <- mean(subbycc$lo, na.rm=TRUE)
varlo <- var(subbycc$lo, na.rm=TRUE)
varloglo <- var(log(subbycc$lo), na.rm=TRUE)
sdlo <- sd(subbycc$lo, na.rm=TRUE)
meanutah <- mean(subbycc$chillutah, na.rm=TRUE)
meangdd <- mean(subbycc$gdd, na.rm=TRUE)
lmmat <- lm(lo~mat, data=subbycc)
lmmatse <- summary(lmmat)$coef[2,2]
lmmatconfint11 <- confint(lmmat,level=0.89)[2,1]
lmmatconfint89 <- confint(lmmat,level=0.89)[2,2]
lmmatlog <- lm(log(lo)~log(mat), data=subbycc)
lmmatlogse <- summary(lmmatlog)$coef[2,2]
lmmatconfintlog11 <- confint(lmmatlog,level=0.89)[2,1]
lmmatconfintlog89 <- confint(lmmatlog,level=0.89)[2,2]
fsestadd <- data.frame(siteslist=sitez[i], cc=unique(fs$cc)[ccstate], meanmat=meanmat,
varmat=varmat, varlogmat=varlogmat, sdmat=sdmat, meanlo=meanlo, varlo=varlo, varloglo=varloglo, sdlo=sdlo, meanutah=meanutah,
meangdd=meangdd, matslope=coef(lmmat)["mat"], matslopese=lmmatse, matslopeconfint11=lmmatconfint11,
matslopeconfint89=lmmatconfint89,
matslopelog=coef(lmmatlog)["log(mat)"], matslopelogse=lmmatlogse, matslopelogconfint11=lmmatconfintlog11,
matslopelogconfint89=lmmatconfintlog89,
meanmatlo=meanmatlo,
varmatlo=varmatlo, sdmatlo=sdmatlo)
fsest <- rbind(fsest, fsestadd)
}
}
meanhere <- aggregate(fsest[c("meanmat", "varmat", "varlogmat", "sdmat", "meanmatlo", "varmatlo", "sdmatlo", "meanlo", "varlo", "varloglo", "sdlo", "meanutah", "meangdd",
"matslope", "matslopese", "matslopeconfint11", "matslopeconfint89",  "matslopelog", "matslopelogse", "matslopelogconfint11", "matslopelogconfint89")], fsest["cc"], FUN=mean)
sdhere <- aggregate(fsest[c("meanmat", "varmat", "varlogmat", "meanmatlo", "varmatlo", "meanlo", "varlo", "varloglo", "meanutah", "meangdd", "matslope")],
fsest["cc"], FUN=sd)
#     cc    meanmat   varmat  varlogmat     sdmat meanmatlo varmatlo   sdmatlo   meanlo    varlo    varloglo
# 1950-1970 7.629376 1.237705 0.02278839 1.1112462  7.810838 1.336977 1.1276187 119.4534 63.49537 0.004566349
# 1990-2010 8.832890 0.901294 0.01227455 0.9488819  7.455157 1.037334 0.9979342 114.0345 31.88875 0.002603073
#   sdlo meanutah  meangdd  matslope matslopese matslopelog matslopelogse
# 7.862192 2093.090 91.08116 -4.651015   1.211960  -0.2883085    0.07817823
# 5.493083 2331.186 79.82799 -2.696109   1.182926  -0.2033251    0.09324998
fsest$matslopelog_exp <- exp(fsest$matslopelog)
#write.csv(fsest, file="output/fsestimates_withlog_1950to2010.csv", row.names = FALSE)
write.csv(fsest, file="output/fsestimates_withlog_1950_2000.csv", row.names = FALSE)
#write.csv(meanhere, file="output/fsestimates_twentyyrwindows.csv", row.names = FALSE)
write.csv(meanhere, file="output/fsestimates_tenyrwindows.csv", row.names = FALSE)
meanhere
rm(list=ls())
options(stringsAsFactors = FALSE)
#Libraries
library(dplyr)
library(tidyr)
# Setting working directory. Add in your own path in an if statement for your file structure
setwd("~/Documents/git/decsens/analyses/pep_analyses") # setwd("~/Documents/git/projects/treegarden/decsens/analyses/pep_analyses")
# get some data
# Betula puendula data from PEP (both have has GDD from 1 Jan to leafout)
# bp has mat from March 1st to June 1st and mat.lo is 30 days before leafout (uses tg -- aka mean -- data from E-OBS)
# bpalt is similar, but calculated uses txtm -- aka min and max (and we caculate the mean ourselves from those values) -- data from E-OBS) ... we don't use this currently
#bp <- read.csv("output/betpen_allchillsandgdds_45sites_mat_tntx_forsims.csv", header=TRUE)
#bppre <- read.csv("output/bp_climatedatapre.csv")
#bppost <- read.csv("output/bp_climatedatapost.csv")
bp <- read.csv("output/betpen_decsens_1950_2000.csv")
# loop to extract some model estimates
# this takes mean for each time period then allows comparison acrosgs the two resulting values
bpest <- data.frame(siteslist=numeric(), cc=character(), meanmat=numeric(), varmat=numeric(),  varlogmat=numeric(),
sdmat=numeric(), meanlo=numeric(), varlo=numeric(), varloglo=numeric(), sdlo=numeric(), meanutah=numeric(), meangdd=numeric(),
matslope=numeric(), matslopese=numeric(), matslopeconfint11=numeric(), matslopeconfint89=numeric(),
meanmatlo=numeric(),
matslopelog=numeric(), matslopelogse=numeric(), matslopelogconfint11=numeric(), matslopelogconfint89=numeric(),
varmatlo=numeric(), sdmatlo=numeric())
sitez <- unique(bp$siteslist)
for(i in c(1:length(sitez))){ # i <- 1
subby <- subset(bp, siteslist==sitez[i])
for(ccstate in c(1:2)){ ## ccstate=1
subbycc <- subset(subby, cc==unique(bp$cc)[ccstate])
meanmat <- mean(subbycc$mat, na.rm=TRUE)
varmat <- var(subbycc$mat, na.rm=TRUE)
varlogmat <- var(log(subbycc$mat), na.rm=TRUE)
sdmat <- sd(subbycc$mat, na.rm=TRUE)
meanmatlo <- mean(subbycc$mat.lo, na.rm=TRUE)
varmatlo <- var(subbycc$mat.lo, na.rm=TRUE)
sdmatlo <- sd(subbycc$mat.lo, na.rm=TRUE)
meanlo <- mean(subbycc$lo, na.rm=TRUE)
varlo <- var(subbycc$lo, na.rm=TRUE)
varloglo <- var(log(subbycc$lo), na.rm=TRUE)
sdlo <- sd(subbycc$lo, na.rm=TRUE)
meanutah <- mean(subbycc$chillutah, na.rm=TRUE)
meangdd <- mean(subbycc$gdd, na.rm=TRUE)
lmmat <- lm(lo~mat, data=subbycc)
lmmatse <- summary(lmmat)$coef[2,2]
lmmatconfint11 <- confint(lmmat,level=0.89)[2,1]
lmmatconfint89 <- confint(lmmat,level=0.89)[2,2]
lmmatlog <- lm(log(lo)~log(mat), data=subbycc)
lmmatlogse <- summary(lmmatlog)$coef[2,2]
lmmatconfintlog11 <- confint(lmmatlog,level=0.89)[2,1]
lmmatconfintlog89 <- confint(lmmatlog,level=0.89)[2,2]
bpestadd <- data.frame(siteslist=sitez[i], cc=unique(bp$cc)[ccstate], meanmat=meanmat,
varmat=varmat, varlogmat=varlogmat, sdmat=sdmat, meanlo=meanlo, varlo=varlo, varloglo=varloglo, sdlo=sdlo, meanutah=meanutah,
meangdd=meangdd, matslope=coef(lmmat)["mat"], matslopese=lmmatse, matslopeconfint11=lmmatconfint11,
matslopeconfint89=lmmatconfint89,
matslopelog=coef(lmmatlog)["log(mat)"], matslopelogse=lmmatlogse, matslopelogconfint11=lmmatconfintlog11,
matslopelogconfint89=lmmatconfintlog89,
meanmatlo=meanmatlo,
varmatlo=varmatlo, sdmatlo=sdmatlo)
bpest <- rbind(bpest, bpestadd)
}
}
meanhere <- aggregate(bpest[c("meanmat", "varmat", "varlogmat", "sdmat", "meanmatlo", "varmatlo", "sdmatlo", "meanlo", "varlo", "varloglo", "sdlo", "meanutah", "meangdd",
"matslope", "matslopese", "matslopeconfint11", "matslopeconfint89",  "matslopelog", "matslopelogse", "matslopelogconfint11", "matslopelogconfint89")], bpest["cc"], FUN=mean)
sdhere <- aggregate(bpest[c("meanmat", "varmat", "varlogmat", "meanmatlo", "varmatlo", "meanlo", "varlo", "varloglo", "meanutah", "meangdd", "matslope")],
bpest["cc"], FUN=sd)
#      cc     meanmat    varmat  varlogmat     sdmat meanmatlo varmatlo   sdmatlo  meanlo    varlo    varloglo
# 1950-1970 7.661285 1.2515107 0.02308514 1.1172600  7.267610 1.076558 0.9952432 114.926 81.65211 0.006449103
# 1990-2010 8.807405 0.8897012 0.01224291 0.9427715  6.600241 1.010194 0.9970972 106.422 42.46895 0.003875612
#     sdlo meanutah  meangdd  matslope matslopese matslopeconfint11 matslopeconfint89 matslopelog matslopelogse
# 8.914409 2038.200 77.86681 -6.042843   1.204039         -8.067031        -4.0186559  -0.3978114    0.08225647
# 6.363890 2287.104 59.19161 -2.291221   1.481032         -4.781080         0.1986369  -0.1839502    0.12221731
#      matslopelogconfint11 matslopelogconfint89
#           -0.5360981          -0.25952477
#           -0.3894176           0.02151724
bpest$matslopelog_exp <- exp(bpest$matslopelog)
#write.csv(bpest, file="output/bpenestimates_withlog_1950to2010.csv", row.names = FALSE)
write.csv(bpest, file="output/bpenestimates_withlog_1950_2000.csv", row.names = FALSE)
#write.csv(meanhere, file="output/bpestimates_twentyyrwindows.csv", row.names = FALSE)
write.csv(meanhere, file="output/bpestimates_tenyrwindows.csv", row.names = FALSE)
meanhere
rm(list=ls())
options(stringsAsFactors = FALSE)
#Libraries
library(dplyr)
library(tidyr)
# Setting working directory. Add in your own path in an if statement for your file structure
setwd("~/Documents/git/decsens/analyses/pep_analyses") # setwd("~/Documents/git/projects/treegarden/decsens/analyses/pep_analyses")
# get some data
# Betula puendula data from PEP (both have has GDD from 1 Jan to leafout)
# bp has mat from March 1st to June 1st and mat.lo is 30 days before leafout (uses tg -- aka mean -- data from E-OBS)
# bpalt is similar, but calculated uses txtm -- aka min and max (and we caculate the mean ourselves from those values) -- data from E-OBS) ... we don't use this currently
#bp <- read.csv("output/betpen_allchillsandgdds_45sites_mat_tntx_forsims.csv", header=TRUE)
#bppre <- read.csv("output/bp_climatedatapre.csv")
#bppost <- read.csv("output/bp_climatedatapost.csv")
bp <- read.csv("output/betpen_decsens_1950_2000.csv")
#bp <- read.csv("output/betpen_decsens_1950-2000.csv")
# loop to extract some model estimates
# this takes mean for each time period then allows comparison acrosgs the two resulting values
bpest <- data.frame(siteslist=numeric(), cc=character(), meanmat=numeric(), varmat=numeric(),  varlogmat=numeric(),
sdmat=numeric(), meanlo=numeric(), varlo=numeric(), varloglo=numeric(), sdlo=numeric(), meanutah=numeric(), meangdd=numeric(),
matslope=numeric(), matslopese=numeric(), matslopeconfint11=numeric(), matslopeconfint89=numeric(),
meanmatlo=numeric(),
matslopelog=numeric(), matslopelogse=numeric(), matslopelogconfint11=numeric(), matslopelogconfint89=numeric(),
varmatlo=numeric(), sdmatlo=numeric())
sitez <- unique(bp$siteslist)
for(i in c(1:length(sitez))){ # i <- 1
subby <- subset(bp, siteslist==sitez[i])
for(ccstate in c(1:2)){ ## ccstate=1
subbycc <- subset(subby, cc==unique(bp$cc)[ccstate])
meanmat <- mean(subbycc$mat, na.rm=TRUE)
varmat <- var(subbycc$mat, na.rm=TRUE)
varlogmat <- var(log(subbycc$mat), na.rm=TRUE)
sdmat <- sd(subbycc$mat, na.rm=TRUE)
meanmatlo <- mean(subbycc$mat.lo, na.rm=TRUE)
varmatlo <- var(subbycc$mat.lo, na.rm=TRUE)
sdmatlo <- sd(subbycc$mat.lo, na.rm=TRUE)
meanlo <- mean(subbycc$lo, na.rm=TRUE)
varlo <- var(subbycc$lo, na.rm=TRUE)
varloglo <- var(log(subbycc$lo), na.rm=TRUE)
sdlo <- sd(subbycc$lo, na.rm=TRUE)
meanutah <- mean(subbycc$chillutah, na.rm=TRUE)
meangdd <- mean(subbycc$gdd, na.rm=TRUE)
lmmat <- lm(lo~mat, data=subbycc)
lmmatse <- summary(lmmat)$coef[2,2]
lmmatconfint11 <- confint(lmmat,level=0.89)[2,1]
lmmatconfint89 <- confint(lmmat,level=0.89)[2,2]
lmmatlog <- lm(log(lo)~log(mat), data=subbycc)
lmmatlogse <- summary(lmmatlog)$coef[2,2]
lmmatconfintlog11 <- confint(lmmatlog,level=0.89)[2,1]
lmmatconfintlog89 <- confint(lmmatlog,level=0.89)[2,2]
bpestadd <- data.frame(siteslist=sitez[i], cc=unique(bp$cc)[ccstate], meanmat=meanmat,
varmat=varmat, varlogmat=varlogmat, sdmat=sdmat, meanlo=meanlo, varlo=varlo, varloglo=varloglo, sdlo=sdlo, meanutah=meanutah,
meangdd=meangdd, matslope=coef(lmmat)["mat"], matslopese=lmmatse, matslopeconfint11=lmmatconfint11,
matslopeconfint89=lmmatconfint89,
matslopelog=coef(lmmatlog)["log(mat)"], matslopelogse=lmmatlogse, matslopelogconfint11=lmmatconfintlog11,
matslopelogconfint89=lmmatconfintlog89,
meanmatlo=meanmatlo,
varmatlo=varmatlo, sdmatlo=sdmatlo)
bpest <- rbind(bpest, bpestadd)
}
}
meanhere <- aggregate(bpest[c("meanmat", "varmat", "varlogmat", "sdmat", "meanmatlo", "varmatlo", "sdmatlo", "meanlo", "varlo", "varloglo", "sdlo", "meanutah", "meangdd",
"matslope", "matslopese", "matslopeconfint11", "matslopeconfint89",  "matslopelog", "matslopelogse", "matslopelogconfint11", "matslopelogconfint89")], bpest["cc"], FUN=mean)
sdhere <- aggregate(bpest[c("meanmat", "varmat", "varlogmat", "meanmatlo", "varmatlo", "meanlo", "varlo", "varloglo", "meanutah", "meangdd", "matslope")],
bpest["cc"], FUN=sd)
#      cc     meanmat    varmat  varlogmat     sdmat meanmatlo varmatlo   sdmatlo  meanlo    varlo    varloglo
# 1950-1970 7.661285 1.2515107 0.02308514 1.1172600  7.267610 1.076558 0.9952432 114.926 81.65211 0.006449103
# 1990-2010 8.807405 0.8897012 0.01224291 0.9427715  6.600241 1.010194 0.9970972 106.422 42.46895 0.003875612
#     sdlo meanutah  meangdd  matslope matslopese matslopeconfint11 matslopeconfint89 matslopelog matslopelogse
# 8.914409 2038.200 77.86681 -6.042843   1.204039         -8.067031        -4.0186559  -0.3978114    0.08225647
# 6.363890 2287.104 59.19161 -2.291221   1.481032         -4.781080         0.1986369  -0.1839502    0.12221731
#      matslopelogconfint11 matslopelogconfint89
#           -0.5360981          -0.25952477
#           -0.3894176           0.02151724
bpest$matslopelog_exp <- exp(bpest$matslopelog)
#write.csv(bpest, file="output/bpenestimates_withlog_1950to2010.csv", row.names = FALSE)
write.csv(bpest, file="output/bpenestimates_withlog_1950_2000.csv", row.names = FALSE)
#write.csv(meanhere, file="output/bpestimates_twentyyrwindows.csv", row.names = FALSE)
write.csv(meanhere, file="output/bpestimates_tenyrwindows.csv", row.names = FALSE)
meanhere
ws_urb <- read.csv("output/clean_gdd_bbanddvr.csv")
rm(list=ls())
options(stringsAsFactors = FALSE)
#### Questions to address:
## Compare GDDs between hobo loggers and weather station data
# 1) GDDlo ~ 1 + (1|species) - do once for HF weather station, once for hobo logger and repeat for Arboretum
# Compare urban effect using weather station data and then hobo logger data
# 2) GDDlo ~ urban + (urban|species) - do once with weather station data and once with hobo logger data
## Let's start with Question 1 first...
library(bayesplot) ## for plotting
library(egg) ## for plotting
library(shinystan)
library(rstanarm)
library(rstan)
library(brms)
## Let's load some real data to check out.
setwd("~/Documents/git/microclimates/analyses/")
source("source/stan_utility.R")
ws_urb <- read.csv("output/clean_gdd_bbanddvr.csv")
hobo_urb <- read.csv("output/clean_gdd_bbanddvr_hobo.csv")
View(ws_urb)
ws_urb$urban <- ifelse(ws_urb$type=="Harvard Forest", 0, 1)
datalist.wsurb <- with(ws_urb,
list(y = gdd_bb,
tx = urban,
sp = as.numeric(as.factor(species)),
N = nrow(ws_urb),
n_sp = length(unique(ws_urb$species))
)
)
ws_urb_mod = stan('stan/urbanmodel_stan_normal_weather.stan', data = datalist.wsurb,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
ws_urb.stan <- subset(ws_urb, select=c(gdd_bb, urban, species))
ws_urb.stan <- complete.cases(ws_urb.stan)
ws_urb.stan <- subset(ws_urb, select=c(gdd_bb, urban, species))
ws_urb.stan <- ws_urb.stan[(complete.cases(ws_urb.stan),]
ws_urb.stan <- subset(ws_urb, select=c(gdd_bb, urban, species))
ws_urb.stan <- ws_urb.stan[(complete.cases(ws_urb.stan)),]
View(ws_urb.stan)
ws_urb.stan <- subset(ws_urb, select=c(gdd_bb, urban, genus, species))
ws_urb.stan <- ws_urb.stan[(complete.cases(ws_urb.stan)),]
ws_urb.stan$spp <- paste(ws_urb.stan$genus, ws_urb.stan$species, sep="_")
datalist.wsurb <- with(ws_urb.stan,
list(y = gdd_bb,
tx = urban,
sp = as.numeric(as.factor(spp)),
N = nrow(ws_urb.stan),
n_sp = length(unique(ws_urb.stan$spp))
)
)
ws_urb_mod = stan('stan/urbanmodel_stan_normal_weather.stan', data = datalist.wsurb,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
check_all_diagnostics(ws_urb_fake)
check_all_diagnostics(ws_urb_mod)
ws_urb_mod.sum <- summary(ws_urb_mod)$summary
ws_urb_mod.sum[grep("mu_", rownames(ws_urb_mod.sum)),]
ws_urb_mod.sum[grep("sigma_", rownames(ws_urb_mod.sum)),]
save(ws_urb_mod, file="~/Documents/git/microclimates/analyses/stan/ws_urban_mod.Rdata")
pp_check(ws_urb_mod)
hobo_urb <- read.csv("output/clean_gdd_bbanddvr_hobo.csv")
hobo_urb$urban <- ifelse(hobo_urb$type=="Harvard Forest", 0, 1)
hobo_urb.stan <- subset(hobo_urb, select=c(gdd_bb, urban, genus, species))
hobo_urb.stan <- hobo_urb.stan[(complete.cases(hobo_urb.stan)),]
hobo_urb.stan$spp <- paste(hobo_urb.stan$genus, hobo_urb.stan$species, sep="_")
datalist.hobourb <- with(hobo_urb.stan,
list(y = gdd_bb,
tx = urban,
sp = as.numeric(as.factor(spp)),
N = nrow(hobo_urb.stan),
n_sp = length(unique(hobo_urb.stan$spp))
)
)
hobo_urb_mod = stan('stan/urbanmodel_stan_normal_hobo.stan', data = datalist.hobourb,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
hobo_urb_mod = stan('stan/urbanmodel_stan_normal_hobo.stan', data = datalist.hobourb,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
hobo_urb_mod = stan('stan/urbanmodel_stan_normal_hobo.stan', data = datalist.hobourb,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
check_all_diagnostics(hobo_urb_mod)
hobo_urb_mod.sum <- summary(hobo_urb_mod)$summary
hobo_urb_mod.sum[grep("mu_", rownames(hobo_urb_mod.sum)),]
hobo_urb_mod.sum[grep("sigma_", rownames(hobo_urb_mod.sum)),]
ws_urb_mod.sum[grep("mu_", rownames(ws_urb_mod.sum)),]
ws_urb_mod.sum[grep("sigma_", rownames(ws_urb_mod.sum)),]
