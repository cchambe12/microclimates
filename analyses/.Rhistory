my.pch <- rep(15:16, each=9)
#my.pch <- my.pch[c(1:12, 14:29, 31:32, 34:48)]
# display.brewer.all()
alphahere = 0.4
xlab <- "Model estimate of change in growth (cm)" ## change based on model
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_brms.R")
cgspp <- c("Acer pensylvanicum", "Acer spicatum", "Alnus incana", "Amelanchier \ncanadensis", "Aronia melonacarpa",
"Betula alleghaniensis", "Betula papyrifera", "Betula populifolia", "Diervilla lonicera", "Myrica gale",
"Quercus alba", "Quercus rubra", "Sambucus racemosa", "Sorbus americana", "Spirea alba", "Spirea tomentosa",
"Viburnum cassinoides")
speciesnames <- cgspp ### species here!!!
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_brms.R")
muplotfx(modelhere, "", 8, 8, c(0,2), c(-8, 2) , 2.3, 1.5)
muplotfx(modelhere, "", 8, 8, c(0,2), c(-8, 2) , 2.3, 2)
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_brms.R")
muplotfx(modelhere, "", 8, 8, c(0,2), c(-8, 2) , 2.3, 2)
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_brms.R")
muplotfx(modelhere, "", 8, 8, c(0,2), c(-8, 2) , 2.3, 2)
cgspp <- c("Acer pensylvanicum", "Acer spicatum", "Alnus incana", "Amelanchier canadensis", "Aronia melonacarpa",
"Betula alleghaniensis", "Betula papyrifera", "Betula populifolia", "Diervilla lonicera", "Myrica gale",
"Quercus alba", "Quercus rubra", "Sambucus racemosa", "Sorbus americana", "Spirea alba", "Spirea tomentosa",
"Viburnum cassinoides")
speciesnames <- cgspp ### species here!!!
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_brms.R")
muplotfx(modelhere, "", 9, 8, c(0,2), c(-8, 2) , 2.3, 2)
cgspp <- c("Acer pensylvanicum", "Acer spicatum", "Alnus incana", "Amelanchier \ncanadensis", "Aronia melonacarpa",
"Betula alleghaniensis", "Betula papyrifera", "Betula populifolia", "Diervilla lonicera", "Myrica gale",
"Quercus alba", "Quercus rubra", "Sambucus racemosa", "Sorbus americana", "Spirea alba", "Spirea tomentosa",
"Viburnum cassinoides")
speciesnames <- cgspp ### species here!!!
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_brms.R")
muplotfx(modelhere, "", 8, 8, c(0,2), c(-8, 2) , 2.3, 2)
gddlo<-as.data.frame(tidy(mod_gddbb, prob=0.5))
gddlo<-as.data.frame(tidy(mod.gddbb, prob=0.5))
gddlo
mod.gddbb
gdd <- read.csv("output/clean_gdd_bbanddvr.csv", header=TRUE)
unique(gdd$species)
allspp <- sort(unique(paste(gdd$genus, gdd$species, sep=" ")))
allspp
gdd$genus <- ifelse(gdd$genus=="NA" & gdd$type=="Common Garden", "Quercus", gdd$genus)
gdd$species <- ifelse(gdd$genus=="NA" & gdd$type=="Common Garden", "alba", gdd$species)
allspp <- sort(unique(paste(gdd$genus, gdd$species, sep=" ")))
allspp
View(gdd)
gdd$genus <- ifelse(is.na(gdd$genus) & gdd$type=="Common Garden", "Quercus", gdd$genus)
gdd$species <- ifelse(is.na(gdd$genus) & gdd$type=="Common Garden", "alba", gdd$species)
allspp <- sort(unique(paste(gdd$genus, gdd$species, sep=" ")))
allspp
source('~/Documents/git/microclimates/analyses/models_plotting_all.R', echo=TRUE)
gdd$genus <- ifelse(is.na(gdd$genus) & gdd$type=="Common Garden", "Quercus", gdd$genus)
gdd$species <- ifelse(is.na(gdd$species) & gdd$type=="Common Garden", "alba", gdd$species)
allspp <- sort(unique(paste(gdd$genus, gdd$species, sep=" ")))
modoutput <- gddlo #modelhere
View(modoutput)
modoutput<-modoutput[c(2:4, 47:139),]
modoutput$lower <- modoutput$lower
modoutput$upper <- modoutput$upper
modoutput$term<-gsub(".*b_","",modoutput$term)
modoutput$term<-gsub(".*spp","",modoutput$term)
#### Now for mu plots based of bb_analysis/models_stan_plotting.R ###
figpath <- "figures"
cols <- adjustcolor("indianred3", alpha.f = 0.3)
cols <- viridis_pal(option="C")(11)
#my.pal <- rep(brewer.pal(n = 8, name = "Dark2"), 8)
my.pch <- rep(15:17, each=11)
#my.pch <- my.pch[c(1:12, 14:29, 31:32, 34:48)]
# display.brewer.all()
alphahere = 0.4
xlab <- "Model estimate of change in \ngrowing degree days to leafout" ## change based on model
modelhere <- mod.gddbb
sitecg <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitecg", "[", i, "]", sep="")
}
sitecg$parameter<-new.names
sitehf <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
spp <- allspp
sitecg <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitecg", "[", i, "]", sep="")
}
sitecg$parameter<-new.names
sitehf <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
allspp
gdd.stan <- read.csv("output/clean_gdd_bbanddvr.csv", header=TRUE)
#gdd.stan <- read.csv("/n/wolkovich_lab/Lab/Cat/clean_gdd_bbanddvr.csv")
gdd.stan$spp <- paste(substr(gdd.stan$genus, 0, 3), substr(gdd.stan$species,0,3), sep="")
gdd.stan$site <- NA
gdd.stan$site <- ifelse(gdd.stan$type=="Treespotters", "arb", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Common Garden", "cg", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Harvard Forest", "hf", gdd.stan$site)
gdd.stan <- subset(gdd.stan, select=c("id", "provenance.lat", "spp", "site",
"gdd_bb", "gdd_dvr", "fs.count", "gdd_lo"))
gdd.stan <- gdd.stan[!is.na(gdd.stan$provenance.lat),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_bb),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_dvr),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$spp),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_bb<1000),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_dvr<1000),]
gdd.stan$spp <- ifelse(gdd.stan$spp=="NANA", "Quealb", gdd.stan$spp)
allspp <- sort(unique(paste(gdd.stan$genus, gdd$species, sep=" ")))
spp <- allspp
sitecg <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitecg", "[", i, "]", sep="")
}
sitecg$parameter<-new.names
sitehf <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
allspp <- sort(unique(paste(gdd.stan$genus, gdd.stan$species, sep=" ")))
spp <- allspp
modelhere <- mod.gddbb
sitecg <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitecg", "[", i, "]", sep="")
}
sitecg$parameter<-new.names
sitehf <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitehf", "[", i, "]", sep="")
}
sitehf$parameter<-new.names
mod.ranef<-full_join(sitecg, sitehf)
prov.lat<- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("prov.lat", "[", i, "]", sep="")
}
prov.lat$parameter<-new.names
mod.ranef<-full_join(mod.ranef, prov.lat)
df <- gdd.stan ### dataframe here!!!!
speciesnames <- allspp ### species here!!!
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_all.R")
muplotfx(modelhere, "", 8, 8, c(0,3), c(-400, 700) , 720, 3)
my.pal <- viridis_pal(option="C")(11)
muplotfx(modelhere, "", 8, 8, c(0,3), c(-400, 700) , 720, 3)
speciesnames <- allspp ### species here!!!
allspp <- sort(unique(paste(gdd.stan$genus, gdd.stan$species, sep=" ")))
View(gdd.stan)
gdd.stan <- read.csv("output/clean_gdd_bbanddvr.csv", header=TRUE)
gdd.stan$spp <- paste(substr(gdd.stan$genus, 0, 3), substr(gdd.stan$species,0,3), sep="")
gdd.stan$site <- NA
gdd.stan$site <- ifelse(gdd.stan$type=="Treespotters", "arb", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Common Garden", "cg", gdd.stan$site)
gdd.stan$site <- ifelse(gdd.stan$type=="Harvard Forest", "hf", gdd.stan$site)
gdd.stan <- subset(gdd.stan, select=c("id", "provenance.lat", "spp", "site", "genus", "species",
"gdd_bb", "gdd_dvr", "fs.count", "gdd_lo"))
gdd.stan <- gdd.stan[!is.na(gdd.stan$provenance.lat),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_bb),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$gdd_dvr),]
gdd.stan <- gdd.stan[!is.na(gdd.stan$spp),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_bb<1000),]
gdd.stan <- gdd.stan[(gdd.stan$gdd_dvr<1000),]
gdd.stan$spp <- ifelse(gdd.stan$spp=="NANA", "Quealb", gdd.stan$spp)
allspp <- sort(unique(paste(gdd.stan$genus, gdd.stan$species, sep=" ")))
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <- viridis_pal(option="C")(11)
#my.pal <- rep(brewer.pal(n = 8, name = "Dark2"), 8)
my.pch <- rep(15:17, each=11)
#my.pch <- my.pch[c(1:12, 14:29, 31:32, 34:48)]
# display.brewer.all()
alphahere = 0.4
xlab <- "Model estimate of change in \ngrowing degree days to leafout" ## change based on model
spp <- allspp
modelhere <- mod.gddbb
sitecg <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitecg", "[", i, "]", sep="")
}
sitecg$parameter<-new.names
sitehf <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitehf", "[", i, "]", sep="")
}
sitehf$parameter<-new.names
allspp
View(mod.gddbb)
mod.gddbb
View(modelhere)
View(modoutput)
rmspp <- c("NA NA", "Acer rubra")
allspp <- allspp[!(allspp%in%rmspp),]
allspp <- allspp[!(allspp%in%rmspp)]
spp <- allspp
sitecg <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitecg", "[", i, "]", sep="")
}
sitecg$parameter<-new.names
sitehf <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("sitehf", "[", i, "]", sep="")
}
sitehf$parameter<-new.names
mod.ranef<-full_join(sitecg, sitehf)
prov.lat<- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("prov.lat", "[", i, "]", sep="")
}
prov.lat$parameter<-new.names
mod.ranef<-full_join(mod.ranef, prov.lat)
df <- gdd.stan ### dataframe here!!!!
speciesnames <- allspp ### species here!!!
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_all.R")
muplotfx(modelhere, "", 8, 8, c(0,3), c(-400, 700) , 720, 3)
#### Now for mu plots based of bb_analysis/models_stan_plotting.R ###
figpath <- "figures"
#figpathmore <- "cg_height" ### change based on model
figpathmore <- "site_prov_all" ### change based on model
muplotfx(modelhere, "", 8, 8, c(0,3), c(-400, 700) , 720, 3)
#my.pal <- viridis_pal(option="C")(11)
my.pal <- rep(brewer.pal(n = 11, name = "Set3"), 11)
my.pch <- rep(15:17, each=11)
axis(2, at=1:3, labels=rev(c("Common \nGarden", "Harvard Forest", "Provenance \nLatitude")),las=1)
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_all.R")
muplotfx(modelhere, "", 8, 8, c(0,3), c(-300, 300) , 320, 3)
muplotfx(modelhere, "", 8, 8, c(0,3), c(-200, 250) , 270, 3)
allspp <- ifelse("Amelanchier canadensis", "Amelanchier \ncanadensis", allspp)
allspp <- sort(unique(paste(gdd.stan$genus, gdd.stan$species, sep=" ")))
rmspp <- c("NA NA", "Acer rubra")
allspp <- allspp[!(allspp%in%rmspp)]
allspp <- ifelse(allspp=="Amelanchier canadensis", "Amelanchier \ncanadensis", allspp)
allspp <- ifelse(allspp=="Vaccinium corymbosum", "Vaccinium \ncorymbosum", allspp)
speciesnames <- allspp ### species here!!!
muplotfx(modelhere, "", 8, 8, c(0,3), c(-200, 250) , 270, 3)
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_all.R")
muplotfx(modelhere, "", 8, 8, c(0,3), c(-200, 250) , 270, 3)
allspp <- sort(unique(paste(gdd.stan$genus, gdd.stan$species, sep=" ")))
rmspp <- c("NA NA", "Acer rubra")
allspp <- allspp[!(allspp%in%rmspp)]
#allspp <- ifelse(allspp=="Amelanchier canadensis", "Amelanchier \ncanadensis", allspp)
#allspp <- ifelse(allspp=="Vaccinium corymbosum", "Vaccinium \ncorymbosum", allspp)
speciesnames <- allspp ### species here!!!
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_all.R")
muplotfx(modelhere, "", 8, 8, c(0,3), c(-200, 250) , 270, 3)
my.pal <- viridis_pal(option="C")(11)
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_all.R")
muplotfx(modelhere, "", 8, 8, c(0,3), c(-200, 250) , 270, 3)
my.pal <- rep(viridis_pal(option="C"), 11)
my.pal <- rep(viridis_pal(option="C", n=11), 11)
my.pal <- rep(viridis_pal(option="C", 11), 11)
my.pal <- rep(viridis_pal(option="C", begin=1, end=11), 11)
my.pal <- rep(viridis_pal(option="C", begin=1, end=11), each=11)
my.pal <- rep(viridis_pal(option="C")(11), each=11)
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_all.R")
muplotfx(modelhere, "", 8, 8, c(0,3), c(-200, 250) , 270, 3)
my.pal <- rep(viridis_pal(option="C")(11), times=11)
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_all.R")
muplotfx(modelhere, "", 8, 8, c(0,3), c(-200, 250) , 270, 3)
modoutput <- cgheight #modelhere
modoutput<-modoutput[c(2:3, 28:61),]
#modoutput<-modoutput[c(2:4, 47:139),]
modoutput$lower <- modoutput$lower
modoutput$upper <- modoutput$upper
modoutput$term<-gsub(".*b_","",modoutput$term)
modoutput$term<-gsub(".*spp","",modoutput$term)
#### Now for mu plots based of bb_analysis/models_stan_plotting.R ###
figpath <- "figures"
figpathmore <- "cg_height" ### change based on model
my.pal <- rep(viridis_pal(option="C")(9), times=9)
#my.pal <- rep(brewer.pal(n = 8, name = "Dark2"), 8)
my.pch <- rep(15:16, each=9)
#my.pch <- my.pch[c(1:12, 14:29, 31:32, 34:48)]
# display.brewer.all()
alphahere = 0.4
xlab <- "Model estimate of change in growth (cm)" ## change based on model
cg <- read.csv("output/clean_phenandtraits_growthform.csv", header=TRUE)
cg19 <- subset(cg, cg$year==2019)
cg19 <- subset(cg19, select=c("ht.diff", "spp", "provenance.lat", "budburst", "leafout", "risk"))
cg19 <- cg19[!duplicated(cg19),]
cg19.lo <- cg19[!is.na(cg19$leafout),]
spp <- unique(cg19.lo$spp)
modelhere <- ht.mod.lo
leafout$parameter<-new.names
mod.ranef<-leafout
prov.lat <- coef(modelhere, prob=c(0.25, 0.75))$spp[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(lower = Q25) %>%
rename(upper = Q75) %>%
dplyr::select( mean, lower, upper)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("provenance.lat", "[", i, "]", sep="")
}
prov.lat$parameter<-new.names
mod.ranef<-full_join(leafout, prov.lat)
df <- cg19.lo ### dataframe here!!!!
speciesnames <- cgspp ### species here!!!
#modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
source("exp_muplot_brms.R")
muplotfx(modelhere, "", 8, 8, c(0,2), c(-8, 2) , 2.3, 2)
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(RColorBrewer)
library(rstan)
library(brms)
library(broom)
library(egg)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/CGtraits/analyses")
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(RColorBrewer)
library(rstan)
library(brms)
library(broom)
library(egg)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/microclimates/analyses")
gdd <- read.csv("output/clean_gdd_bbanddvr.csv", header=TRUE)
cg <- read.csv("output/clean_phenandtraits_growthform.csv", header=TRUE)
cg19 <- subset(cg, cg$year==2019)
cg19 <- subset(cg19, select=c("ht.diff", "spp", "provenance.lat", "budburst", "leafout", "risk"))
cg19 <- cg19[!duplicated(cg19),]
View(cg)
View(gdd)
gdd <- subset(gdd, gdd$type="Common Garden")
gdd <- subset(gdd, gdd$type=="Common Garden")
View(gdd)
gdd <- subset(gdd, gdd$year==2019)
gdd$Individual <- gdd$id
gdd <- subset(gdd, select=c("Individual", "gdd_lo"))
cg19.gddlo <- left_join(cg19, gdd)
View(cg)
cg19 <- subset(cg, cg$year==2019)
cg19 <- subset(cg19, select=c("ht.diff", "spp", "Individual", "provenance.lat", "budburst", "leafout", "risk"))
cg19 <- cg19[!duplicated(cg19),]
cg19.gddlo <- left_join(cg19, gdd)
View(cg19)
View(cg19.gddlo)
gdd <- read.csv("output/clean_gdd_bbanddvr.csv", header=TRUE)
gdd <- subset(gdd, gdd$type=="Common Garden")
gdd <- subset(gdd, gdd$year==2019)
View(gdd)
gdd$Individual <- gsub("_[^_]+$", "", gdd$id)
View(gdd)
gdd <- subset(gdd, select=c("Individual", "gdd_lo"))
cg19.gddlo <- left_join(cg19, gdd)
View(cg19.gddlo)
gdd <- read.csv("output/clean_gdd_bbanddvr.csv", header=TRUE)
gdd <- subset(gdd, gdd$type=="Common Garden")
gdd <- subset(gdd, gdd$year==2019)
#gdd$Individual <- gsub("_[^_]+$", "", gdd$id)
gdd$Individual <- gdd$id
gdd <- subset(gdd, select=c("Individual", "gdd_lo"))
cg19 <- subset(cg19, select=c("ht.diff", "spp", "Individual", "plot", "provenance.lat", "budburst", "leafout", "risk"))
cg19 <- subset(cg, cg$year==2019)
cg19 <- subset(cg19, select=c("ht.diff", "spp", "Individual", "plot", "provenance.lat", "budburst", "leafout", "risk"))
cg19 <- cg19[!duplicated(cg19),]
View(cg)
cg19 <- subset(cg19, select=c("ht.diff", "spp", "Individual", "Plot", "provenance.lat", "budburst", "leafout", "risk"))
cg19 <- cg19[!duplicated(cg19),]
cg19$Individual <- paste(cg19$Individual, cg19$Plot, sep-"_")
cg19$Individual <- paste(cg19$Individual, cg19$Plot, sep="_")
cg19.gddlo <- left_join(cg19, gdd)
View(cg19.gddlo)
cg19.gddl0 <- cg19.gddl0[!is.na(cg19.gddl0$gdd_lo),]
cg19.gddl0 <- cg19.gddl0[!is.na(cg19.gddlo$gdd_lo),]
cg19.gddlo <- cg19.gddlo[!is.na(cg19.gddlo$gdd_lo),]
ht.mod.ggdlo <- brm(ht.diff ~ gdd_lo + provenance.lat + (budburst + provenance.lat|spp), data=cg,
control=list(max_treedepth = 15,adapt_delta = 0.99),
iter=4000, warmup=2500)
ht.mod.ggdlo <- brm(ht.diff ~ gdd_lo + provenance.lat + (budburst + provenance.lat|spp), data=cg19.gddlo,
control=list(max_treedepth = 15,adapt_delta = 0.99),
iter=4000, warmup=2500)
ht.mod.ggdlo
