####################################################################################################
####################################################################################################
#### Cool, so now we know what the real data looks like, let's try and go back to our simulations
### I think we will need to have both an urban effect and a method effect for this to work
source("source/sims_hypoth_interxn_sourcedata.R")
simsdat <- gddfunc("urban", "ws", -30, 20, 15, 425, 20, 5, 5, 25, 0, 30, -25, 0, 0)
###########################################################################################################
####################################################################################################
####################################################################################################
#### Cool, so now we know what the real data looks like, let's try and go back to our simulations
### I think we will need to have both an urban effect and a method effect for this to work
source("source/sims_hypoth_interxn_sourcedata.R")
simsdat <- gddfunc("urban", "ws", -30, 20, 15, 425, 20, 5, 5, 25, 0, 30, -25, 0, 0)
bball <- simsdat[[1]]
xtext <- seq(1, 2, by=1)
cols <-viridis_pal(option="viridis")(3)
ws <- ggplot(bball[(bball$method=="ws"),], aes(x=gdd)) + geom_histogram(aes(fill=site), alpha=0.3, position="dodge") +
theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=c("Arboretum", "Harvard Forest")) + ggtitle("Weather Station") +
coord_cartesian(xlim=c(100, 700)) +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="ws" & bball$site=="arb")]), col=cols[[1]], linetype="dashed") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="ws" & bball$site=="hf")]), col=cols[[2]], linetype="dashed") +
xlab("Growing Degree Days (GDD)") + ylab("") +
scale_y_continuous(expand = c(0, 0)) +
#scale_x_continuous(breaks = seq(-20, 40, by=5)) +
theme(legend.position="none")
hobo <- ggplot(bball[(bball$method=="hobo"),], aes(x=gdd)) + geom_histogram(aes(fill=site), alpha=0.3, position="dodge") +
theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=c("Arboretum", "Harvard Forest")) + ggtitle("Hobo Logger") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="hobo" & bball$site=="arb")]), col=cols[[1]], linetype="dashed") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="hobo" & bball$site=="hf")]), col=cols[[2]], linetype="dashed") +
coord_cartesian(xlim=c(100, 700)) +
xlab("Growing Degree Days (GDD)") + ylab("") +
scale_y_continuous(expand = c(0, 0))
pdf("figures/gdd_meathods_urbanws.pdf", width=8, height=4, onefile=FALSE)
egg::ggarrange(ws, hobo, ncol=2)
dev.off()
10*30*2
10*10*2*@
10*10*2*2
###########################################################################################################
####################################################################################################
####################################################################################################
#### Cool, so now we know what the real data looks like, let's try and go back to our simulations
### I think we will need to have both an urban effect and a method effect for this to work
source("source/sims_hypoth_interxn_sourcedata.R")
simsdat <- gddfunc("urban", "ws", -30, 20, 15, 425, 20, 5, 5, 20, 0, 25, 5, -20, 0)
bball <- simsdat[[1]]
xtext <- seq(1, 2, by=1)
cols <-viridis_pal(option="viridis")(3)
bball <- fstarrawfunc(bball)
ws <- ggplot(bball[(bball$method=="ws"),], aes(x=gdd)) + geom_histogram(aes(fill=site), alpha=0.3, position="dodge") +
theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=c("Arboretum", "Harvard Forest")) + ggtitle("Weather Station") +
coord_cartesian(xlim=c(100, 700)) +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="ws" & bball$site=="arb")]), col=cols[[1]], linetype="dashed") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="ws" & bball$site=="hf")]), col=cols[[2]], linetype="dashed") +
xlab("Growing Degree Days (GDD)") + ylab("") +
scale_y_continuous(expand = c(0, 0)) +
#scale_x_continuous(breaks = seq(-20, 40, by=5)) +
theme(legend.position="none")
hobo <- ggplot(bball[(bball$method=="hobo"),], aes(x=gdd)) + geom_histogram(aes(fill=site), alpha=0.3, position="dodge") +
theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=c("Arboretum", "Harvard Forest")) + ggtitle("Hobo Logger") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="hobo" & bball$site=="arb")]), col=cols[[1]], linetype="dashed") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="hobo" & bball$site=="hf")]), col=cols[[2]], linetype="dashed") +
coord_cartesian(xlim=c(100, 700)) +
xlab("Growing Degree Days (GDD)") + ylab("") +
scale_y_continuous(expand = c(0, 0))
pdf("figures/gdd_meathods_urbanws.pdf", width=8, height=4, onefile=FALSE)
egg::ggarrange(ws, hobo, ncol=2)
dev.off()
ws <- ggplot(bball[(bball$method=="ws"),], aes(x=gdd)) + geom_histogram(aes(fill=site), alpha=0.3, position="stack") +
theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=c("Arboretum", "Harvard Forest")) + ggtitle("Weather Station") +
coord_cartesian(xlim=c(100, 700)) +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="ws" & bball$site=="arb")]), col=cols[[1]], linetype="dashed") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="ws" & bball$site=="hf")]), col=cols[[2]], linetype="dashed") +
xlab("Growing Degree Days (GDD)") + ylab("") +
scale_y_continuous(expand = c(0, 0)) +
#scale_x_continuous(breaks = seq(-20, 40, by=5)) +
theme(legend.position="none")
hobo <- ggplot(bball[(bball$method=="hobo"),], aes(x=gdd)) + geom_histogram(aes(fill=site), alpha=0.3, position="stack") +
theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=c("Arboretum", "Harvard Forest")) + ggtitle("Hobo Logger") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="hobo" & bball$site=="arb")]), col=cols[[1]], linetype="dashed") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="hobo" & bball$site=="hf")]), col=cols[[2]], linetype="dashed") +
coord_cartesian(xlim=c(100, 700)) +
xlab("Growing Degree Days (GDD)") + ylab("") +
scale_y_continuous(expand = c(0, 0))
pdf("figures/gdd_meathods_urbanws.pdf", width=8, height=4, onefile=FALSE)
egg::ggarrange(ws, hobo, ncol=2)
dev.off()
simsdat <- gddfunc("urban", "ws", -30, 20, 15, 425, 20, 5, 5, 20, 0, 20, 5, -5, 0)
bball <- simsdat[[1]]
xtext <- seq(1, 2, by=1)
cols <-viridis_pal(option="viridis")(3)
bball <- fstarrawfunc(bball)
ws <- ggplot(bball[(bball$method=="ws"),], aes(x=gdd)) + geom_histogram(aes(fill=site), alpha=0.3, position="stack") +
theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=c("Arboretum", "Harvard Forest")) + ggtitle("Weather Station") +
coord_cartesian(xlim=c(100, 700)) +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="ws" & bball$site=="arb")]), col=cols[[1]], linetype="dashed") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="ws" & bball$site=="hf")]), col=cols[[2]], linetype="dashed") +
xlab("Growing Degree Days (GDD)") + ylab("") +
scale_y_continuous(expand = c(0, 0)) +
#scale_x_continuous(breaks = seq(-20, 40, by=5)) +
theme(legend.position="none")
hobo <- ggplot(bball[(bball$method=="hobo"),], aes(x=gdd)) + geom_histogram(aes(fill=site), alpha=0.3, position="stack") +
theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=c("Arboretum", "Harvard Forest")) + ggtitle("Hobo Logger") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="hobo" & bball$site=="arb")]), col=cols[[1]], linetype="dashed") +
geom_vline(xintercept=mean(bball$gdd[(bball$method=="hobo" & bball$site=="hf")]), col=cols[[2]], linetype="dashed") +
coord_cartesian(xlim=c(100, 700)) +
xlab("Growing Degree Days (GDD)") + ylab("") +
scale_y_continuous(expand = c(0, 0))
pdf("figures/gdd_meathods_urbanws.pdf", width=8, height=4, onefile=FALSE)
egg::ggarrange(ws, hobo, ncol=2)
dev.off()
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
#Load Libraries
library(viridis)
library(ggplot2)
library(gridExtra)
setwd("~/Documents/git/microclimates/analyses/")
source("source/sims_warm_sourcedata.R")
gdd.warm <- warmfunc(250, 350, 10, 5, 10)[[1]]
pdf("figures/forecasting_base10.pdf", width=6, height=5)
fstar.min <- 50  ## GDD threshold
fstar.max <- 550
warmmax <- 10
meantemp <- 10
basetemp <- 5
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
daysperyr <- 150 #### just to make sure we don't get any NAs
nspps <- 15
ninds <- 10
nobs <- nspps*ninds
### Now the climate data
dayz <- rep(1:daysperyr, nobs)
cc <- meantemp
sigma.cc <- 2
warmcc <- warmmax
#### Next I set up an fstar or a GDD threshold for each individual
sp_ind <- paste(rep(1:nspps, each=10), rep(1:ninds, 20), sep="_")
df.fstar <- as.data.frame(cbind(species=1:nspps,
fstarspp=10*round(seq(fstar.min, fstar.max,
by=(fstar.max-fstar.min)/(nspps-1))/10, digits=0)))
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#### Here, I set up provenance for each individual
### # Step 2: find GDDs
#### Now I set up climate data for the Arboretum, this is the weather station data
clim <- data.frame(ind=rep(rep(c(1:ninds), each=daysperyr), nspps),
species = rep(c(1:nspps), each=daysperyr*ninds),
day=rep(c(1:daysperyr), nspps*ninds))
clim$tmean0 <- rnorm(clim$day, cc + 0, sigma.cc)
clim$tmean1 <- clim$teman0 + 1
clim$tmean2 <- clim$teman0 + 2
clim$tmean3 <- clim$teman0 + 3
clim$tmean0 <- rnorm(clim$day, cc + 0, sigma.cc)
View(clim)
clim$teman0 + 1
source("source/sims_warm_sourcedata.R")
gdd.warm <- warmfunc(250, 350, 10, 5, 10)[[1]]
pdf("figures/forecasting_base10.pdf", width=6, height=5)
ggplot(gdd.warm, aes(as.numeric(warming), gdd_accuracy, col=fstarspp, group=fstarspp)) +
geom_line(stat='smooth', method = "lm", alpha=1, aes(col=fstarspp)) +
#geom_point(aes(as.numeric(warming), gdd_accuracy, col=fstarspp, group=fstarspp)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
plot.margin = margin(0.5, 0.5, 0.5, 1, "cm")) +
xlab("Amount of warming (°C)") + ylab("GDD accuracy") +
scale_x_continuous(breaks = sort(c(seq(0, 10, by=1)))) +
scale_color_viridis_c("Species GDD Threshold")
dev.off()
gdd.warm <- warmfunc(250, 350, 10, 5, 5)[[1]]
pdf("figures/forecasting_base5.pdf", width=6, height=5)
ggplot(gdd.warm, aes(as.numeric(warming), gdd_accuracy, col=fstarspp, group=fstarspp)) +
geom_line(stat='smooth', method = "lm", alpha=1, aes(col=fstarspp)) +
#geom_point(aes(as.numeric(warming), gdd_accuracy, col=fstarspp, group=fstarspp)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
plot.margin = margin(0.5, 0.5, 0.5, 1, "cm")) +
xlab("Amount of warming (°C)") + ylab("GDD accuracy") +
scale_x_continuous(breaks = sort(c(seq(0, 10, by=1)))) +
scale_color_viridis_c("Species GDD Threshold")
dev.off()
gdd.warm <- warmfunc(250, 350, 10, 5, 0)[[1]]
pdf("figures/forecasting_base0.pdf", width=6, height=5)
ggplot(gdd.warm, aes(as.numeric(warming), gdd_accuracy, col=fstarspp, group=fstarspp)) +
geom_line(stat='smooth', method = "lm", alpha=1, aes(col=fstarspp)) +
#geom_point(aes(as.numeric(warming), gdd_accuracy, col=fstarspp, group=fstarspp)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
plot.margin = margin(0.5, 0.5, 0.5, 1, "cm")) +
xlab("Amount of warming (°C)") + ylab("GDD accuracy") +
scale_x_continuous(breaks = sort(c(seq(0, 10, by=1)))) +
scale_color_viridis_c("Species GDD Threshold")
dev.off()
gdd.warm <- warmfunc(250, 350, 10, 5, -5)[[1]]
pdf("figures/forecasting_base-5.pdf", width=6, height=5)
ggplot(gdd.warm, aes(as.numeric(warming), gdd_accuracy, col=fstarspp, group=fstarspp)) +
geom_line(stat='smooth', method = "lm", alpha=1, aes(col=fstarspp)) +
#geom_point(aes(as.numeric(warming), gdd_accuracy, col=fstarspp, group=fstarspp)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
plot.margin = margin(0.5, 0.5, 0.5, 1, "cm")) +
xlab("Amount of warming (°C)") + ylab("GDD accuracy") +
scale_x_continuous(breaks = sort(c(seq(0, 10, by=1)))) +
scale_color_viridis_c("Species GDD Threshold")
dev.off()
View(clim)
clim$tmean1 <- clim$tmean0 + 1
clim$tmean2 <- clim$tmean0 + 2
clim$tmean3 <- clim$tmean0 + 3
clim$tmean4 <- clim$tmean0 + 4
clim$tmean5 <- clim$tmean0 + 5
clim$tmean6 <- clim$tmean0 + 6
clim$tmean7 <- clim$tmean0 + 7
clim$tmean8 <- clim$tmean0 + 8
clim$tmean9 <- clim$tmean0 + 9
clim$tmean10 <- clim$tmean0 + 10
##Step 3: Make a data frame and get the mean temp
df <- clim
df$tmean0 <- as.numeric(df$tmean0)
df$tmean1 <- as.numeric(df$tmean1)
df$tmean2 <- as.numeric(df$tmean2)
df$tmean3 <- as.numeric(df$tmean3)
df$tmean4 <- as.numeric(df$tmean4)
df$tmean5 <- as.numeric(df$tmean5)
df$tmean6 <- as.numeric(df$tmean6)
df$tmean7 <- as.numeric(df$tmean7)
df$tmean8 <- as.numeric(df$tmean8)
df$tmean9 <- as.numeric(df$tmean9)
df$tmean10 <- as.numeric(df$tmean10)
df$tmean0 <- ifelse(df$tmean0>=basetemp, df$tmean0, 0)
df$tmean1 <- ifelse(df$tmean1>=basetemp, df$tmean1, 0)
df$tmean2 <- ifelse(df$tmean2>=basetemp, df$tmean2, 0)
df$tmean3 <- ifelse(df$tmean3>=basetemp, df$tmean3, 0)
df$tmean4 <- ifelse(df$tmean4>=basetemp, df$tmean4, 0)
df$tmean5 <- ifelse(df$tmean5>=basetemp, df$tmean5, 0)
df$tmean6 <- ifelse(df$tmean6>=basetemp, df$tmean6, 0)
df$tmean7 <- ifelse(df$tmean7>=basetemp, df$tmean7, 0)
df$tmean8 <- ifelse(df$tmean8>=basetemp, df$tmean8, 0)
df$tmean9 <- ifelse(df$tmean9>=basetemp, df$tmean9, 0)
df$tmean10 <- ifelse(df$tmean10>=basetemp, df$tmean10, 0)
View(df)
df$sp_ind <- paste(df$species, df$ind, sep="_")
##Step 3: Make a data frame and get the mean temp
df <- clim
df$tmean0 <- as.numeric(df$tmean0)
df$tmean1 <- as.numeric(df$tmean1)
df$tmean2 <- as.numeric(df$tmean2)
df$tmean3 <- as.numeric(df$tmean3)
df$tmean4 <- as.numeric(df$tmean4)
df$tmean5 <- as.numeric(df$tmean5)
df$tmean6 <- as.numeric(df$tmean6)
df$tmean7 <- as.numeric(df$tmean7)
df$tmean8 <- as.numeric(df$tmean8)
df$tmean9 <- as.numeric(df$tmean9)
df$tmean10 <- as.numeric(df$tmean10)
df$tmean0 <- ifelse(df$tmean0>=basetemp, df$tmean0, 0)
df$tmean1 <- ifelse(df$tmean1>=basetemp, df$tmean1, 0)
df$tmean2 <- ifelse(df$tmean2>=basetemp, df$tmean2, 0)
df$tmean3 <- ifelse(df$tmean3>=basetemp, df$tmean3, 0)
df$tmean4 <- ifelse(df$tmean4>=basetemp, df$tmean4, 0)
df$tmean5 <- ifelse(df$tmean5>=basetemp, df$tmean5, 0)
df$tmean6 <- ifelse(df$tmean6>=basetemp, df$tmean6, 0)
df$tmean7 <- ifelse(df$tmean7>=basetemp, df$tmean7, 0)
df$tmean8 <- ifelse(df$tmean8>=basetemp, df$tmean8, 0)
df$tmean9 <- ifelse(df$tmean9>=basetemp, df$tmean9, 0)
df$tmean10 <- ifelse(df$tmean10>=basetemp, df$tmean10, 0)
df$sp_ind <- paste(df$species, df$ind, sep="_")
### Calculate the OBSERVED GDDs!!!
df$gdd.obs0 <- ave(df$tmean0, FUN=cumsum)
df$gdd.obs1 <- ave(df$tmean1, FUN=cumsum)
df$gdd.obs2 <- ave(df$tmean2, FUN=cumsum)
df$gdd.obs3 <- ave(df$tmean3, FUN=cumsum)
df$gdd.obs4 <- ave(df$tmean4, FUN=cumsum)
df$gdd.obs5 <- ave(df$tmean5, FUN=cumsum)
df$gdd.obs6 <- ave(df$tmean6, FUN=cumsum)
df$gdd.obs7 <- ave(df$tmean7, FUN=cumsum)
df$gdd.obs8 <- ave(df$tmean8, FUN=cumsum)
df$gdd.obs9 <- ave(df$tmean9, FUN=cumsum)
df$gdd.obs10 <- ave(df$tmean10, FUN=cumsum)
### Let's just tidy everything up
df$species <- as.numeric(as.factor(df$species))
df.fstar$species <- as.numeric(as.factor(df.fstar$species))
df <- full_join(df, df.fstar)
df <- df[!duplicated(df),]
#Load Libraries
library(dplyr)
library(tidyr)
if(FALSE){
fstar.min <- 50  ## GDD threshold
fstar.max <- 550
warmmax <- 10
meantemp <- 10
basetemp <- 5
}
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
daysperyr <- 150 #### just to make sure we don't get any NAs
nspps <- 15
ninds <- 10
nobs <- nspps*ninds
### Now the climate data
dayz <- rep(1:daysperyr, nobs)
cc <- meantemp
sigma.cc <- 2
warmcc <- warmmax
#### Next I set up an fstar or a GDD threshold for each individual
sp_ind <- paste(rep(1:nspps, each=10), rep(1:ninds, 20), sep="_")
df.fstar <- as.data.frame(cbind(species=1:nspps,
fstarspp=10*round(seq(fstar.min, fstar.max,
by=(fstar.max-fstar.min)/(nspps-1))/10, digits=0)))
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#### Here, I set up provenance for each individual
### # Step 2: find GDDs
#### Now I set up climate data for the Arboretum, this is the weather station data
clim <- data.frame(day=rep(c(1:daysperyr)))
clim$tmean0 <- rnorm(clim$day, cc + 0, sigma.cc)
clim$tmean1 <- clim$tmean0 + 1
clim$tmean2 <- clim$tmean0 + 2
clim$tmean3 <- clim$tmean0 + 3
clim$tmean4 <- clim$tmean0 + 4
clim$tmean5 <- clim$tmean0 + 5
clim$tmean6 <- clim$tmean0 + 6
clim$tmean7 <- clim$tmean0 + 7
clim$tmean8 <- clim$tmean0 + 8
clim$tmean9 <- clim$tmean0 + 9
clim$tmean10 <- clim$tmean0 + 10
##Step 3: Make a data frame and get the mean temp
df <- clim
df$tmean0 <- as.numeric(df$tmean0)
df$tmean1 <- as.numeric(df$tmean1)
df$tmean2 <- as.numeric(df$tmean2)
df$tmean3 <- as.numeric(df$tmean3)
df$tmean4 <- as.numeric(df$tmean4)
df$tmean5 <- as.numeric(df$tmean5)
df$tmean6 <- as.numeric(df$tmean6)
df$tmean7 <- as.numeric(df$tmean7)
df$tmean8 <- as.numeric(df$tmean8)
df$tmean9 <- as.numeric(df$tmean9)
df$tmean10 <- as.numeric(df$tmean10)
df$tmean0 <- ifelse(df$tmean0>=basetemp, df$tmean0, 0)
df$tmean1 <- ifelse(df$tmean1>=basetemp, df$tmean1, 0)
df$tmean2 <- ifelse(df$tmean2>=basetemp, df$tmean2, 0)
df$tmean3 <- ifelse(df$tmean3>=basetemp, df$tmean3, 0)
df$tmean4 <- ifelse(df$tmean4>=basetemp, df$tmean4, 0)
df$tmean5 <- ifelse(df$tmean5>=basetemp, df$tmean5, 0)
df$tmean6 <- ifelse(df$tmean6>=basetemp, df$tmean6, 0)
df$tmean7 <- ifelse(df$tmean7>=basetemp, df$tmean7, 0)
df$tmean8 <- ifelse(df$tmean8>=basetemp, df$tmean8, 0)
df$tmean9 <- ifelse(df$tmean9>=basetemp, df$tmean9, 0)
df$tmean10 <- ifelse(df$tmean10>=basetemp, df$tmean10, 0)
df$sp_ind <- paste(df$species, df$ind, sep="_")
### Calculate the OBSERVED GDDs!!!
df$gdd.obs0 <- ave(df$tmean0, FUN=cumsum)
df$gdd.obs1 <- ave(df$tmean1, FUN=cumsum)
df$gdd.obs2 <- ave(df$tmean2, FUN=cumsum)
### Calculate the OBSERVED GDDs!!!
df$gdd.obs0 <- ave(df$tmean0, FUN=cumsum)
df$gdd.obs1 <- ave(df$tmean1, FUN=cumsum)
df$gdd.obs2 <- ave(df$tmean2, FUN=cumsum)
df$gdd.obs3 <- ave(df$tmean3, FUN=cumsum)
df$gdd.obs4 <- ave(df$tmean4, FUN=cumsum)
df$gdd.obs5 <- ave(df$tmean5, FUN=cumsum)
df$gdd.obs6 <- ave(df$tmean6, FUN=cumsum)
df$gdd.obs7 <- ave(df$tmean7, FUN=cumsum)
df$gdd.obs8 <- ave(df$tmean8, FUN=cumsum)
df$gdd.obs9 <- ave(df$tmean9, FUN=cumsum)
df$gdd.obs10 <- ave(df$tmean10, FUN=cumsum)
### Let's just tidy everything up
df$species <- as.numeric(as.factor(df$species))
df.fstar$species <- as.numeric(as.factor(df.fstar$species))
df <- full_join(df, df.fstar)
df <- df[!duplicated(df),]
## Find the day of budburst to find the actual GDD versus the "observed GDD"
for(i in 1:c(nrow(df))){
for(j in 1:c(nrow(df.fstar))){# i="1_1" i=1
bb0 <- which(df$gdd.obs0[i] >= df.fstar$fstarspp[j])[1]
df$bb0[i] <- bb0
bb1 <- which(df$gdd.obs1[i] >= df.fstar$fstarspp[j])[1]
df$bb1[i] <- bb1
bb2 <- which(df$gdd.obs2[i] >= df.fstar$fstarspp[j])[1]
df$bb2[i] <- bb2
bb3 <- which(df$gdd.obs3[i] >= df.fstar$fstarspp[j])[1]
df$bb3[i] <- bb3
bb4 <- which(df$gdd.obs4[i] >= df.fstar$fstarspp[j])[1]
df$bb4[i] <- bb4
bb5 <- which(df$gdd.obs5[i] >= df.fstar$fstarspp[j])[1]
df$bb5[i] <- bb5
bb6 <- which(df$gdd.obs6[i] >= df.fstar$fstarspp[j])[1]
df$bb6[i==df$sp_ind] <- bb6
bb7 <- which(df$gdd.obs7[i] >= df.fstar$fstarspp[j])[1]
df$bb7[i] <- bb7
bb8 <- which(df$gdd.obs8[i] >= df.fstar$fstarspp[j])[1]
df$bb8[i] <- bb8
bb9 <- which(df$gdd.obs9[i] >= df.fstar$fstarspp[j])[1]
df$bb9[i] <- bb9
bb10 <- which(df$gdd.obs10[i] >= df.fstar$fstarspp[j])[1]
df$bb10[i] <- bb10
}
}
i=1
j=1
bb0 <- which(df$gdd.obs0[i] >= df.fstar$fstarspp[j])[1]
bb0
df.fstar$fstarspp
df.fstar$fstarspp[j]
df$gdd.obs0[i]
df$bb0[i] <- ifelse(df$gdd.obs0[i] >= df.fstar$fstarspp[j], df$gdd.obs0, NA)
View(df)
View(df.fstar)
df.fstar$fstarspp[j]
df$gdd.obs0[i]
## Find the day of budburst to find the actual GDD versus the "observed GDD"
for(i in 1:nrow(df)){
for(j in 1:nrow(df.fstar)){# i="1_1" i=1 j=1
df$bb0[i] <- ifelse(df$gdd.obs0[i] >= df.fstar$fstarspp[j], df$gdd.obs0, NA)
df$bb1[i] <- ifelse(df$gdd.obs1[i] >= df.fstar$fstarspp[j], df$gdd.obs1, NA)
df$bb2[i] <- ifelse(df$gdd.obs2[i] >= df.fstar$fstarspp[j], df$gdd.obs2, NA)
df$bb3[i] <- ifelse(df$gdd.obs3[i] >= df.fstar$fstarspp[j], df$gdd.obs3, NA)
df$bb4[i] <- ifelse(df$gdd.obs4[i] >= df.fstar$fstarspp[j], df$gdd.obs4, NA)
df$bb5[i] <- ifelse(df$gdd.obs5[i] >= df.fstar$fstarspp[j], df$gdd.obs5, NA)
df$bb6[i] <- ifelse(df$gdd.obs6[i] >= df.fstar$fstarspp[j], df$gdd.obs6, NA)
df$bb7[i] <- ifelse(df$gdd.obs7[i] >= df.fstar$fstarspp[j], df$gdd.obs7, NA)
df$bb8[i] <- ifelse(df$gdd.obs8[i] >= df.fstar$fstarspp[j], df$gdd.obs8, NA)
df$bb9[i] <- ifelse(df$gdd.obs9[i] >= df.fstar$fstarspp[j], df$gdd.obs9, NA)
df$bb10[i] <- ifelse(df$gdd.obs10[i] >= df.fstar$fstarspp[j], df$gdd.obs10, NA)
}
}
View(df)
daysperyr <- 150 #### just to make sure we don't get any NAs
nspps <- 15
ninds <- 10
nobs <- nspps*ninds
### Now the climate data
dayz <- rep(1:daysperyr, nobs)
cc <- meantemp
sigma.cc <- 2
warmcc <- warmmax
#### Next I set up an fstar or a GDD threshold for each individual
sp_ind <- paste(rep(1:nspps, each=10), rep(1:ninds, 20), sep="_")
df.fstar <- as.data.frame(cbind(species=1:nspps,
fstarspp=10*round(seq(fstar.min, fstar.max,
by=(fstar.max-fstar.min)/(nspps-1))/10, digits=0)))
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#### Here, I set up provenance for each individual
### # Step 2: find GDDs
#### Now I set up climate data for the Arboretum, this is the weather station data
clim <- data.frame(day=rep(c(1:daysperyr)))
clim$tmean0 <- rnorm(clim$day, cc + 0, sigma.cc)
clim$tmean1 <- clim$tmean0 + 1
clim$tmean2 <- clim$tmean0 + 2
clim$tmean3 <- clim$tmean0 + 3
clim$tmean4 <- clim$tmean0 + 4
clim$tmean5 <- clim$tmean0 + 5
clim$tmean6 <- clim$tmean0 + 6
clim$tmean7 <- clim$tmean0 + 7
clim$tmean8 <- clim$tmean0 + 8
clim$tmean9 <- clim$tmean0 + 9
clim$tmean10 <- clim$tmean0 + 10
##Step 3: Make a data frame and get the mean temp
df <- clim
df$tmean0 <- as.numeric(df$tmean0)
df$tmean1 <- as.numeric(df$tmean1)
df$tmean2 <- as.numeric(df$tmean2)
df$tmean3 <- as.numeric(df$tmean3)
df$tmean4 <- as.numeric(df$tmean4)
df$tmean5 <- as.numeric(df$tmean5)
df$tmean6 <- as.numeric(df$tmean6)
df$tmean7 <- as.numeric(df$tmean7)
df$tmean8 <- as.numeric(df$tmean8)
df$tmean9 <- as.numeric(df$tmean9)
df$tmean10 <- as.numeric(df$tmean10)
df$tmean0 <- ifelse(df$tmean0>=basetemp, df$tmean0, 0)
df$tmean1 <- ifelse(df$tmean1>=basetemp, df$tmean1, 0)
df$tmean2 <- ifelse(df$tmean2>=basetemp, df$tmean2, 0)
df$tmean3 <- ifelse(df$tmean3>=basetemp, df$tmean3, 0)
df$tmean4 <- ifelse(df$tmean4>=basetemp, df$tmean4, 0)
df$tmean5 <- ifelse(df$tmean5>=basetemp, df$tmean5, 0)
df$tmean6 <- ifelse(df$tmean6>=basetemp, df$tmean6, 0)
df$tmean7 <- ifelse(df$tmean7>=basetemp, df$tmean7, 0)
df$tmean8 <- ifelse(df$tmean8>=basetemp, df$tmean8, 0)
df$tmean9 <- ifelse(df$tmean9>=basetemp, df$tmean9, 0)
df$tmean10 <- ifelse(df$tmean10>=basetemp, df$tmean10, 0)
df$sp_ind <- paste(df$species, df$ind, sep="_")
### Calculate the OBSERVED GDDs!!!
df$gdd.obs0 <- ave(df$tmean0, FUN=cumsum)
df$gdd.obs1 <- ave(df$tmean1, FUN=cumsum)
df$gdd.obs2 <- ave(df$tmean2, FUN=cumsum)
df$gdd.obs3 <- ave(df$tmean3, FUN=cumsum)
df$gdd.obs4 <- ave(df$tmean4, FUN=cumsum)
df$gdd.obs5 <- ave(df$tmean5, FUN=cumsum)
df$gdd.obs6 <- ave(df$tmean6, FUN=cumsum)
df$gdd.obs7 <- ave(df$tmean7, FUN=cumsum)
df$gdd.obs8 <- ave(df$tmean8, FUN=cumsum)
df$gdd.obs9 <- ave(df$tmean9, FUN=cumsum)
df$gdd.obs10 <- ave(df$tmean10, FUN=cumsum)
### Let's just tidy everything up
df$species <- as.numeric(as.factor(df$species))
df.fstar$species <- as.numeric(as.factor(df.fstar$species))
df <- full_join(df, df.fstar)
df <- df[!duplicated(df),]
View(df)
