doybbfstarsd <- 10 ### sigma_a_sp
dayz <- rep(1:daysperyr, nobs)
cc.arb <- 8
microarb.effect <- 0
sigma.arb <- 2
microsigmaarb.effect <- 0   #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
cc.hf <- 8
microhf.effect <- 0
sigma.hf <- 2
microsigmahf.effect <- 0  #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
#source("simulations/micro_databuildfx.R")
source("simulations/micro_processfx.R")
View(bball)
View(df.bb)
View(df.prov)
spind <- paste(rep(c(1:nspps), each=10), rep(1:ninds, 20), sep="_")
provenance.hf <- 42.5
provenance.arb <- rep(round(rnorm(nobs, provenance.hf, 5), digits=2), nmethods)
df.prov <- as.data.frame(cbind(sp_ind = rep(spind, nsites*nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = c(provenance.arb, rep(provenance.hf, 400)),
method = c("ws", "hobo", each=nobs*nsites)))
View(df.prov)
nsites
nobs
View(df.prov)
sp_ind = rep(spind, nsites*nmethods)
sp_ind
sp_ind = rep(rep(spind, nsites),each=nmethods)
sp_ind
site = rep(c("arb", "hf"), each=nobs*nmethods)
site
provenance = c(provenance.arb, rep(provenance.hf, 400))
provenance
method = c("ws", "hobo", each=nobs*nsites)
method
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = c(provenance.arb, rep(provenance.hf, 400)),
method = rep(c("ws", "hobo"), each=nobs*nsites)))
View(df.prov)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = c(rep(provenance.arb, each=nmethods), rep(provenance.hf, 400)),
method = rep(rep(c("ws", "hobo"), each=nobs), nsites)))
provenance = c(rep(provenance.arb, each=nmethods), rep(provenance.hf, 400))
provenance
spind <- paste(rep(c(1:nspps), each=10), rep(1:ninds, 20), sep="_")
provenance.hf <- 42.5
provenance.arb <- round(rnorm(nobs, provenance.hf, 5), digits=2)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = c(rep(provenance.arb, each=nmethods), rep(provenance.hf, 400)),
method = rep(rep(c("ws", "hobo"), each=nobs), nsites)))
View(df.prov)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = c(rep(provenance.arb, each=nmethods), rep(provenance.hf, 400)),
method = rep(c("ws", "hobo"), each=nobs*nsites))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.doybb <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), inds=rep(1:ninds, nmethods),
doybb=NA,
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
df.doybb$doybb <- round(rnorm(nrow(df.doybb), doybbfstar, doybbfstarsd), digits=0)
df.doybb$sp_ind <- paste(df.doybb$species, df.doybb$inds, sep="_")
df.doybb$dayz <- df.doybb$doybb
}
if(use.provenance==TRUE){
provenance.arb <- round(rnorm(nobs, 42.5, 10), digits=2)
provenance.hf <- 42.5
doybb <- round(rnorm(nspps, doybb, doybbspeciessd), digits=0)
df.doybb <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites), inds=1:ninds, doybb=rep(doybb, each=ninds*nsites),
site=rep(c("arb", "hf"), each=ninds)))
df.doybb$doybb <- as.numeric(df.doybb$doybb)
df.doybb$sp_ind <- paste(df.doybb$species, df.doybb$inds, sep="_")
df.doybb$provenance <- ifelse(df.doybb$site=="hf", provenance.hf, provenance.arb)
df.doybb$prov.adj <- ifelse(df.doybb$provenance!=provenance.hf, df.doybb$provenance-provenance.hf, 0)
df.doybb$doybb.new <- round(ifelse(df.doybb$site=="hf", rnorm(df.doybb$inds, df.doybb$doybb, doybbindsd),
rnorm(df.doybb$inds, df.doybb$doybb+(df.doybb$prov.adj*proveffect), doybbindsd)), digits=0)
df.doybb$dayz <- round(df.doybb$doybb.new, digits=0)
}
# Step 2: find GDDs
arb.doybb <- df.doybb[(df.doybb$site=="arb"),]
hf.doybb <- df.doybb[(df.doybb$site=="hf"),]
arbclim <- data.frame(microsite=rep(rep(c(1:nmicros), each=daysperyr*nmethods),nspps), ind=rep(rep(c(1:ninds), each=daysperyr*nmethods), nspps),
species = rep(c(1:nspps), each=daysperyr*nmicros*nmethods),
dayz=rep(arb.doybb$dayz, each=daysperyr),
day=rep(c(1:daysperyr), nmicros*nspps*nmethods),
method=rep(rep(c("ws", "hobo"), each=daysperyr),nspps*ninds),
site = as.character("arb"))
arbclim$tmean <- ifelse(arbclim$method=="hobo", rnorm(arbclim$day, cc.arb + microarb.effect, sigma.arb + microsigmaarb.effect), rnorm(arbclim$day, cc.arb, sigma.arb)) ### and now we draw from mean and sigma for each day to find daily temp for each microsite
arbclim <- arbclim[(arbclim$day<=arbclim$dayz),]
hfclim <- data.frame(microsite=rep(rep(c(1:nmicros), each=daysperyr*nmethods),nspps), ind=rep(rep(c(1:ninds), each=daysperyr*nmethods), nspps),
species = rep(c(1:nspps), each=daysperyr*nmicros*nmethods),
dayz=rep(hf.doybb$dayz, each=daysperyr),
day=rep(c(1:daysperyr), nmicros*nspps*nmethods),
method=rep(rep(c("ws", "hobo"), each=daysperyr),nspps*ninds),
site = as.character("hf"))
hfclim$tmean <- ifelse(hfclim$method=="hobo", rnorm(hfclim$day, cc.hf + microhf.effect, sigma.hf + microsigmahf.effect), rnorm(hfclim$day, cc.hf, sigma.hf)) ### and now we draw from mean and sigma for each day to find daily temp for each microsite
hfclim <- hfclim[(hfclim$day<=hfclim$dayz),]
# Step 3: Make a data frame and get the mean temp per year (to double check the data)
df <- dplyr::full_join(arbclim, hfclim)
df$tmean <- as.numeric(df$tmean)
df$sp_ind <- paste(df$species, df$ind, sep="_")
df$gdd <- ave(df$tmean, df$sp_ind, df$site, df$method, FUN=cumsum)
df.bb <- df[(df$day==df$dayz),]
df.bb$species <- as.numeric(df.bb$species)
bball <- full_join(df.bb, df.prov)
#### Now we simplify the dataset..
bball <- subset(bball, select=c("site", "method", "ind", "species", "provenance", "dayz", "gdd"))
colnames(bball) <- c("site", "method", "species", "ind", "provenance", "bb", "gdd")
bball <- bball[!duplicated(bball),]
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = c(rep(provenance.arb, each=nmethods), rep(provenance.hf, 400)),
method = rep(c("ws", "hobo"), each=nobs*nsites)))
View(df.prov)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = c(rep(provenance.arb, each=nmethods), rep(provenance.hf, 400)),
method = rep(c("ws", "hobo"), nsites*nobs)))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.doybb <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), inds=rep(1:ninds, nmethods),
doybb=NA,
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
df.doybb$doybb <- round(rnorm(nrow(df.doybb), doybbfstar, doybbfstarsd), digits=0)
df.doybb$sp_ind <- paste(df.doybb$species, df.doybb$inds, sep="_")
df.doybb$dayz <- df.doybb$doybb
if(use.urban==TRUE){
spind <- paste(rep(c(1:nspps), each=10), rep(1:ninds, 20), sep="_")
provenance.hf <- 42.5
provenance.arb <- round(rnorm(nobs, provenance.hf, 5), digits=2)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = c(rep(provenance.arb, each=nmethods), rep(provenance.hf, 400)),
method = rep(c("ws", "hobo"), nsites*nobs)))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.doybb <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), inds=rep(1:ninds, nmethods),
doybb=NA,
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
df.doybb$doybb <- round(rnorm(nrow(df.doybb), doybbfstar, doybbfstarsd), digits=0)
df.doybb$sp_ind <- paste(df.doybb$species, df.doybb$inds, sep="_")
df.doybb$dayz <- df.doybb$doybb
}
if(use.provenance==TRUE){
provenance.arb <- round(rnorm(nobs, 42.5, 10), digits=2)
provenance.hf <- 42.5
doybb <- round(rnorm(nspps, doybb, doybbspeciessd), digits=0)
df.doybb <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites), inds=1:ninds, doybb=rep(doybb, each=ninds*nsites),
site=rep(c("arb", "hf"), each=ninds)))
df.doybb$doybb <- as.numeric(df.doybb$doybb)
df.doybb$sp_ind <- paste(df.doybb$species, df.doybb$inds, sep="_")
df.doybb$provenance <- ifelse(df.doybb$site=="hf", provenance.hf, provenance.arb)
df.doybb$prov.adj <- ifelse(df.doybb$provenance!=provenance.hf, df.doybb$provenance-provenance.hf, 0)
df.doybb$doybb.new <- round(ifelse(df.doybb$site=="hf", rnorm(df.doybb$inds, df.doybb$doybb, doybbindsd),
rnorm(df.doybb$inds, df.doybb$doybb+(df.doybb$prov.adj*proveffect), doybbindsd)), digits=0)
df.doybb$dayz <- round(df.doybb$doybb.new, digits=0)
}
# Step 2: find GDDs
arb.doybb <- df.doybb[(df.doybb$site=="arb"),]
hf.doybb <- df.doybb[(df.doybb$site=="hf"),]
arbclim <- data.frame(microsite=rep(rep(c(1:nmicros), each=daysperyr*nmethods),nspps), ind=rep(rep(c(1:ninds), each=daysperyr*nmethods), nspps),
species = rep(c(1:nspps), each=daysperyr*nmicros*nmethods),
dayz=rep(arb.doybb$dayz, each=daysperyr),
day=rep(c(1:daysperyr), nmicros*nspps*nmethods),
method=rep(rep(c("ws", "hobo"), each=daysperyr),nspps*ninds),
site = as.character("arb"))
arbclim$tmean <- ifelse(arbclim$method=="hobo", rnorm(arbclim$day, cc.arb + microarb.effect, sigma.arb + microsigmaarb.effect), rnorm(arbclim$day, cc.arb, sigma.arb)) ### and now we draw from mean and sigma for each day to find daily temp for each microsite
arbclim <- arbclim[(arbclim$day<=arbclim$dayz),]
hfclim <- data.frame(microsite=rep(rep(c(1:nmicros), each=daysperyr*nmethods),nspps), ind=rep(rep(c(1:ninds), each=daysperyr*nmethods), nspps),
species = rep(c(1:nspps), each=daysperyr*nmicros*nmethods),
dayz=rep(hf.doybb$dayz, each=daysperyr),
day=rep(c(1:daysperyr), nmicros*nspps*nmethods),
method=rep(rep(c("ws", "hobo"), each=daysperyr),nspps*ninds),
site = as.character("hf"))
hfclim$tmean <- ifelse(hfclim$method=="hobo", rnorm(hfclim$day, cc.hf + microhf.effect, sigma.hf + microsigmahf.effect), rnorm(hfclim$day, cc.hf, sigma.hf)) ### and now we draw from mean and sigma for each day to find daily temp for each microsite
hfclim <- hfclim[(hfclim$day<=hfclim$dayz),]
# Step 3: Make a data frame and get the mean temp per year (to double check the data)
df <- dplyr::full_join(arbclim, hfclim)
df$tmean <- as.numeric(df$tmean)
df$sp_ind <- paste(df$species, df$ind, sep="_")
df$gdd <- ave(df$tmean, df$sp_ind, df$site, df$method, FUN=cumsum)
df.bb <- df[(df$day==df$dayz),]
df.bb$species <- as.numeric(df.bb$species)
bball <- full_join(df.bb, df.prov)
View(bball)
rm(list=ls())
options(stringsAsFactors = FALSE)
#### Questions to address:
# GDDlo ~ urban + (urban|species)
## Let's start with Question 1 first...
#library(rethinking)
library(RColorBrewer)
library(viridis)
library(lme4)
library(ggplot2)
library(gridExtra)
library(rstan)
## Let's load some real data to check out.
setwd("~/Documents/git/microclimates/analyses/")
if(FALSE){
ws <- read.csv("output/clean_gdd_chill_bbanddvr.csv")
mean(ws$gdd_bb, na.rm=TRUE) ## 292
sd(ws$gdd_bb, na.rm = TRUE) ## 116
mean(ws$budburst) ## 109.15
sd(ws$budburst) ## 14.22
mean(ws$budburst[ws$type=="Harvard Forest"]) ## 132.75
mean(ws$budburst[ws$type=="Treespotters"]) ## 112.45
}
use.urban = TRUE
use.provenance = FALSE
if(use.urban == TRUE & use.provenance == TRUE){
print("Error has occurred. Can't have both urban and provenance equal TRUE!")
}
if(use.urban == FALSE & use.provenance == FALSE){
print("Error has occurred. Can't have both urban and provenance equal TRUE!")
}
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
daysperyr <- 200 #### just to make sure we don't get any NAs
nspps <- 20
ninds <- 10
nobs <- nspps*ninds
nsites <- 2
nmicros <- 10
nmethods <- 2 ## weather station and hobo logger to start (want to eventually add in gridded climate data)
doybbfstar <- 80 ## day of budburst now (this should be mu_a_sp)
doybbfstarsd <- 10 ### sigma_a_sp
dayz <- rep(1:daysperyr, nobs)
cc.arb <- 8
microarb.effect <- 0
sigma.arb <- 2
microsigmaarb.effect <- 0   #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
cc.hf <- 8
microhf.effect <- 0
sigma.hf <- 2
microsigmahf.effect <- 0  #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
#source("simulations/micro_databuildfx.R")
source("simulations/micro_processfx.R")
cols <-viridis_pal(option="viridis")(3)
## Just a quick check on GDDs
quartz(width=4, height=4)
ggplot(bball, aes(x=bb)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site)))
### Okay, first let's check on site level varition in temperature
#### Before moving on, let's look at the data a bit
ws <- ggplot(df[(df$method=="ws"),], aes(x=tmean)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site))) + ggtitle("Weather Station") +
coord_cartesian(xlim=c(-10, 25))
hl <- ggplot(df[(df$method=="hobo"),], aes(x=tmean)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site))) + ggtitle("Hobo Logger") +
coord_cartesian(xlim=c(-10, 25))
quartz(width=6, height=4)
grid.arrange(ws, hl, ncol=2)
### Now let's look at GDD differences between methods
quartz(width=6, height=5)
par(mfrow=c(1,2))
my.pal <- viridis_pal(option="magma")(20)
my.pch <- c(15:16)
plot(gdd ~ species, col=my.pal[as.factor(bball$species[bball$method=="ws"])], pch=my.pch[as.factor(bball$site[bball$method=="ws"])],
data = bball[(bball$method=="ws"),], main="Weather Station",
ylab="GDD", ylim=c(200, 700))
abline(h=mean(bball$gdd[bball$method=="ws"]), lwd=3)
plot(gdd ~ species, col=my.pal[as.factor(bball$species)], pch=my.pch[as.factor(bball$site)], data = bball[(bball$method=="hobo"),], main="Hobo Logger",
ylab="GDD", ylim=c(200, 700))
abline(h=mean(bball$gdd[bball$method=="hobo"]), lwd=3)
View(bball)
bball <- full_join(df.bb, df.prov)
View(bball)
View(bball)
# Maybe I should use estimates for fstar from real models?
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
#### Questions to address:
# GDDlo ~ urban + (urban|species)
## Let's start with Question 1 first...
#library(rethinking)
library(RColorBrewer)
library(viridis)
library(lme4)
library(ggplot2)
library(gridExtra)
library(rstan)
## Let's load some real data to check out.
setwd("~/Documents/git/microclimates/analyses/")
if(FALSE){
ws <- read.csv("output/clean_gdd_chill_bbanddvr.csv")
mean(ws$gdd_bb, na.rm=TRUE) ## 292
sd(ws$gdd_bb, na.rm = TRUE) ## 116
mean(ws$budburst) ## 109.15
sd(ws$budburst) ## 14.22
mean(ws$budburst[ws$type=="Harvard Forest"]) ## 132.75
mean(ws$budburst[ws$type=="Treespotters"]) ## 112.45
}
use.urban = TRUE
use.provenance = FALSE
if(use.urban == TRUE & use.provenance == TRUE){
print("Error has occurred. Can't have both urban and provenance equal TRUE!")
}
if(use.urban == FALSE & use.provenance == FALSE){
print("Error has occurred. Can't have both urban and provenance equal TRUE!")
}
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
daysperyr <- 200 #### just to make sure we don't get any NAs
nspps <- 20
ninds <- 10
nobs <- nspps*ninds
nsites <- 2
nmicros <- 10
nmethods <- 2 ## weather station and hobo logger to start (want to eventually add in gridded climate data)
doybbfstar <- 80 ## day of budburst now (this should be mu_a_sp)
doybbfstarsd <- 10 ### sigma_a_sp
dayz <- rep(1:daysperyr, nobs)
cc.arb <- 8
microarb.effect <- 0
sigma.arb <- 2
microsigmaarb.effect <- 0   #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
cc.hf <- 8
microhf.effect <- 0
sigma.hf <- 2
microsigmahf.effect <- 0  #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
#source("simulations/micro_databuildfx.R")
source("simulations/micro_processfx.R")
cols <-viridis_pal(option="viridis")(3)
## Just a quick check on GDDs
quartz(width=4, height=4)
ggplot(bball, aes(x=bb)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site)))
### Okay, first let's check on site level varition in temperature
#### Before moving on, let's look at the data a bit
ws <- ggplot(df[(df$method=="ws"),], aes(x=tmean)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site))) + ggtitle("Weather Station") +
coord_cartesian(xlim=c(-10, 25))
hl <- ggplot(df[(df$method=="hobo"),], aes(x=tmean)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site))) + ggtitle("Hobo Logger") +
coord_cartesian(xlim=c(-10, 25))
quartz(width=6, height=4)
grid.arrange(ws, hl, ncol=2)
### Now let's look at GDD differences between methods
quartz(width=6, height=5)
par(mfrow=c(1,2))
my.pal <- viridis_pal(option="magma")(20)
my.pch <- c(15:16)
plot(gdd ~ species, col=my.pal[as.factor(bball$species[bball$method=="ws"])], pch=my.pch[as.factor(bball$site[bball$method=="ws"])],
data = bball[(bball$method=="ws"),], main="Weather Station",
ylab="GDD", ylim=c(200, 700))
abline(h=mean(bball$gdd[bball$method=="ws"]), lwd=3)
plot(gdd ~ species, col=my.pal[as.factor(bball$species)], pch=my.pch[as.factor(bball$site)], data = bball[(bball$method=="hobo"),], main="Hobo Logger",
ylab="GDD", ylim=c(200, 700))
abline(h=mean(bball$gdd[bball$method=="hobo"]), lwd=3)
rm(list=ls())
options(stringsAsFactors = FALSE)
#### Questions to address:
# GDDlo ~ urban + (urban|species)
## Let's start with Question 1 first...
#library(rethinking)
library(RColorBrewer)
library(viridis)
library(lme4)
library(ggplot2)
library(gridExtra)
library(rstan)
## Let's load some real data to check out.
setwd("~/Documents/git/microclimates/analyses/")
if(FALSE){
ws <- read.csv("output/clean_gdd_chill_bbanddvr.csv")
mean(ws$gdd_bb, na.rm=TRUE) ## 292
sd(ws$gdd_bb, na.rm = TRUE) ## 116
mean(ws$budburst) ## 109.15
sd(ws$budburst) ## 14.22
mean(ws$budburst[ws$type=="Harvard Forest"]) ## 132.75
mean(ws$budburst[ws$type=="Treespotters"]) ## 112.45
}
use.urban = TRUE
use.provenance = FALSE
if(use.urban == TRUE & use.provenance == TRUE){
print("Error has occurred. Can't have both urban and provenance equal TRUE!")
}
if(use.urban == FALSE & use.provenance == FALSE){
print("Error has occurred. Can't have both urban and provenance equal TRUE!")
}
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
daysperyr <- 200 #### just to make sure we don't get any NAs
nspps <- 20
ninds <- 10
nobs <- nspps*ninds
nsites <- 2
nmicros <- 10
nmethods <- 2 ## weather station and hobo logger to start (want to eventually add in gridded climate data)
doybbfstar <- 80 ## day of budburst now (this should be mu_a_sp)
doybbfstarsd <- 10 ### sigma_a_sp
dayz <- rep(1:daysperyr, nobs)
cc.arb <- 8
microarb.effect <- 0
sigma.arb <- 2
microsigmaarb.effect <- 0   #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
cc.hf <- 8
microhf.effect <- 0
sigma.hf <- 2
microsigmahf.effect <- 0  #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
#source("simulations/micro_databuildfx.R")
source("simulations/micro_processfx.R")
cols <-viridis_pal(option="viridis")(3)
## Just a quick check on GDDs
quartz(width=4, height=4)
ggplot(bball, aes(x=bb)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site)))
### Okay, first let's check on site level varition in temperature
#### Before moving on, let's look at the data a bit
ws <- ggplot(df[(df$method=="ws"),], aes(x=tmean)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site))) + ggtitle("Weather Station") +
coord_cartesian(xlim=c(-10, 25))
hl <- ggplot(df[(df$method=="hobo"),], aes(x=tmean)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site))) + ggtitle("Hobo Logger") +
coord_cartesian(xlim=c(-10, 25))
quartz(width=6, height=4)
grid.arrange(ws, hl, ncol=2)
### Now let's look at GDD differences between methods
quartz(width=6, height=5)
par(mfrow=c(1,2))
my.pal <- viridis_pal(option="magma")(20)
my.pch <- c(15:16)
plot(gdd ~ species, col=my.pal[as.factor(bball$species[bball$method=="ws"])], pch=my.pch[as.factor(bball$site[bball$method=="ws"])],
data = bball[(bball$method=="ws"),], main="Weather Station",
ylab="GDD", ylim=c(200, 700))
abline(h=mean(bball$gdd[bball$method=="ws"]), lwd=3)
plot(gdd ~ species, col=my.pal[as.factor(bball$species[bball$method=="hobo"])], pch=my.pch[as.factor(bball$site[bball$method=="hobo"])], data = bball[(bball$method=="hobo"),], main="Hobo Logger",
ylab="GDD", ylim=c(200, 700))
abline(h=mean(bball$gdd[bball$method=="hobo"]), lwd=3)
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
#### Questions to address:
# GDDlo ~ urban + (urban|species)
## Let's start with Question 1 first...
#library(rethinking)
library(RColorBrewer)
library(viridis)
library(lme4)
library(ggplot2)
library(gridExtra)
library(rstan)
## Let's load some real data to check out.
setwd("~/Documents/git/microclimates/analyses/")
if(FALSE){
ws <- read.csv("output/clean_gdd_chill_bbanddvr.csv")
mean(ws$gdd_bb, na.rm=TRUE) ## 292
sd(ws$gdd_bb, na.rm = TRUE) ## 116
mean(ws$budburst) ## 109.15
sd(ws$budburst) ## 14.22
mean(ws$budburst[ws$type=="Harvard Forest"]) ## 132.75
mean(ws$budburst[ws$type=="Treespotters"]) ## 112.45
}
use.urban = TRUE
use.provenance = FALSE
if(use.urban == TRUE & use.provenance == TRUE){
print("Error has occurred. Can't have both urban and provenance equal TRUE!")
}
if(use.urban == FALSE & use.provenance == FALSE){
print("Error has occurred. Can't have both urban and provenance equal TRUE!")
}
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
daysperyr <- 200 #### just to make sure we don't get any NAs
nspps <- 20
ninds <- 10
nobs <- nspps*ninds
nsites <- 2
nmicros <- 10
nmethods <- 2 ## weather station and hobo logger to start (want to eventually add in gridded climate data)
doybbfstar <- 80 ## day of budburst now (this should be mu_a_sp)
doybbfstarsd <- 10 ### sigma_a_sp
dayz <- rep(1:daysperyr, nobs)
cc.arb <- 6
microarb.effect <- 0
sigma.arb <- 2
microsigmaarb.effect <- 0   #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
cc.hf <- 6
microhf.effect <- 0
sigma.hf <- 2
microsigmahf.effect <- 0  #### by keeping the sigmas the same for the microsites (line 76 & 81) we assume that the microclimatic effects are the same across sites
#source("simulations/micro_databuildfx.R")
source("simulations/micro_processfx.R")
cols <-viridis_pal(option="viridis")(3)
## Just a quick check on GDDs
quartz(width=4, height=4)
ggplot(bball, aes(x=bb)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site)))
### Okay, first let's check on site level varition in temperature
#### Before moving on, let's look at the data a bit
ws <- ggplot(df[(df$method=="ws"),], aes(x=tmean)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site))) + ggtitle("Weather Station") +
coord_cartesian(xlim=c(-10, 25))
hl <- ggplot(df[(df$method=="hobo"),], aes(x=tmean)) + geom_histogram(aes(fill=site)) + theme_classic() +
scale_fill_manual(name="Site", values=cols, labels=sort(unique(df$site))) + ggtitle("Hobo Logger") +
coord_cartesian(xlim=c(-10, 25))
quartz(width=6, height=4)
grid.arrange(ws, hl, ncol=2)
### Now let's look at GDD differences between methods
quartz(width=6, height=5)
par(mfrow=c(1,2))
my.pal <- viridis_pal(option="magma")(20)
my.pch <- c(15:16)
plot(gdd ~ species, col=my.pal[as.factor(bball$species[bball$method=="ws"])], pch=my.pch[as.factor(bball$site[bball$method=="ws"])],
data = bball[(bball$method=="ws"),], main="Weather Station",
ylab="GDD", ylim=c(200, 700))
abline(h=mean(bball$gdd[bball$method=="ws"]), lwd=3)
plot(gdd ~ species, col=my.pal[as.factor(bball$species[bball$method=="hobo"])], pch=my.pch[as.factor(bball$site[bball$method=="hobo"])], data = bball[(bball$method=="hobo"),], main="Hobo Logger",
ylab="GDD", ylim=c(200, 700))
abline(h=mean(bball$gdd[bball$method=="hobo"]), lwd=3)
